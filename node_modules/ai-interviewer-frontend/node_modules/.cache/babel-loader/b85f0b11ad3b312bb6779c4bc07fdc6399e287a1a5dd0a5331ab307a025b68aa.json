{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Projects\\\\AI Interviewer\\\\frontend\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport ProblemPanel from './ProblemPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBox({\n  onSendMessage,\n  isDarkMode\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: 'bot',\n    content: 'Hello! I\\'m your AI coding assistant powered by Qwen. How can I help you today?'\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showScrollButton, setShowScrollButton] = useState(false);\n  const [problemDescription, setProblemDescription] = useState('');\n  const [testCases, setTestCases] = useState([]);\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  const scrollToBottom = (behavior = 'smooth') => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior\n    });\n  };\n\n  // Handle scroll position\n  const handleScroll = () => {\n    if (!messagesContainerRef.current) return;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = messagesContainerRef.current;\n    const isNearBottom = scrollHeight - scrollTop - clientHeight < 100;\n    setShowScrollButton(!isNearBottom);\n  };\n  useEffect(() => {\n    const container = messagesContainerRef.current;\n    if (container) {\n      container.addEventListener('scroll', handleScroll);\n      return () => container.removeEventListener('scroll', handleScroll);\n    }\n  }, []);\n  useEffect(() => {\n    if (!isLoading) {\n      scrollToBottom();\n    }\n  }, [messages, isLoading]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!inputMessage.trim() || isLoading) return;\n\n    // Add user message\n    const newMessages = [...messages, {\n      type: 'user',\n      content: inputMessage\n    }];\n    setMessages(newMessages);\n    setInputMessage('');\n    setIsLoading(true);\n    try {\n      // Call backend API\n      const response = await axios.post('http://localhost:3001/api/chat', {\n        message: inputMessage\n      });\n\n      // If backend returns a string, treat as normal; if object, extract fields\n      let botContent = response.data.response;\n      let problemDesc = response.data.problemDescription;\n      let cases = response.data.testCases;\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: typeof botContent === 'string' ? botContent : JSON.stringify(botContent)\n      }]);\n      if (problemDesc) setProblemDescription(problemDesc);\n      if (cases) setTestCases(cases);\n    } catch (error) {\n      console.error('Error:', error);\n      // Add error message\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Group messages by sender\n  const groupedMessages = messages.reduce((acc, message, index) => {\n    if (index === 0 || messages[index - 1].type !== message.type) {\n      acc.push([message]);\n    } else {\n      acc[acc.length - 1].push(message);\n    }\n    return acc;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `h-full min-h-0 flex flex-col ${isDarkMode ? 'bg-[#1f1f1f]' : 'bg-white'}`,\n    children: [/*#__PURE__*/_jsxDEV(ProblemPanel, {\n      isDarkMode: isDarkMode,\n      problemDescription: problemDescription,\n      testCases: testCases\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 border-b flex items-center justify-between\",\n      style: {\n        backgroundColor: isDarkMode ? '#1a1a1a' : '#f8f9fa',\n        borderColor: isDarkMode ? '#333' : '#e5e7eb'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-lg font-semibold ${isDarkMode ? 'text-[#FF8C00]' : 'text-gray-800'}`,\n          children: \"AI Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-xs px-2 py-1 rounded-full ${isDarkMode ? 'bg-[#333] text-[#FF8C00]' : 'bg-orange-100 text-orange-800'}`,\n          children: \"Qwen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesContainerRef,\n      className: \"flex-1 overflow-y-auto p-4 space-y-4 custom-scrollbar\",\n      children: [groupedMessages.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${group[0].type === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-[85%] space-y-2`,\n          children: group.map((message, messageIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `rounded-lg px-4 py-2 shadow-sm animate-fade-in ${message.type === 'user' ? isDarkMode ? 'bg-[#FF8C00] text-white' : 'bg-[#FF8C00] text-white' : isDarkMode ? 'bg-[#282828] text-[#cccccc]' : 'bg-white text-gray-800 border border-gray-200'} ${messageIndex === 0 ? message.type === 'user' ? 'rounded-br-sm' : 'rounded-bl-sm' : messageIndex === group.length - 1 ? message.type === 'user' ? 'rounded-tr-sm' : 'rounded-tl-sm' : message.type === 'user' ? 'rounded-r-sm' : 'rounded-l-sm'}`,\n            children: [messageIndex === 0 && message.type === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center mb-1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs font-medium text-[#FF8C00]\",\n                children: \"AI Assistant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"whitespace-pre-wrap text-sm\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)]\n          }, messageIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, groupIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), showScrollButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => scrollToBottom(),\n      className: `absolute bottom-20 right-4 p-2 rounded-full shadow-lg transition-all duration-200 ${isDarkMode ? 'bg-[#333] text-[#FF8C00] hover:bg-[#444]' : 'bg-white text-[#FF8C00] hover:bg-gray-100'}`,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-5 h-5\",\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"2\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M19 14l-7 7m0 0l-7-7m7 7V3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"p-3 border-t\",\n      style: {\n        backgroundColor: isDarkMode ? '#1a1a1a' : '#ffffff',\n        borderColor: isDarkMode ? '#333' : '#e5e7eb'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          className: `flex-1 rounded-lg px-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#FF8C00] transition-all duration-200 ${isDarkMode ? 'bg-[#282828] text-[#cccccc] placeholder-[#666666] border border-[#404040]' : 'bg-gray-100 text-gray-800 placeholder-gray-500'}`,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `px-4 py-2 rounded-lg text-sm font-medium bg-[#FF8C00] text-white hover:bg-[#FF7000] focus:outline-none focus:ring-2 focus:ring-[#FF8C00] transition-all duration-200 ${!inputMessage.trim() || isLoading ? 'opacity-50 cursor-not-allowed' : ''}`,\n          disabled: !inputMessage.trim() || isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex items-center space-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Sending...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this) : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"pXad9Z05+5r8djHO2CcwmCXkEQk=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ProblemPanel","jsxDEV","_jsxDEV","ChatBox","onSendMessage","isDarkMode","_s","messages","setMessages","type","content","inputMessage","setInputMessage","isLoading","setIsLoading","showScrollButton","setShowScrollButton","problemDescription","setProblemDescription","testCases","setTestCases","messagesEndRef","messagesContainerRef","scrollToBottom","behavior","_messagesEndRef$curre","current","scrollIntoView","handleScroll","scrollTop","scrollHeight","clientHeight","isNearBottom","container","addEventListener","removeEventListener","handleSubmit","e","preventDefault","trim","newMessages","response","post","message","botContent","data","problemDesc","cases","prev","JSON","stringify","error","console","groupedMessages","reduce","acc","index","push","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","borderColor","ref","map","group","groupIndex","messageIndex","onClick","fill","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","stroke","d","onSubmit","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/components/ChatBox.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ProblemPanel from './ProblemPanel';\r\n\r\nfunction ChatBox({ onSendMessage, isDarkMode }) {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      type: 'bot',\r\n      content: 'Hello! I\\'m your AI coding assistant powered by Qwen. How can I help you today?'\r\n    }\r\n  ]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showScrollButton, setShowScrollButton] = useState(false);\r\n  const [problemDescription, setProblemDescription] = useState('');\r\n  const [testCases, setTestCases] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n  const messagesContainerRef = useRef(null);\r\n\r\n  const scrollToBottom = (behavior = 'smooth') => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior });\r\n  };\r\n\r\n  // Handle scroll position\r\n  const handleScroll = () => {\r\n    if (!messagesContainerRef.current) return;\r\n    \r\n    const { scrollTop, scrollHeight, clientHeight } = messagesContainerRef.current;\r\n    const isNearBottom = scrollHeight - scrollTop - clientHeight < 100;\r\n    setShowScrollButton(!isNearBottom);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const container = messagesContainerRef.current;\r\n    if (container) {\r\n      container.addEventListener('scroll', handleScroll);\r\n      return () => container.removeEventListener('scroll', handleScroll);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      scrollToBottom();\r\n    }\r\n  }, [messages, isLoading]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    // Add user message\r\n    const newMessages = [...messages, { type: 'user', content: inputMessage }];\r\n    setMessages(newMessages);\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Call backend API\r\n      const response = await axios.post('http://localhost:3001/api/chat', {\r\n        message: inputMessage\r\n      });\r\n\r\n      // If backend returns a string, treat as normal; if object, extract fields\r\n      let botContent = response.data.response;\r\n      let problemDesc = response.data.problemDescription;\r\n      let cases = response.data.testCases;\r\n      setMessages(prev => [...prev, {\r\n        type: 'bot',\r\n        content: typeof botContent === 'string' ? botContent : JSON.stringify(botContent)\r\n      }]);\r\n      if (problemDesc) setProblemDescription(problemDesc);\r\n      if (cases) setTestCases(cases);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      // Add error message\r\n      setMessages(prev => [...prev, {\r\n        type: 'bot',\r\n        content: 'Sorry, I encountered an error. Please try again.'\r\n      }]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Group messages by sender\r\n  const groupedMessages = messages.reduce((acc, message, index) => {\r\n    if (index === 0 || messages[index - 1].type !== message.type) {\r\n      acc.push([message]);\r\n    } else {\r\n      acc[acc.length - 1].push(message);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`h-full min-h-0 flex flex-col ${isDarkMode ? 'bg-[#1f1f1f]' : 'bg-white'}`}>\r\n      <ProblemPanel isDarkMode={isDarkMode} problemDescription={problemDescription} testCases={testCases} />\r\n      {/* Chat Header */}\r\n      <div \r\n        className=\"p-3 border-b flex items-center justify-between\"\r\n        style={{\r\n          backgroundColor: isDarkMode ? '#1a1a1a' : '#f8f9fa',\r\n          borderColor: isDarkMode ? '#333' : '#e5e7eb'\r\n        }}\r\n      >\r\n        <div className=\"flex items-center space-x-2\">\r\n          <span className={`text-lg font-semibold ${isDarkMode ? 'text-[#FF8C00]' : 'text-gray-800'}`}>\r\n            AI Assistant\r\n          </span>\r\n          <span className={`text-xs px-2 py-1 rounded-full ${isDarkMode ? 'bg-[#333] text-[#FF8C00]' : 'bg-orange-100 text-orange-800'}`}>\r\n            Qwen\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Messages Area */}\r\n      <div \r\n        ref={messagesContainerRef}\r\n        className=\"flex-1 overflow-y-auto p-4 space-y-4 custom-scrollbar\"\r\n      >\r\n        {groupedMessages.map((group, groupIndex) => (\r\n          <div\r\n            key={groupIndex}\r\n            className={`flex ${group[0].type === 'user' ? 'justify-end' : 'justify-start'}`}\r\n          >\r\n            <div className={`max-w-[85%] space-y-2`}>\r\n              {group.map((message, messageIndex) => (\r\n                <div\r\n                  key={messageIndex}\r\n                  className={`rounded-lg px-4 py-2 shadow-sm animate-fade-in ${\r\n                    message.type === 'user'\r\n                      ? isDarkMode\r\n                        ? 'bg-[#FF8C00] text-white'\r\n                        : 'bg-[#FF8C00] text-white'\r\n                      : isDarkMode\r\n                      ? 'bg-[#282828] text-[#cccccc]'\r\n                      : 'bg-white text-gray-800 border border-gray-200'\r\n                  } ${\r\n                    messageIndex === 0 \r\n                      ? message.type === 'user' \r\n                        ? 'rounded-br-sm' \r\n                        : 'rounded-bl-sm'\r\n                      : messageIndex === group.length - 1\r\n                      ? message.type === 'user'\r\n                        ? 'rounded-tr-sm'\r\n                        : 'rounded-tl-sm'\r\n                      : message.type === 'user'\r\n                      ? 'rounded-r-sm'\r\n                      : 'rounded-l-sm'\r\n                  }`}\r\n                >\r\n                  {messageIndex === 0 && message.type === 'bot' && (\r\n                    <div className=\"flex items-center mb-1\">\r\n                      <span className=\"text-xs font-medium text-[#FF8C00]\">AI Assistant</span>\r\n                    </div>\r\n                  )}\r\n                  <p className=\"whitespace-pre-wrap text-sm\">{message.content}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Scroll to Bottom Button */}\r\n      {showScrollButton && (\r\n        <button\r\n          onClick={() => scrollToBottom()}\r\n          className={`absolute bottom-20 right-4 p-2 rounded-full shadow-lg transition-all duration-200 ${\r\n            isDarkMode \r\n              ? 'bg-[#333] text-[#FF8C00] hover:bg-[#444]' \r\n              : 'bg-white text-[#FF8C00] hover:bg-gray-100'\r\n          }`}\r\n        >\r\n          <svg \r\n            className=\"w-5 h-5\" \r\n            fill=\"none\" \r\n            strokeLinecap=\"round\" \r\n            strokeLinejoin=\"round\" \r\n            strokeWidth=\"2\" \r\n            viewBox=\"0 0 24 24\" \r\n            stroke=\"currentColor\"\r\n          >\r\n            <path d=\"M19 14l-7 7m0 0l-7-7m7 7V3\"></path>\r\n          </svg>\r\n        </button>\r\n      )}\r\n\r\n      {/* Input Area */}\r\n      <form \r\n        onSubmit={handleSubmit} \r\n        className=\"p-3 border-t\"\r\n        style={{\r\n          backgroundColor: isDarkMode ? '#1a1a1a' : '#ffffff',\r\n          borderColor: isDarkMode ? '#333' : '#e5e7eb'\r\n        }}\r\n      >\r\n        <div className=\"flex space-x-2\">\r\n          <input\r\n            type=\"text\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            placeholder=\"Type your message...\"\r\n            className={`flex-1 rounded-lg px-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#FF8C00] transition-all duration-200 ${\r\n              isDarkMode\r\n                ? 'bg-[#282828] text-[#cccccc] placeholder-[#666666] border border-[#404040]'\r\n                : 'bg-gray-100 text-gray-800 placeholder-gray-500'\r\n            }`}\r\n            disabled={isLoading}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className={`px-4 py-2 rounded-lg text-sm font-medium bg-[#FF8C00] text-white hover:bg-[#FF7000] focus:outline-none focus:ring-2 focus:ring-[#FF8C00] transition-all duration-200 ${\r\n              !inputMessage.trim() || isLoading ? 'opacity-50 cursor-not-allowed' : ''\r\n            }`}\r\n            disabled={!inputMessage.trim() || isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <span className=\"flex items-center space-x-1\">\r\n                <span className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\r\n                <span>Sending...</span>\r\n              </span>\r\n            ) : (\r\n              'Send'\r\n            )}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,OAAOA,CAAC;EAAEC,aAAa;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CACvC;IACEa,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE;EACX,CAAC,CACF,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACqB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMyB,cAAc,GAAGxB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMyB,oBAAoB,GAAGzB,MAAM,CAAC,IAAI,CAAC;EAEzC,MAAM0B,cAAc,GAAGA,CAACC,QAAQ,GAAG,QAAQ,KAAK;IAAA,IAAAC,qBAAA;IAC9C,CAAAA,qBAAA,GAAAJ,cAAc,CAACK,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEH;IAAS,CAAC,CAAC;EACtD,CAAC;;EAED;EACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACN,oBAAoB,CAACI,OAAO,EAAE;IAEnC,MAAM;MAAEG,SAAS;MAAEC,YAAY;MAAEC;IAAa,CAAC,GAAGT,oBAAoB,CAACI,OAAO;IAC9E,MAAMM,YAAY,GAAGF,YAAY,GAAGD,SAAS,GAAGE,YAAY,GAAG,GAAG;IAClEf,mBAAmB,CAAC,CAACgB,YAAY,CAAC;EACpC,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACd,MAAMmC,SAAS,GAAGX,oBAAoB,CAACI,OAAO;IAC9C,IAAIO,SAAS,EAAE;MACbA,SAAS,CAACC,gBAAgB,CAAC,QAAQ,EAAEN,YAAY,CAAC;MAClD,OAAO,MAAMK,SAAS,CAACE,mBAAmB,CAAC,QAAQ,EAAEP,YAAY,CAAC;IACpE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN9B,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,SAAS,EAAE;MACdU,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAAChB,QAAQ,EAAEM,SAAS,CAAC,CAAC;EAEzB,MAAMuB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC3B,YAAY,CAAC4B,IAAI,CAAC,CAAC,IAAI1B,SAAS,EAAE;;IAEvC;IACA,MAAM2B,WAAW,GAAG,CAAC,GAAGjC,QAAQ,EAAE;MAAEE,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEC;IAAa,CAAC,CAAC;IAC1EH,WAAW,CAACgC,WAAW,CAAC;IACxB5B,eAAe,CAAC,EAAE,CAAC;IACnBE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,MAAM2B,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,IAAI,CAAC,gCAAgC,EAAE;QAClEC,OAAO,EAAEhC;MACX,CAAC,CAAC;;MAEF;MACA,IAAIiC,UAAU,GAAGH,QAAQ,CAACI,IAAI,CAACJ,QAAQ;MACvC,IAAIK,WAAW,GAAGL,QAAQ,CAACI,IAAI,CAAC5B,kBAAkB;MAClD,IAAI8B,KAAK,GAAGN,QAAQ,CAACI,IAAI,CAAC1B,SAAS;MACnCX,WAAW,CAACwC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5BvC,IAAI,EAAE,KAAK;QACXC,OAAO,EAAE,OAAOkC,UAAU,KAAK,QAAQ,GAAGA,UAAU,GAAGK,IAAI,CAACC,SAAS,CAACN,UAAU;MAClF,CAAC,CAAC,CAAC;MACH,IAAIE,WAAW,EAAE5B,qBAAqB,CAAC4B,WAAW,CAAC;MACnD,IAAIC,KAAK,EAAE3B,YAAY,CAAC2B,KAAK,CAAC;IAChC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B;MACA3C,WAAW,CAACwC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5BvC,IAAI,EAAE,KAAK;QACXC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRI,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMuC,eAAe,GAAG9C,QAAQ,CAAC+C,MAAM,CAAC,CAACC,GAAG,EAAEZ,OAAO,EAAEa,KAAK,KAAK;IAC/D,IAAIA,KAAK,KAAK,CAAC,IAAIjD,QAAQ,CAACiD,KAAK,GAAG,CAAC,CAAC,CAAC/C,IAAI,KAAKkC,OAAO,CAAClC,IAAI,EAAE;MAC5D8C,GAAG,CAACE,IAAI,CAAC,CAACd,OAAO,CAAC,CAAC;IACrB,CAAC,MAAM;MACLY,GAAG,CAACA,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC,CAACD,IAAI,CAACd,OAAO,CAAC;IACnC;IACA,OAAOY,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErD,OAAA;IAAKyD,SAAS,EAAE,gCAAgCtD,UAAU,GAAG,cAAc,GAAG,UAAU,EAAG;IAAAuD,QAAA,gBACzF1D,OAAA,CAACF,YAAY;MAACK,UAAU,EAAEA,UAAW;MAACY,kBAAkB,EAAEA,kBAAmB;MAACE,SAAS,EAAEA;IAAU;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtG9D,OAAA;MACEyD,SAAS,EAAC,gDAAgD;MAC1DM,KAAK,EAAE;QACLC,eAAe,EAAE7D,UAAU,GAAG,SAAS,GAAG,SAAS;QACnD8D,WAAW,EAAE9D,UAAU,GAAG,MAAM,GAAG;MACrC,CAAE;MAAAuD,QAAA,eAEF1D,OAAA;QAAKyD,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAC1C1D,OAAA;UAAMyD,SAAS,EAAE,yBAAyBtD,UAAU,GAAG,gBAAgB,GAAG,eAAe,EAAG;UAAAuD,QAAA,EAAC;QAE7F;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACP9D,OAAA;UAAMyD,SAAS,EAAE,kCAAkCtD,UAAU,GAAG,0BAA0B,GAAG,+BAA+B,EAAG;UAAAuD,QAAA,EAAC;QAEhI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN9D,OAAA;MACEkE,GAAG,EAAE9C,oBAAqB;MAC1BqC,SAAS,EAAC,uDAAuD;MAAAC,QAAA,GAEhEP,eAAe,CAACgB,GAAG,CAAC,CAACC,KAAK,EAAEC,UAAU,kBACrCrE,OAAA;QAEEyD,SAAS,EAAE,QAAQW,KAAK,CAAC,CAAC,CAAC,CAAC7D,IAAI,KAAK,MAAM,GAAG,aAAa,GAAG,eAAe,EAAG;QAAAmD,QAAA,eAEhF1D,OAAA;UAAKyD,SAAS,EAAE,uBAAwB;UAAAC,QAAA,EACrCU,KAAK,CAACD,GAAG,CAAC,CAAC1B,OAAO,EAAE6B,YAAY,kBAC/BtE,OAAA;YAEEyD,SAAS,EAAE,kDACThB,OAAO,CAAClC,IAAI,KAAK,MAAM,GACnBJ,UAAU,GACR,yBAAyB,GACzB,yBAAyB,GAC3BA,UAAU,GACV,6BAA6B,GAC7B,+CAA+C,IAEnDmE,YAAY,KAAK,CAAC,GACd7B,OAAO,CAAClC,IAAI,KAAK,MAAM,GACrB,eAAe,GACf,eAAe,GACjB+D,YAAY,KAAKF,KAAK,CAACZ,MAAM,GAAG,CAAC,GACjCf,OAAO,CAAClC,IAAI,KAAK,MAAM,GACrB,eAAe,GACf,eAAe,GACjBkC,OAAO,CAAClC,IAAI,KAAK,MAAM,GACvB,cAAc,GACd,cAAc,EACjB;YAAAmD,QAAA,GAEFY,YAAY,KAAK,CAAC,IAAI7B,OAAO,CAAClC,IAAI,KAAK,KAAK,iBAC3CP,OAAA;cAAKyD,SAAS,EAAC,wBAAwB;cAAAC,QAAA,eACrC1D,OAAA;gBAAMyD,SAAS,EAAC,oCAAoC;gBAAAC,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CACN,eACD9D,OAAA;cAAGyD,SAAS,EAAC,6BAA6B;cAAAC,QAAA,EAAEjB,OAAO,CAACjC;YAAO;cAAAmD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GA5B3DQ,YAAY;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA6Bd,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC,GArCDO,UAAU;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsCZ,CACN,CAAC,eACF9D,OAAA;QAAKkE,GAAG,EAAE/C;MAAe;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EAGLjD,gBAAgB,iBACfb,OAAA;MACEuE,OAAO,EAAEA,CAAA,KAAMlD,cAAc,CAAC,CAAE;MAChCoC,SAAS,EAAE,qFACTtD,UAAU,GACN,0CAA0C,GAC1C,2CAA2C,EAC9C;MAAAuD,QAAA,eAEH1D,OAAA;QACEyD,SAAS,EAAC,SAAS;QACnBe,IAAI,EAAC,MAAM;QACXC,aAAa,EAAC,OAAO;QACrBC,cAAc,EAAC,OAAO;QACtBC,WAAW,EAAC,GAAG;QACfC,OAAO,EAAC,WAAW;QACnBC,MAAM,EAAC,cAAc;QAAAnB,QAAA,eAErB1D,OAAA;UAAM8E,CAAC,EAAC;QAA4B;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACT,eAGD9D,OAAA;MACE+E,QAAQ,EAAE7C,YAAa;MACvBuB,SAAS,EAAC,cAAc;MACxBM,KAAK,EAAE;QACLC,eAAe,EAAE7D,UAAU,GAAG,SAAS,GAAG,SAAS;QACnD8D,WAAW,EAAE9D,UAAU,GAAG,MAAM,GAAG;MACrC,CAAE;MAAAuD,QAAA,eAEF1D,OAAA;QAAKyD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B1D,OAAA;UACEO,IAAI,EAAC,MAAM;UACXyE,KAAK,EAAEvE,YAAa;UACpBwE,QAAQ,EAAG9C,CAAC,IAAKzB,eAAe,CAACyB,CAAC,CAAC+C,MAAM,CAACF,KAAK,CAAE;UACjDG,WAAW,EAAC,sBAAsB;UAClC1B,SAAS,EAAE,wHACTtD,UAAU,GACN,2EAA2E,GAC3E,gDAAgD,EACnD;UACHiF,QAAQ,EAAEzE;QAAU;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACF9D,OAAA;UACEO,IAAI,EAAC,QAAQ;UACbkD,SAAS,EAAE,wKACT,CAAChD,YAAY,CAAC4B,IAAI,CAAC,CAAC,IAAI1B,SAAS,GAAG,+BAA+B,GAAG,EAAE,EACvE;UACHyE,QAAQ,EAAE,CAAC3E,YAAY,CAAC4B,IAAI,CAAC,CAAC,IAAI1B,SAAU;UAAA+C,QAAA,EAE3C/C,SAAS,gBACRX,OAAA;YAAMyD,SAAS,EAAC,6BAA6B;YAAAC,QAAA,gBAC3C1D,OAAA;cAAMyD,SAAS,EAAC;YAA8E;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACjG9D,OAAA;cAAA0D,QAAA,EAAM;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,GAEP;QACD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC1D,EAAA,CAnOQH,OAAO;AAAAoF,EAAA,GAAPpF,OAAO;AAqOhB,eAAeA,OAAO;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}