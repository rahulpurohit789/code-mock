{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Projects\\\\AI Interviewer\\\\frontend\\\\src\\\\components\\\\ProblemPanel.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProblemPanel({\n  isDarkMode,\n  problemDescription,\n  testCases\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `h-full flex flex-col ${isDarkMode ? 'bg-[#1a1a1a]' : 'bg-white light-mode'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `h-full overflow-y-auto p-4 custom-scrollbar ${isDarkMode ? 'text-[#cccccc]' : 'text-gray-600'}`,\n      children: problemDescription && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prose max-w-none\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"whitespace-pre-wrap\",\n            children: problemDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this), testCases.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `font-semibold mb-2 ${isDarkMode ? 'text-[#cccccc]' : 'text-gray-900'}`,\n            children: \"Example Test Cases:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: testCases.map((testCase, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-3 rounded-lg ${isDarkMode ? 'bg-[#282828]' : 'bg-gray-50'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `font-mono text-sm ${isDarkMode ? 'text-[#cccccc]' : 'text-gray-600'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Input: \", testCase.input]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Expected Output: \", testCase.expectedOutput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = ProblemPanel;\nexport default ProblemPanel;\nvar _c;\n$RefreshReg$(_c, \"ProblemPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ProblemPanel","isDarkMode","problemDescription","testCases","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","testCase","index","input","expectedOutput","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/components/ProblemPanel.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction ProblemPanel({ isDarkMode, problemDescription, testCases }) {\r\n  return (\r\n    <div className={`h-full flex flex-col ${isDarkMode ? 'bg-[#1a1a1a]' : 'bg-white light-mode'}`}>\r\n      <div className={`h-full overflow-y-auto p-4 custom-scrollbar ${isDarkMode ? 'text-[#cccccc]' : 'text-gray-600'}`}>\r\n        {problemDescription && (\r\n          <>\r\n            <div className=\"prose max-w-none\">\r\n              <div className=\"whitespace-pre-wrap\">{problemDescription}</div>\r\n            </div>\r\n            \r\n            {testCases.length > 0 && (\r\n              <div className=\"mt-6\">\r\n                <h3 className={`font-semibold mb-2 ${isDarkMode ? 'text-[#cccccc]' : 'text-gray-900'}`}>\r\n                  Example Test Cases:\r\n                </h3>\r\n                <div className=\"space-y-4\">\r\n                  {testCases.map((testCase, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`p-3 rounded-lg ${\r\n                        isDarkMode ? 'bg-[#282828]' : 'bg-gray-50'\r\n                      }`}\r\n                    >\r\n                      <div className={`font-mono text-sm ${isDarkMode ? 'text-[#cccccc]' : 'text-gray-600'}`}>\r\n                        <div>Input: {testCase.input}</div>\r\n                        <div>Expected Output: {testCase.expectedOutput}</div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProblemPanel; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,YAAYA,CAAC;EAAEC,UAAU;EAAEC,kBAAkB;EAAEC;AAAU,CAAC,EAAE;EACnE,oBACEN,OAAA;IAAKO,SAAS,EAAE,wBAAwBH,UAAU,GAAG,cAAc,GAAG,qBAAqB,EAAG;IAAAI,QAAA,eAC5FR,OAAA;MAAKO,SAAS,EAAE,+CAA+CH,UAAU,GAAG,gBAAgB,GAAG,eAAe,EAAG;MAAAI,QAAA,EAC9GH,kBAAkB,iBACjBL,OAAA,CAAAE,SAAA;QAAAM,QAAA,gBACER,OAAA;UAAKO,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC/BR,OAAA;YAAKO,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAEH;UAAkB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC,EAELN,SAAS,CAACO,MAAM,GAAG,CAAC,iBACnBb,OAAA;UAAKO,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBR,OAAA;YAAIO,SAAS,EAAE,sBAAsBH,UAAU,GAAG,gBAAgB,GAAG,eAAe,EAAG;YAAAI,QAAA,EAAC;UAExF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLZ,OAAA;YAAKO,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvBF,SAAS,CAACQ,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7BhB,OAAA;cAEEO,SAAS,EAAE,kBACTH,UAAU,GAAG,cAAc,GAAG,YAAY,EACzC;cAAAI,QAAA,eAEHR,OAAA;gBAAKO,SAAS,EAAE,qBAAqBH,UAAU,GAAG,gBAAgB,GAAG,eAAe,EAAG;gBAAAI,QAAA,gBACrFR,OAAA;kBAAAQ,QAAA,GAAK,SAAO,EAACO,QAAQ,CAACE,KAAK;gBAAA;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAClCZ,OAAA;kBAAAQ,QAAA,GAAK,mBAAiB,EAACO,QAAQ,CAACG,cAAc;gBAAA;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClD;YAAC,GARDI,KAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASP,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA,eACD;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACO,EAAA,GArCQhB,YAAY;AAuCrB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}