{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Projects\\\\AI Interviewer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Split from 'react-split';\nimport CodeEditor from './components/CodeEditor';\nimport ProblemPanel from './components/ProblemPanel';\nimport TestCasePanel from './components/TestCasePanel';\nimport TestResultPanel from './components/TestResultPanel';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ResizeWrapper from './components/ResizeWrapper';\nimport ChatBox from './components/ChatBox';\nimport './styles/split.css';\nimport './styles/scrollbar.css';\nimport axios from 'axios';\nimport MonacoEditor from '@monaco-editor/react';\nimport TabButton from './components/TabButton';\nimport InterviewProgressBar from './components/InterviewProgressBar';\n\n// Debounce helper function with RAF\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rafDebounce = fn => {\n  let frame;\n  return (...args) => {\n    if (frame) {\n      cancelAnimationFrame(frame);\n    }\n    frame = requestAnimationFrame(() => {\n      fn(...args);\n    });\n  };\n};\nfunction App() {\n  _s();\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [output, setOutput] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [testCases, setTestCases] = useState([]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([]);\n  const [problemDescription, setProblemDescription] = useState('');\n  const [activeTestCase, setActiveTestCase] = useState(0);\n  const [activeTab, setActiveTab] = useState('testcase'); // 'testcase' or 'result'\n  const editorRef = useRef(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const [descriptionHeight, setDescriptionHeight] = useState(50); // percentage\n  const resizeRef = useRef(null);\n  const [interviewPhase, setInterviewPhase] = useState('introduction');\n  const [dsaPhase, setDsaPhase] = useState(null);\n  const [messages, setMessages] = useState([{\n    type: 'bot',\n    content: \"Hello! I'm Code Mock, your AI interviewer. When you're ready to begin, please introduce yourself.\"\n  }]);\n  const [currentProblemId, setCurrentProblemId] = useState(null); // Start with no problem selected\n  const [interviewComplete, setInterviewComplete] = useState(false); // Track interview completion\n\n  // Refs for split instances\n  const horizontalSplitRef = useRef(null);\n  const verticalSplitRef = useRef(null);\n\n  // Handle split updates\n  const handleSplitDrag = useCallback(() => {\n    // Trigger a resize event that will be caught by ResizeObserver\n    window.dispatchEvent(new Event('resize'));\n  }, []);\n\n  // Suppress ResizeObserver errors\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = (...args) => {\n      var _args$, _args$$message;\n      if (typeof args[0] === 'string' && args[0].includes('ResizeObserver loop') || (_args$ = args[0]) !== null && _args$ !== void 0 && (_args$$message = _args$.message) !== null && _args$$message !== void 0 && _args$$message.includes('ResizeObserver loop')) {\n        return;\n      }\n      originalError.call(console, ...args);\n    };\n    return () => {\n      console.error = originalError;\n    };\n  }, []);\n  const themeColors = {\n    background: {\n      primary: isDarkMode ? '#121212' : '#ffffff',\n      secondary: isDarkMode ? '#1e1e1e' : '#f5f5f5'\n    },\n    text: {\n      primary: isDarkMode ? '#ffffff' : '#000000',\n      secondary: isDarkMode ? '#a0a0a0' : '#666666',\n      accent: '#ff8c00'\n    },\n    border: {\n      primary: isDarkMode ? '#333333' : '#e0e0e0',\n      secondary: isDarkMode ? '#404040' : '#d0d0d0'\n    }\n  };\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n  };\n  const handleLanguageChange = newLanguage => {\n    setLanguage(newLanguage);\n  };\n  const handleSendMessage = async (message, payload = null) => {\n    // Add user message to state\n    if (!payload) {\n      setMessages(prev => [...prev, {\n        type: 'user',\n        content: message\n      }]);\n    }\n    setIsLoading(true);\n    try {\n      const postData = payload ? payload : {\n        message\n      };\n      const response = await axios.post('http://localhost:3001/api/chat', postData, {\n        withCredentials: true\n      });\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: response.data.response\n      }]);\n      if (response.data.dsaProblem) {\n        handleDSAProblemReceived(response.data.dsaProblem);\n      }\n      if (response.data.phase) {\n        setInterviewPhase(response.data.phase);\n      }\n      if (response.data.dsaPhase) {\n        setDsaPhase(response.data.dsaPhase);\n      }\n\n      // Handle interview completion\n      if (response.data.interviewComplete) {\n        console.log('🎉 Interview completed!');\n        setInterviewComplete(true);\n        // Add a system message indicating interview completion\n        setMessages(prev => [...prev, {\n          type: 'system',\n          content: '🎉 **Interview Completed!** Thank you for participating in this mock interview. You can now review your performance or start a new interview.'\n        }]);\n\n        // Optionally disable the chat input or show completion UI\n        // You can add a state variable to track this if needed\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Error during chat:', error);\n      const backendError = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An unknown error occurred.';\n      const backendDetails = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.details) || 'Please check the backend console for more information.';\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: `Sorry, I encountered an error. \\n\\n**Error:** ${backendError}\\n**Details:** ${backendDetails}`\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const executeCode = async () => {\n    setIsLoading(true);\n    setOutput(null);\n    try {\n      if (!code || !code.trim()) {\n        throw new Error('Please enter some code to execute');\n      }\n      const response = await axios.post('http://localhost:3001/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: testCases,\n        isSubmission: false\n      });\n      if (!response.data.success) {\n        throw new Error(response.data.error || 'Code execution failed on the server.');\n      }\n      setOutput(response.data.data);\n    } catch (error) {\n      console.error('❌ Error during code execution:', error);\n      setOutput({\n        error: error.message,\n        details: 'Failed to run test cases.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const executeAllTestsAndAnalyze = async () => {\n    setIsLoading(true);\n    setOutput(null);\n    try {\n      if (!code || !code.trim()) {\n        throw new Error('Please enter some code to execute');\n      }\n\n      // Run all test cases including hidden ones\n      const allTestCases = [...testCases, ...hiddenTestCases];\n      const response = await axios.post('http://localhost:3001/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: allTestCases,\n        isSubmission: false\n      });\n      if (!response.data.success) {\n        throw new Error(response.data.error || 'Code execution failed on the server.');\n      }\n      setOutput(response.data.data);\n\n      // Send code to AI for analysis\n      const analysisPayload = {\n        type: 'code_analysis',\n        language: language,\n        code: code.trim(),\n        results: response.data.data,\n        testCases: allTestCases\n      };\n      await handleSendMessage(\"Please analyze my code and ask me questions about it.\", analysisPayload);\n    } catch (error) {\n      console.error('❌ Error during code execution and analysis:', error);\n      setOutput({\n        error: error.message,\n        details: 'Failed to run test cases and analyze code.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleRunTestCase = async () => {\n    // Run single test case\n    const testCase = testCases[activeTestCase];\n    if (!testCase) return;\n\n    // Format the test case input\n    const formattedTestCase = {\n      input: testCase.input,\n      expectedOutput: testCase.expectedOutput\n    };\n    await executeCode();\n  };\n  const handleRunAllTestCases = async () => {\n    await executeCode();\n  };\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  const handleAddTestCase = testCase => {\n    setTestCases([...testCases, testCase]);\n  };\n  const handleTestInput = async input => {\n    try {\n      var _editorRef$current;\n      // Parse the input string as JSON\n      const parsedInput = JSON.parse(input);\n\n      // Get the current code from the editor\n      const code = ((_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.getValue()) || '';\n\n      // Create a function from the code\n      const fn = new Function('input', `\n        ${code}\n        return solution(input);\n      `);\n\n      // Execute the function with the input\n      const result = fn(parsedInput);\n\n      // Convert the result to a string\n      return JSON.stringify(result);\n    } catch (error) {\n      console.error('Error testing input:', error);\n      throw error;\n    }\n  };\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n  const handleMouseDown = e => {\n    setIsResizing(true);\n    e.preventDefault();\n  };\n  const handleMouseMove = e => {\n    if (!isResizing) return;\n    const container = resizeRef.current.parentElement;\n    const containerHeight = container.clientHeight;\n    const mouseY = e.clientY;\n    const containerTop = container.getBoundingClientRect().top;\n    let newHeight = (mouseY - containerTop) / containerHeight * 100;\n    newHeight = Math.min(Math.max(newHeight, 20), 80); // Limit between 20% and 80%\n\n    setDescriptionHeight(newHeight);\n  };\n  const handleMouseUp = () => {\n    setIsResizing(false);\n  };\n  React.useEffect(() => {\n    if (isResizing) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isResizing]);\n\n  // Fetch interview phase on mount and after reset\n  useEffect(() => {\n    // Auto-reset interview session on page load\n    const resetAndInitialize = async () => {\n      try {\n        await axios.post('http://localhost:3001/api/reset', {}, {\n          withCredentials: true\n        });\n        console.log('🔄 Interview session reset on page load');\n        setInterviewPhase('introduction');\n      } catch (error) {\n        console.error('Error resetting interview session:', error);\n        setInterviewPhase('introduction');\n      }\n    };\n    resetAndInitialize();\n  }, []);\n\n  // Add a reset handler\n  const handleResetInterview = async () => {\n    try {\n      await axios.post('http://localhost:3001/api/reset', {}, {\n        withCredentials: true\n      });\n      // Reset all relevant state\n      setMessages([{\n        type: 'bot',\n        content: 'Interview reset. Hello again! Please introduce yourself to begin.'\n      }]);\n      setProblemDescription('');\n      setTestCases([]);\n      setHiddenTestCases([]);\n      setCode('');\n      setOutput(null);\n      setInterviewPhase('introduction');\n      console.log('Frontend state has been reset.');\n    } catch (error) {\n      console.error('Error resetting interview:', error);\n    }\n  };\n\n  // Add a handler for DSA problem data\n  const handleDSAProblemReceived = dsaProblem => {\n    console.log('📋 Received AI-generated DSA problem:', dsaProblem.title);\n\n    // Combine story, problem, and requirements for the description panel\n    const description = `### ${dsaProblem.title}\\n\\n**Story:**\\n${dsaProblem.story}\\n\\n**Problem Statement:**\\n${dsaProblem.problem}\\n\\n**Requirements:**\\n${dsaProblem.requirements.map(req => `- ${req}`).join('\\n')}`;\n    setProblemDescription(description);\n\n    // Format and set visible test cases\n    const formattedVisibleTestCases = dsaProblem.testCases.map(tc => ({\n      input: Array.isArray(tc.inputs) ? tc.inputs.join(', ') : tc.inputs,\n      expectedOutput: tc.output,\n      explanation: tc.explanation\n    }));\n    setTestCases(formattedVisibleTestCases);\n\n    // Format and set hidden test cases\n    const formattedHiddenTestCases = dsaProblem.hiddenTestCases.map(tc => ({\n      input: Array.isArray(tc.inputs) ? tc.inputs.join(', ') : tc.inputs,\n      expectedOutput: tc.output\n    }));\n    setHiddenTestCases(formattedHiddenTestCases);\n    console.log('🗃️ Visible Test Cases:', formattedVisibleTestCases);\n    console.log('🤫 Hidden Test Cases:', formattedHiddenTestCases);\n\n    // Set editor content to the skeleton code for the current language\n    if (dsaProblem.skeletonCode && dsaProblem.skeletonCode[language]) {\n      setCode(dsaProblem.skeletonCode[language]);\n      console.log(`✏️ Set skeleton code for ${language}.`);\n    }\n  };\n  const handlePhaseTransition = async (newPhase, newDsaPhase = null) => {\n    console.log(`🚀 Forcing transition to: ${newPhase}${newDsaPhase ? ` (dsaPhase: ${newDsaPhase})` : ''}`);\n    try {\n      const postData = {\n        phase: newPhase\n      };\n      if (newDsaPhase) {\n        postData.dsaPhase = newDsaPhase;\n      }\n      await axios.post('http://localhost:3001/api/force-transition', postData, {\n        withCredentials: true\n      });\n      setInterviewPhase(newPhase);\n      if (newDsaPhase) {\n        setDsaPhase(newDsaPhase);\n      }\n\n      // Add a system message to the chat\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: `Switched to ${newPhase.replace('_', ' ')}${newDsaPhase ? ` (${newDsaPhase.replace('_', ' ')})` : ''} phase. Please provide your input to continue.`\n      }]);\n\n      // Optionally reset parts of the state\n      if (newPhase !== 'dsa_progressive') {\n        setProblemDescription('');\n        setTestCases([]);\n        setHiddenTestCases([]);\n        setCode('');\n        setOutput(null);\n        setDsaPhase(null);\n      }\n    } catch (error) {\n      console.error('Error forcing phase transition:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    style: {\n      backgroundColor: themeColors.background.primary\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isDarkMode: isDarkMode,\n      toggleTheme: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between bg-white dark:bg-[#1e1e1e] border-b px-4 py-2\",\n      style: {\n        borderColor: themeColors.border.primary\n      },\n      children: [/*#__PURE__*/_jsxDEV(InterviewProgressBar, {\n        phase: interviewPhase,\n        dsaPhase: dsaPhase,\n        onPhaseClick: handlePhaseTransition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetInterview,\n        className: \"px-3 py-1 rounded bg-orange-500 text-white hover:bg-orange-600 text-sm\",\n        children: \"Reset Interview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 px-4 py-2 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(ResizeWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Split, {\n          className: `flex h-full ${isDarkMode ? 'dark' : ''}`,\n          sizes: [40, 60],\n          minSize: [300, 400],\n          expandToMin: false,\n          gutterSize: 8,\n          gutterAlign: \"center\",\n          snapOffset: 30,\n          dragInterval: 1,\n          direction: \"horizontal\",\n          cursor: \"col-resize\",\n          onDrag: handleSplitDrag,\n          ref: horizontalSplitRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full overflow-hidden flex flex-col\",\n            style: {\n              backgroundColor: themeColors.background.secondary\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(Split, {\n                direction: \"vertical\",\n                sizes: [60, 40],\n                minSize: [200, 150],\n                gutterSize: 8,\n                className: \"split-wrapper h-full\",\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column'\n                },\n                onDrag: handleSplitDrag,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"overflow-hidden\",\n                  children: /*#__PURE__*/_jsxDEV(ProblemPanel, {\n                    isDarkMode: isDarkMode,\n                    problemDescription: problemDescription,\n                    testCases: testCases\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 overflow-auto\",\n                  children: /*#__PURE__*/_jsxDEV(ChatBox, {\n                    isDarkMode: isDarkMode,\n                    messages: messages,\n                    isLoading: isLoading,\n                    onSendMessage: handleSendMessage,\n                    interviewComplete: interviewComplete\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(Split, {\n              className: \"flex flex-col h-full\",\n              sizes: [65, 35],\n              minSize: [200, 100],\n              expandToMin: false,\n              gutterSize: 8,\n              gutterAlign: \"center\",\n              snapOffset: 30,\n              dragInterval: 1,\n              direction: \"vertical\",\n              cursor: \"row-resize\",\n              onDrag: handleSplitDrag,\n              ref: verticalSplitRef,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full overflow-hidden\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mb-2 p-2\",\n                  style: {\n                    backgroundColor: themeColors.background.secondary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: language,\n                      onChange: e => handleLanguageChange(e.target.value),\n                      className: \"px-3 py-1 rounded-md\",\n                      style: {\n                        backgroundColor: themeColors.background.primary,\n                        color: themeColors.text.primary,\n                        borderColor: themeColors.border.secondary\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"python\",\n                        children: \"Python\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 550,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"javascript\",\n                        children: \"JavaScript\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 551,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"java\",\n                        children: \"Java\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 552,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"cpp\",\n                        children: \"C++\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 553,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => executeCode(),\n                      disabled: isLoading,\n                      className: \"px-4 py-1 rounded-md transition-colors duration-150\",\n                      style: {\n                        backgroundColor: themeColors.border.primary,\n                        color: themeColors.text.primary,\n                        opacity: isLoading ? 0.7 : 1\n                      },\n                      children: \"Run\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 558,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => executeAllTestsAndAnalyze(),\n                      disabled: isLoading,\n                      className: \"px-4 py-1 rounded-md transition-colors duration-150\",\n                      style: {\n                        backgroundColor: themeColors.text.accent,\n                        color: themeColors.text.primary,\n                        opacity: isLoading ? 0.7 : 1\n                      },\n                      children: \"Run All Tests & Analyze\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-[calc(100%-48px)] overflow-hidden\",\n                  children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n                    code: code,\n                    language: language,\n                    onCodeChange: handleCodeChange,\n                    onLanguageChange: handleLanguageChange,\n                    isDarkMode: isDarkMode,\n                    themeColors: themeColors,\n                    problemDescription: problemDescription,\n                    testCases: testCases\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full overflow-hidden\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex h-full\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-1/2 border-r\",\n                    style: {\n                      borderColor: themeColors.border.primary\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TestCasePanel, {\n                      testCases: testCases,\n                      hiddenTestCases: hiddenTestCases,\n                      activeTestCase: activeTestCase,\n                      onTestCaseChange: setActiveTestCase,\n                      isDarkMode: isDarkMode,\n                      onAddTestCase: handleAddTestCase,\n                      onTestInput: handleTestInput,\n                      themeColors: themeColors\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-1/2\",\n                    children: /*#__PURE__*/_jsxDEV(TestResultPanel, {\n                      output: output,\n                      isDarkMode: isDarkMode,\n                      themeColors: themeColors\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UESNgHTEuYVVnsXx8MC67ALp2cA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Split","CodeEditor","ProblemPanel","TestCasePanel","TestResultPanel","Header","Footer","ResizeWrapper","ChatBox","axios","MonacoEditor","TabButton","InterviewProgressBar","jsxDEV","_jsxDEV","rafDebounce","fn","frame","args","cancelAnimationFrame","requestAnimationFrame","App","_s","code","setCode","language","setLanguage","output","setOutput","isLoading","setIsLoading","isDarkMode","setIsDarkMode","testCases","setTestCases","hiddenTestCases","setHiddenTestCases","problemDescription","setProblemDescription","activeTestCase","setActiveTestCase","activeTab","setActiveTab","editorRef","isResizing","setIsResizing","descriptionHeight","setDescriptionHeight","resizeRef","interviewPhase","setInterviewPhase","dsaPhase","setDsaPhase","messages","setMessages","type","content","currentProblemId","setCurrentProblemId","interviewComplete","setInterviewComplete","horizontalSplitRef","verticalSplitRef","handleSplitDrag","window","dispatchEvent","Event","originalError","console","error","_args$","_args$$message","includes","message","call","themeColors","background","primary","secondary","text","accent","border","handleCodeChange","newCode","handleLanguageChange","newLanguage","handleSendMessage","payload","prev","postData","response","post","withCredentials","data","dsaProblem","handleDSAProblemReceived","phase","log","_error$response","_error$response$data","_error$response2","_error$response2$data","backendError","backendDetails","details","executeCode","trim","Error","isSubmission","success","executeAllTestsAndAnalyze","allTestCases","analysisPayload","results","handleRunTestCase","testCase","formattedTestCase","input","expectedOutput","handleRunAllTestCases","toggleTheme","handleAddTestCase","handleTestInput","_editorRef$current","parsedInput","JSON","parse","current","getValue","Function","result","stringify","handleEditorDidMount","editor","monaco","handleMouseDown","e","preventDefault","handleMouseMove","container","parentElement","containerHeight","clientHeight","mouseY","clientY","containerTop","getBoundingClientRect","top","newHeight","Math","min","max","handleMouseUp","addEventListener","removeEventListener","resetAndInitialize","handleResetInterview","title","description","story","problem","requirements","map","req","join","formattedVisibleTestCases","tc","Array","isArray","inputs","explanation","formattedHiddenTestCases","skeletonCode","handlePhaseTransition","newPhase","newDsaPhase","replace","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","borderColor","onPhaseClick","onClick","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","direction","cursor","onDrag","ref","display","flexDirection","onSendMessage","value","onChange","target","color","disabled","opacity","onCodeChange","onLanguageChange","onTestCaseChange","onAddTestCase","onTestInput","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Split from 'react-split';\nimport CodeEditor from './components/CodeEditor';\nimport ProblemPanel from './components/ProblemPanel';\nimport TestCasePanel from './components/TestCasePanel';\nimport TestResultPanel from './components/TestResultPanel';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ResizeWrapper from './components/ResizeWrapper';\nimport ChatBox from './components/ChatBox';\nimport './styles/split.css';\nimport './styles/scrollbar.css';\nimport axios from 'axios';\nimport MonacoEditor from '@monaco-editor/react';\nimport TabButton from './components/TabButton';\nimport InterviewProgressBar from './components/InterviewProgressBar';\n\n// Debounce helper function with RAF\nconst rafDebounce = (fn) => {\n  let frame;\n  return (...args) => {\n    if (frame) {\n      cancelAnimationFrame(frame);\n    }\n    frame = requestAnimationFrame(() => {\n      fn(...args);\n    });\n  };\n};\n\nfunction App() {\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [output, setOutput] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [testCases, setTestCases] = useState([]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([]);\n  const [problemDescription, setProblemDescription] = useState('');\n  const [activeTestCase, setActiveTestCase] = useState(0);\n  const [activeTab, setActiveTab] = useState('testcase'); // 'testcase' or 'result'\n  const editorRef = useRef(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const [descriptionHeight, setDescriptionHeight] = useState(50); // percentage\n  const resizeRef = useRef(null);\n  const [interviewPhase, setInterviewPhase] = useState('introduction');\n  const [dsaPhase, setDsaPhase] = useState(null);\n  const [messages, setMessages] = useState([\n    {\n      type: 'bot',\n      content: \"Hello! I'm Code Mock, your AI interviewer. When you're ready to begin, please introduce yourself.\"\n    }\n  ]);\n  const [currentProblemId, setCurrentProblemId] = useState(null); // Start with no problem selected\n  const [interviewComplete, setInterviewComplete] = useState(false); // Track interview completion\n\n  // Refs for split instances\n  const horizontalSplitRef = useRef(null);\n  const verticalSplitRef = useRef(null);\n\n  // Handle split updates\n  const handleSplitDrag = useCallback(() => {\n    // Trigger a resize event that will be caught by ResizeObserver\n    window.dispatchEvent(new Event('resize'));\n  }, []);\n\n  // Suppress ResizeObserver errors\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = (...args) => {\n      if (\n        typeof args[0] === 'string' &&\n        args[0].includes('ResizeObserver loop') ||\n        args[0]?.message?.includes('ResizeObserver loop')\n      ) {\n        return;\n      }\n      originalError.call(console, ...args);\n    };\n\n    return () => {\n      console.error = originalError;\n    };\n  }, []);\n\n  const themeColors = {\n    background: {\n      primary: isDarkMode ? '#121212' : '#ffffff',\n      secondary: isDarkMode ? '#1e1e1e' : '#f5f5f5',\n    },\n    text: {\n      primary: isDarkMode ? '#ffffff' : '#000000',\n      secondary: isDarkMode ? '#a0a0a0' : '#666666',\n      accent: '#ff8c00',\n    },\n    border: {\n      primary: isDarkMode ? '#333333' : '#e0e0e0',\n      secondary: isDarkMode ? '#404040' : '#d0d0d0',\n    },\n  };\n\n  const handleCodeChange = (newCode) => {\n    setCode(newCode);\n  };\n\n  const handleLanguageChange = (newLanguage) => {\n    setLanguage(newLanguage);\n  };\n\n  const handleSendMessage = async (message, payload = null) => {\n    // Add user message to state\n    if (!payload) {\n      setMessages(prev => [...prev, { type: 'user', content: message }]);\n    }\n    setIsLoading(true);\n\n    try {\n      const postData = payload ? payload : { message };\n      \n      const response = await axios.post('http://localhost:3001/api/chat', postData, {\n        withCredentials: true\n      });\n\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: response.data.response\n      }]);\n\n      if (response.data.dsaProblem) {\n        handleDSAProblemReceived(response.data.dsaProblem);\n      }\n      \n      if(response.data.phase) {\n        setInterviewPhase(response.data.phase);\n      }\n      \n      if(response.data.dsaPhase) {\n        setDsaPhase(response.data.dsaPhase);\n      }\n\n      // Handle interview completion\n      if(response.data.interviewComplete) {\n        console.log('🎉 Interview completed!');\n        setInterviewComplete(true);\n        // Add a system message indicating interview completion\n        setMessages(prev => [...prev, {\n          type: 'system',\n          content: '🎉 **Interview Completed!** Thank you for participating in this mock interview. You can now review your performance or start a new interview.'\n        }]);\n        \n        // Optionally disable the chat input or show completion UI\n        // You can add a state variable to track this if needed\n      }\n\n    } catch (error) {\n      console.error('Error during chat:', error);\n      const backendError = error.response?.data?.error || 'An unknown error occurred.';\n      const backendDetails = error.response?.data?.details || 'Please check the backend console for more information.';\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: `Sorry, I encountered an error. \\n\\n**Error:** ${backendError}\\n**Details:** ${backendDetails}`\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const executeCode = async () => {\n    setIsLoading(true);\n    setOutput(null);\n\n    try {\n      if (!code || !code.trim()) {\n        throw new Error('Please enter some code to execute');\n      }\n\n      const response = await axios.post('http://localhost:3001/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: testCases,\n        isSubmission: false\n      });\n\n      if (!response.data.success) {\n        throw new Error(response.data.error || 'Code execution failed on the server.');\n      }\n      \n      setOutput(response.data.data);\n\n    } catch (error) {\n      console.error('❌ Error during code execution:', error);\n      setOutput({\n        error: error.message,\n        details: 'Failed to run test cases.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const executeAllTestsAndAnalyze = async () => {\n    setIsLoading(true);\n    setOutput(null);\n\n    try {\n      if (!code || !code.trim()) {\n        throw new Error('Please enter some code to execute');\n      }\n\n      // Run all test cases including hidden ones\n      const allTestCases = [...testCases, ...hiddenTestCases];\n      \n      const response = await axios.post('http://localhost:3001/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: allTestCases,\n        isSubmission: false\n      });\n\n      if (!response.data.success) {\n        throw new Error(response.data.error || 'Code execution failed on the server.');\n      }\n      \n      setOutput(response.data.data);\n\n      // Send code to AI for analysis\n      const analysisPayload = {\n        type: 'code_analysis',\n        language: language,\n        code: code.trim(),\n        results: response.data.data,\n        testCases: allTestCases\n      };\n      \n      await handleSendMessage(\"Please analyze my code and ask me questions about it.\", analysisPayload);\n\n    } catch (error) {\n      console.error('❌ Error during code execution and analysis:', error);\n      setOutput({\n        error: error.message,\n        details: 'Failed to run test cases and analyze code.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRunTestCase = async () => {\n    // Run single test case\n    const testCase = testCases[activeTestCase];\n    if (!testCase) return;\n\n    // Format the test case input\n    const formattedTestCase = {\n      input: testCase.input,\n      expectedOutput: testCase.expectedOutput\n    };\n\n    await executeCode();\n  };\n\n  const handleRunAllTestCases = async () => {\n    await executeCode();\n  };\n\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n\n  const handleAddTestCase = (testCase) => {\n    setTestCases([...testCases, testCase]);\n  };\n\n  const handleTestInput = async (input) => {\n    try {\n      // Parse the input string as JSON\n      const parsedInput = JSON.parse(input);\n      \n      // Get the current code from the editor\n      const code = editorRef.current?.getValue() || '';\n      \n      // Create a function from the code\n      const fn = new Function('input', `\n        ${code}\n        return solution(input);\n      `);\n      \n      // Execute the function with the input\n      const result = fn(parsedInput);\n      \n      // Convert the result to a string\n      return JSON.stringify(result);\n    } catch (error) {\n      console.error('Error testing input:', error);\n      throw error;\n    }\n  };\n\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n\n  const handleMouseDown = (e) => {\n    setIsResizing(true);\n    e.preventDefault();\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isResizing) return;\n    \n    const container = resizeRef.current.parentElement;\n    const containerHeight = container.clientHeight;\n    const mouseY = e.clientY;\n    const containerTop = container.getBoundingClientRect().top;\n    \n    let newHeight = ((mouseY - containerTop) / containerHeight) * 100;\n    newHeight = Math.min(Math.max(newHeight, 20), 80); // Limit between 20% and 80%\n    \n    setDescriptionHeight(newHeight);\n  };\n\n  const handleMouseUp = () => {\n    setIsResizing(false);\n  };\n\n  React.useEffect(() => {\n    if (isResizing) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isResizing]);\n\n  // Fetch interview phase on mount and after reset\n  useEffect(() => {\n    // Auto-reset interview session on page load\n    const resetAndInitialize = async () => {\n      try {\n        await axios.post('http://localhost:3001/api/reset', {}, { withCredentials: true });\n        console.log('🔄 Interview session reset on page load');\n        setInterviewPhase('introduction');\n      } catch (error) {\n        console.error('Error resetting interview session:', error);\n        setInterviewPhase('introduction');\n      }\n    };\n    \n    resetAndInitialize();\n  }, []);\n\n  // Add a reset handler\n  const handleResetInterview = async () => {\n    try {\n      await axios.post('http://localhost:3001/api/reset', {}, { withCredentials: true });\n      // Reset all relevant state\n      setMessages([\n        {\n          type: 'bot',\n          content: 'Interview reset. Hello again! Please introduce yourself to begin.'\n        }\n      ]);\n      setProblemDescription('');\n      setTestCases([]);\n      setHiddenTestCases([]);\n      setCode('');\n      setOutput(null);\n      setInterviewPhase('introduction');\n      console.log('Frontend state has been reset.');\n\n    } catch (error) {\n      console.error('Error resetting interview:', error);\n    }\n  };\n\n  // Add a handler for DSA problem data\n  const handleDSAProblemReceived = (dsaProblem) => {\n    console.log('📋 Received AI-generated DSA problem:', dsaProblem.title);\n    \n    // Combine story, problem, and requirements for the description panel\n    const description = `### ${dsaProblem.title}\\n\\n**Story:**\\n${dsaProblem.story}\\n\\n**Problem Statement:**\\n${dsaProblem.problem}\\n\\n**Requirements:**\\n${dsaProblem.requirements.map(req => `- ${req}`).join('\\n')}`;\n    setProblemDescription(description);\n    \n    // Format and set visible test cases\n    const formattedVisibleTestCases = dsaProblem.testCases.map(tc => ({\n      input: Array.isArray(tc.inputs) ? tc.inputs.join(', ') : tc.inputs,\n      expectedOutput: tc.output,\n      explanation: tc.explanation,\n    }));\n    setTestCases(formattedVisibleTestCases);\n    \n    // Format and set hidden test cases\n    const formattedHiddenTestCases = dsaProblem.hiddenTestCases.map(tc => ({\n      input: Array.isArray(tc.inputs) ? tc.inputs.join(', ') : tc.inputs,\n      expectedOutput: tc.output,\n    }));\n    setHiddenTestCases(formattedHiddenTestCases);\n    \n    console.log('🗃️ Visible Test Cases:', formattedVisibleTestCases);\n    console.log('🤫 Hidden Test Cases:', formattedHiddenTestCases);\n    \n    // Set editor content to the skeleton code for the current language\n    if (dsaProblem.skeletonCode && dsaProblem.skeletonCode[language]) {\n      setCode(dsaProblem.skeletonCode[language]);\n      console.log(`✏️ Set skeleton code for ${language}.`);\n    }\n  };\n\n  const handlePhaseTransition = async (newPhase, newDsaPhase = null) => {\n    console.log(`🚀 Forcing transition to: ${newPhase}${newDsaPhase ? ` (dsaPhase: ${newDsaPhase})` : ''}`);\n    try {\n      const postData = { phase: newPhase };\n      if (newDsaPhase) {\n        postData.dsaPhase = newDsaPhase;\n      }\n      \n      await axios.post('http://localhost:3001/api/force-transition', \n        postData,\n        { withCredentials: true }\n      );\n      \n      setInterviewPhase(newPhase);\n      if (newDsaPhase) {\n        setDsaPhase(newDsaPhase);\n      }\n\n      // Add a system message to the chat\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: `Switched to ${newPhase.replace('_', ' ')}${newDsaPhase ? ` (${newDsaPhase.replace('_', ' ')})` : ''} phase. Please provide your input to continue.`\n      }]);\n      \n      // Optionally reset parts of the state\n      if (newPhase !== 'dsa_progressive') {\n        setProblemDescription('');\n        setTestCases([]);\n        setHiddenTestCases([]);\n        setCode('');\n        setOutput(null);\n        setDsaPhase(null);\n      }\n      \n    } catch (error) {\n      console.error('Error forcing phase transition:', error);\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col\" style={{ backgroundColor: themeColors.background.primary }}>\n      <Header isDarkMode={isDarkMode} toggleTheme={toggleTheme} />\n\n      {/* Progress Bar and Reset Button */}\n      <div className=\"flex items-center justify-between bg-white dark:bg-[#1e1e1e] border-b px-4 py-2\" style={{ borderColor: themeColors.border.primary }}>\n        <InterviewProgressBar \n          phase={interviewPhase}\n          dsaPhase={dsaPhase}\n          onPhaseClick={handlePhaseTransition}\n        />\n        <button\n          onClick={handleResetInterview}\n          className=\"px-3 py-1 rounded bg-orange-500 text-white hover:bg-orange-600 text-sm\"\n        >\n          Reset Interview\n        </button>\n      </div>\n\n      <main className=\"flex-1 px-4 py-2 sm:px-6 lg:px-8\">\n        <ResizeWrapper>\n          <Split \n            className={`flex h-full ${isDarkMode ? 'dark' : ''}`}\n            sizes={[40, 60]}\n            minSize={[300, 400]}\n            expandToMin={false}\n            gutterSize={8}\n            gutterAlign=\"center\"\n            snapOffset={30}\n            dragInterval={1}\n            direction=\"horizontal\"\n            cursor=\"col-resize\"\n            onDrag={handleSplitDrag}\n            ref={horizontalSplitRef}\n          >\n            {/* Left side */}\n            <div className=\"h-full overflow-hidden flex flex-col\" style={{ backgroundColor: themeColors.background.secondary }}>\n              <div className=\"flex-1 overflow-hidden\">\n                <Split\n                  direction=\"vertical\"\n                  sizes={[60, 40]}\n                  minSize={[200, 150]}\n                  gutterSize={8}\n                  className=\"split-wrapper h-full\"\n                  style={{ display: 'flex', flexDirection: 'column' }}\n                  onDrag={handleSplitDrag}\n                >\n                  {/* Problem Description */}\n                  <div className=\"overflow-hidden\">\n                    <ProblemPanel\n                      isDarkMode={isDarkMode}\n                      problemDescription={problemDescription}\n                      testCases={testCases}\n                    />\n                  </div>\n\n                  {/* Chat Interface */}\n                  <div className=\"flex-1 overflow-auto\">\n                    <ChatBox\n                      isDarkMode={isDarkMode}\n                      messages={messages}\n                      isLoading={isLoading}\n                      onSendMessage={handleSendMessage}\n                      interviewComplete={interviewComplete}\n                    />\n                  </div>\n                </Split>\n              </div>\n            </div>\n\n            {/* Right side - Code Editor and Test Cases/Results */}\n            <div className=\"h-full overflow-hidden\">\n              <Split\n                className=\"flex flex-col h-full\"\n                sizes={[65, 35]}\n                minSize={[200, 100]}\n                expandToMin={false}\n                gutterSize={8}\n                gutterAlign=\"center\"\n                snapOffset={30}\n                dragInterval={1}\n                direction=\"vertical\"\n                cursor=\"row-resize\"\n                onDrag={handleSplitDrag}\n                ref={verticalSplitRef}\n              >\n                {/* Code Editor Section */}\n                <div className=\"w-full h-full overflow-hidden\">\n                  <div className=\"flex justify-between items-center mb-2 p-2\" style={{ backgroundColor: themeColors.background.secondary }}>\n                    <div className=\"flex items-center space-x-4\">\n                      <select\n                        value={language}\n                        onChange={(e) => handleLanguageChange(e.target.value)}\n                        className=\"px-3 py-1 rounded-md\"\n                        style={{\n                          backgroundColor: themeColors.background.primary,\n                          color: themeColors.text.primary,\n                          borderColor: themeColors.border.secondary,\n                        }}\n                      >\n                        <option value=\"python\">Python</option>\n                        <option value=\"javascript\">JavaScript</option>\n                        <option value=\"java\">Java</option>\n                        <option value=\"cpp\">C++</option>\n                      </select>\n                    </div>\n\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => executeCode()}\n                        disabled={isLoading}\n                        className=\"px-4 py-1 rounded-md transition-colors duration-150\"\n                        style={{\n                          backgroundColor: themeColors.border.primary,\n                          color: themeColors.text.primary,\n                          opacity: isLoading ? 0.7 : 1,\n                        }}\n                      >\n                        Run\n                      </button>\n                      <button\n                        onClick={() => executeAllTestsAndAnalyze()}\n                        disabled={isLoading}\n                        className=\"px-4 py-1 rounded-md transition-colors duration-150\"\n                        style={{\n                          backgroundColor: themeColors.text.accent,\n                          color: themeColors.text.primary,\n                          opacity: isLoading ? 0.7 : 1,\n                        }}\n                      >\n                        Run All Tests & Analyze\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"h-[calc(100%-48px)] overflow-hidden\">\n                    <CodeEditor\n                      code={code}\n                      language={language}\n                      onCodeChange={handleCodeChange}\n                      onLanguageChange={handleLanguageChange}\n                      isDarkMode={isDarkMode}\n                      themeColors={themeColors}\n                      problemDescription={problemDescription}\n                      testCases={testCases}\n                    />\n                  </div>\n                </div>\n\n                {/* Test Cases and Results Section */}\n                <div className=\"w-full h-full overflow-hidden\">\n                  <div className=\"flex h-full\">\n                    {/* Test Cases Panel */}\n                    <div className=\"w-1/2 border-r\" style={{ borderColor: themeColors.border.primary }}>\n                      <TestCasePanel\n                        testCases={testCases}\n                        hiddenTestCases={hiddenTestCases}\n                        activeTestCase={activeTestCase}\n                        onTestCaseChange={setActiveTestCase}\n                        isDarkMode={isDarkMode}\n                        onAddTestCase={handleAddTestCase}\n                        onTestInput={handleTestInput}\n                        themeColors={themeColors}\n                      />\n                    </div>\n\n                    {/* Test Results Panel */}\n                    <div className=\"w-1/2\">\n                      <TestResultPanel\n                        output={output}\n                        isDarkMode={isDarkMode}\n                        themeColors={themeColors}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </Split>\n            </div>\n          </Split>\n        </ResizeWrapper>\n      </main>\n\n      <Footer isDarkMode={isDarkMode} />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}