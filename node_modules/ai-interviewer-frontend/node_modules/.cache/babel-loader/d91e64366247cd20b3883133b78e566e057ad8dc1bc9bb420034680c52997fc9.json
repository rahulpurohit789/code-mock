{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Projects\\\\AI Interviewer\\\\frontend\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n\n// Utility function to format message content with markdown-like syntax\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatMessageContent = (content, messageType) => {\n  if (!content) return content;\n\n  // Split content into lines for processing\n  const lines = content.split('\\n');\n  return lines.map((line, lineIndex) => {\n    // Handle bullet points (lines starting with * or -)\n    if (line.trim().startsWith('*') || line.trim().startsWith('-')) {\n      const bulletContent = line.trim().substring(1).trim();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-start mb-1 bullet-point\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-600 mr-2 mt-1 text-lg\",\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flex-1\",\n          children: formatInlineText(bulletContent, messageType)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, lineIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Handle numbered lists (lines starting with numbers followed by dot or emoji)\n    if (/^\\d+[\\.\\s]/.test(line.trim()) || /^[1-9]️⃣/.test(line.trim())) {\n      const match = line.trim().match(/^(\\d+[\\.\\s]|[1-9]️⃣)\\s*(.*)/);\n      if (match) {\n        const number = match[1];\n        const listContent = match[2];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start mb-1 bullet-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600 mr-2 mt-1 font-semibold text-lg\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex-1\",\n            children: formatInlineText(listContent, messageType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, lineIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    // Handle emoji numbered lists (lines starting with emoji numbers)\n    if (/^[1-9]️⃣/.test(line.trim())) {\n      const emojiMatch = line.trim().match(/^([1-9]️⃣)\\s*(.*)/);\n      if (emojiMatch) {\n        const emoji = emojiMatch[1];\n        const listContent = emojiMatch[2];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start mb-1 bullet-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-2 mt-1 text-lg\",\n            children: emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex-1\",\n            children: formatInlineText(listContent, messageType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, lineIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    // Handle separators (lines with dashes)\n    if (line.trim().startsWith('---')) {\n      return /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"my-3 border-gray-400 opacity-50\"\n      }, lineIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Handle code blocks (lines with multiple backticks)\n    if (line.trim().startsWith('```')) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-block my-2\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"m-0\",\n          children: line.trim().substring(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, lineIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Regular lines\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-1\",\n      children: formatInlineText(line, messageType)\n    }, lineIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  });\n};\n\n// Utility function to format inline text (bold, italic, etc.)\nconst formatInlineText = (text, messageType) => {\n  if (!text) return text;\n\n  // Split by ** for bold text\n  const parts = text.split(/(\\*\\*.*?\\*\\*)/g);\n  return parts.map((part, index) => {\n    // Bold text\n    if (part.startsWith('**') && part.endsWith('**')) {\n      const boldClass = messageType === 'user' ? 'font-bold text-white' // Use white for user messages for better contrast\n      : 'font-bold text-orange-400';\n      return /*#__PURE__*/_jsxDEV(\"strong\", {\n        className: boldClass,\n        children: part.slice(2, -2)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Italic text (single asterisks)\n    if (part.startsWith('*') && part.endsWith('*') && part.length > 2) {\n      return /*#__PURE__*/_jsxDEV(\"em\", {\n        className: \"italic\",\n        children: part.slice(1, -1)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Code blocks (backticks)\n    if (part.startsWith('`') && part.endsWith('`')) {\n      return /*#__PURE__*/_jsxDEV(\"code\", {\n        className: \"bg-gray-200 px-1 py-0.5 rounded text-sm font-mono\",\n        children: part.slice(1, -1)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    }\n    return part;\n  });\n};\nfunction ChatBox({\n  messages,\n  isLoading,\n  onSendMessage,\n  isDarkMode\n}) {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeechRecognitionSupported, setIsSpeechRecognitionSupported] = useState(false);\n  const [audioLevel, setAudioLevel] = useState(0);\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const sourceRef = useRef(null);\n  const animationFrameIdRef = useRef(null);\n  const micStreamRef = useRef(null);\n  const finalTranscriptRef = useRef('');\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [inputMessage]);\n  const stopVisualizer = () => {\n    if (animationFrameIdRef.current) {\n      cancelAnimationFrame(animationFrameIdRef.current);\n    }\n    if (micStreamRef.current) {\n      micStreamRef.current.getTracks().forEach(track => track.stop());\n      micStreamRef.current = null;\n    }\n    if (sourceRef.current) {\n      sourceRef.current.disconnect();\n    }\n    setAudioLevel(0);\n  };\n  const startVisualizer = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      micStreamRef.current = stream;\n      if (!audioContextRef.current) {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n      const audioContext = audioContextRef.current;\n      analyserRef.current = audioContext.createAnalyser();\n      sourceRef.current = audioContext.createMediaStreamSource(stream);\n      sourceRef.current.connect(analyserRef.current);\n      analyserRef.current.fftSize = 256;\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      const visualize = () => {\n        if (!analyserRef.current) return;\n        analyserRef.current.getByteFrequencyData(dataArray);\n        let sum = 0;\n        for (let i = 0; i < bufferLength; i++) {\n          sum += dataArray[i];\n        }\n        const avg = sum / bufferLength;\n        const normalized = Math.min(avg / 128, 1) * 1.5;\n        setAudioLevel(normalized);\n        animationFrameIdRef.current = requestAnimationFrame(visualize);\n      };\n      visualize();\n    } catch (err) {\n      console.error(\"Error accessing microphone for visualizer:\", err);\n    }\n  };\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      setIsSpeechRecognitionSupported(true);\n      const recognition = new SpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n        finalTranscriptRef.current = inputMessage;\n        startVisualizer();\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n        stopVisualizer();\n      };\n      recognition.onresult = event => {\n        let interim_transcript = '';\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          const transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            finalTranscriptRef.current += ' ' + transcript;\n          } else {\n            interim_transcript += transcript;\n          }\n        }\n        setInputMessage(finalTranscriptRef.current.trim() + ' ' + interim_transcript);\n      };\n      recognition.onerror = event => {\n        console.error(\"Speech recognition error\", event.error);\n        setIsListening(false);\n        stopVisualizer();\n      };\n      recognitionRef.current = recognition;\n      return () => {\n        stopVisualizer();\n        if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\n          audioContextRef.current.close();\n        }\n        if (recognitionRef.current) {\n          recognitionRef.current.abort();\n        }\n      };\n    } else {\n      // Web Speech API not supported\n      console.warn(\"Web Speech API is not supported in this browser.\");\n      setIsSpeechRecognitionSupported(false);\n    }\n  }, []);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!inputMessage.trim() || isLoading) return;\n    onSendMessage(inputMessage);\n    setInputMessage('');\n    finalTranscriptRef.current = '';\n  };\n  const handleVoiceClick = () => {\n    if (isListening) {\n      recognitionRef.current.stop();\n    } else {\n      if (recognitionRef.current) {\n        recognitionRef.current.start();\n      } else {\n        alert(\"Voice recognition is not supported in your browser. Please try Chrome or Edge.\");\n      }\n    }\n  };\n\n  // Group messages by sender\n  const groupedMessages = messages.reduce((acc, message, index) => {\n    if (index === 0 || messages[index - 1].type !== message.type) {\n      acc.push([message]);\n    } else {\n      acc[acc.length - 1].push(message);\n    }\n    return acc;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `h-full flex flex-col p-4 ${isDarkMode ? 'bg-[#1e1e1e] text-white' : 'bg-white text-black'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto pr-2 custom-scrollbar\",\n      children: [groupedMessages.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex mb-4 ${group[0].type === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-xl lg:max-w-2xl`,\n          children: group.map((message, msgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `px-4 py-3 rounded-lg mb-1 shadow-sm chat-message ${group[0].type === 'user' ? 'bg-orange-500 text-white chat-message-user' : isDarkMode ? 'bg-gray-700 chat-message-assistant' : 'bg-gray-200 chat-message-assistant'} ${group.length > 1 ? msgIndex === 0 ? 'rounded-b-none' : msgIndex === group.length - 1 ? 'rounded-t-none' : 'rounded-none' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"whitespace-pre-wrap\",\n              children: formatMessageContent(message.content, group[0].type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this)\n          }, msgIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-4 py-2 rounded-lg ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dot-pulse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-start p-1 rounded-lg border transition-all duration-300 ${isDarkMode ? 'bg-gray-700 border-gray-600' : 'bg-gray-200 border-gray-300'} focus-within:ring-2 focus-within:ring-orange-500 focus-within:border-orange-500`,\n        style: {\n          boxShadow: isListening ? `0 0 0 ${audioLevel * 3}px rgba(249, 115, 22, 0.5)` : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          rows: 1,\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          className: \"flex-1 px-3 py-2 bg-transparent focus:outline-none resize-none overflow-y-auto max-h-40 custom-scrollbar\",\n          disabled: isLoading,\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSubmit(e);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center self-end space-x-1 p-1\",\n          children: [isSpeechRecognitionSupported && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleVoiceClick,\n              className: `relative z-10 p-2 rounded-full text-white transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white ${isListening ? 'bg-red-500' : 'bg-blue-500 hover:bg-blue-600'}`,\n              \"aria-label\": isListening ? 'Stop listening' : 'Start listening',\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isLoading || !inputMessage.trim(),\n            className: `p-2 rounded-full text-white transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white ${isLoading || !inputMessage.trim() ? 'bg-gray-400 cursor-not-allowed' : 'bg-orange-500 hover:bg-orange-600'}`,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              viewBox: \"0 0 20 20\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.428A1 1 0 0010 16.57l5.318-1.518a1 1 0 001.17-1.41L10.894 2.553z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"oNdMzMDgmenQl1RaD0e/eZnysIw=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","formatMessageContent","content","messageType","lines","split","map","line","lineIndex","trim","startsWith","bulletContent","substring","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formatInlineText","test","match","number","listContent","emojiMatch","emoji","text","parts","part","index","endsWith","boldClass","slice","length","ChatBox","messages","isLoading","onSendMessage","isDarkMode","_s","inputMessage","setInputMessage","isListening","setIsListening","isSpeechRecognitionSupported","setIsSpeechRecognitionSupported","audioLevel","setAudioLevel","messagesEndRef","recognitionRef","audioContextRef","analyserRef","sourceRef","animationFrameIdRef","micStreamRef","finalTranscriptRef","textareaRef","current","style","height","scrollHeight","stopVisualizer","cancelAnimationFrame","getTracks","forEach","track","stop","disconnect","startVisualizer","stream","navigator","mediaDevices","getUserMedia","audio","window","AudioContext","webkitAudioContext","audioContext","createAnalyser","createMediaStreamSource","connect","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","visualize","getByteFrequencyData","sum","i","avg","normalized","Math","min","requestAnimationFrame","err","console","error","SpeechRecognition","webkitSpeechRecognition","recognition","continuous","interimResults","lang","onstart","onend","onresult","event","interim_transcript","resultIndex","results","transcript","isFinal","onerror","state","close","abort","warn","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","handleSubmit","e","preventDefault","handleVoiceClick","start","alert","groupedMessages","reduce","acc","message","type","push","group","msgIndex","ref","onSubmit","boxShadow","rows","value","onChange","target","placeholder","disabled","onKeyDown","key","shiftKey","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/components/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n// Utility function to format message content with markdown-like syntax\nconst formatMessageContent = (content, messageType) => {\n  if (!content) return content;\n\n  // Split content into lines for processing\n  const lines = content.split('\\n');\n  \n  return lines.map((line, lineIndex) => {\n    // Handle bullet points (lines starting with * or -)\n    if (line.trim().startsWith('*') || line.trim().startsWith('-')) {\n      const bulletContent = line.trim().substring(1).trim();\n      return (\n        <div key={lineIndex} className=\"flex items-start mb-1 bullet-point\">\n          <span className=\"text-gray-600 mr-2 mt-1 text-lg\">•</span>\n          <span className=\"flex-1\">{formatInlineText(bulletContent, messageType)}</span>\n        </div>\n      );\n    }\n    \n    // Handle numbered lists (lines starting with numbers followed by dot or emoji)\n    if (/^\\d+[\\.\\s]/.test(line.trim()) || /^[1-9]️⃣/.test(line.trim())) {\n      const match = line.trim().match(/^(\\d+[\\.\\s]|[1-9]️⃣)\\s*(.*)/);\n      if (match) {\n        const number = match[1];\n        const listContent = match[2];\n        return (\n          <div key={lineIndex} className=\"flex items-start mb-1 bullet-point\">\n            <span className=\"text-gray-600 mr-2 mt-1 font-semibold text-lg\">{number}</span>\n            <span className=\"flex-1\">{formatInlineText(listContent, messageType)}</span>\n          </div>\n        );\n      }\n    }\n    \n    // Handle emoji numbered lists (lines starting with emoji numbers)\n    if (/^[1-9]️⃣/.test(line.trim())) {\n      const emojiMatch = line.trim().match(/^([1-9]️⃣)\\s*(.*)/);\n      if (emojiMatch) {\n        const emoji = emojiMatch[1];\n        const listContent = emojiMatch[2];\n        return (\n          <div key={lineIndex} className=\"flex items-start mb-1 bullet-point\">\n            <span className=\"mr-2 mt-1 text-lg\">{emoji}</span>\n            <span className=\"flex-1\">{formatInlineText(listContent, messageType)}</span>\n          </div>\n        );\n      }\n    }\n    \n    // Handle separators (lines with dashes)\n    if (line.trim().startsWith('---')) {\n      return <hr key={lineIndex} className=\"my-3 border-gray-400 opacity-50\" />;\n    }\n    \n    // Handle code blocks (lines with multiple backticks)\n    if (line.trim().startsWith('```')) {\n      return (\n        <div key={lineIndex} className=\"code-block my-2\">\n          <pre className=\"m-0\">{line.trim().substring(3)}</pre>\n        </div>\n      );\n    }\n    \n    // Regular lines\n    return (\n      <div key={lineIndex} className=\"mb-1\">\n        {formatInlineText(line, messageType)}\n      </div>\n    );\n  });\n};\n\n// Utility function to format inline text (bold, italic, etc.)\nconst formatInlineText = (text, messageType) => {\n  if (!text) return text;\n  \n  // Split by ** for bold text\n  const parts = text.split(/(\\*\\*.*?\\*\\*)/g);\n  \n  return parts.map((part, index) => {\n    // Bold text\n    if (part.startsWith('**') && part.endsWith('**')) {\n      const boldClass = messageType === 'user'\n        ? 'font-bold text-white' // Use white for user messages for better contrast\n        : 'font-bold text-orange-400';\n      return (\n        <strong key={index} className={boldClass}>\n          {part.slice(2, -2)}\n        </strong>\n      );\n    }\n    \n    // Italic text (single asterisks)\n    if (part.startsWith('*') && part.endsWith('*') && part.length > 2) {\n      return (\n        <em key={index} className=\"italic\">\n          {part.slice(1, -1)}\n        </em>\n      );\n    }\n    \n    // Code blocks (backticks)\n    if (part.startsWith('`') && part.endsWith('`')) {\n      return (\n        <code key={index} className=\"bg-gray-200 px-1 py-0.5 rounded text-sm font-mono\">\n          {part.slice(1, -1)}\n        </code>\n      );\n    }\n    \n    return part;\n  });\n};\n\nfunction ChatBox({ messages, isLoading, onSendMessage, isDarkMode }) {\n  const [inputMessage, setInputMessage] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeechRecognitionSupported, setIsSpeechRecognitionSupported] = useState(false);\n  const [audioLevel, setAudioLevel] = useState(0);\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const sourceRef = useRef(null);\n  const animationFrameIdRef = useRef(null);\n  const micStreamRef = useRef(null);\n  const finalTranscriptRef = useRef('');\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [inputMessage]);\n\n  const stopVisualizer = () => {\n    if (animationFrameIdRef.current) {\n      cancelAnimationFrame(animationFrameIdRef.current);\n    }\n    if (micStreamRef.current) {\n      micStreamRef.current.getTracks().forEach(track => track.stop());\n      micStreamRef.current = null;\n    }\n    if (sourceRef.current) {\n      sourceRef.current.disconnect();\n    }\n    setAudioLevel(0);\n  };\n\n  const startVisualizer = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      micStreamRef.current = stream;\n\n      if (!audioContextRef.current) {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n      \n      const audioContext = audioContextRef.current;\n      analyserRef.current = audioContext.createAnalyser();\n      sourceRef.current = audioContext.createMediaStreamSource(stream);\n\n      sourceRef.current.connect(analyserRef.current);\n      analyserRef.current.fftSize = 256;\n      \n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n\n      const visualize = () => {\n        if (!analyserRef.current) return;\n        analyserRef.current.getByteFrequencyData(dataArray);\n        \n        let sum = 0;\n        for (let i = 0; i < bufferLength; i++) {\n          sum += dataArray[i];\n        }\n        const avg = sum / bufferLength;\n        \n        const normalized = Math.min(avg / 128, 1) * 1.5;\n        \n        setAudioLevel(normalized);\n\n        animationFrameIdRef.current = requestAnimationFrame(visualize);\n      };\n\n      visualize();\n    } catch (err) {\n      console.error(\"Error accessing microphone for visualizer:\", err);\n    }\n  };\n\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      setIsSpeechRecognitionSupported(true);\n      const recognition = new SpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n\n      recognition.onstart = () => {\n        setIsListening(true);\n        finalTranscriptRef.current = inputMessage;\n        startVisualizer();\n      };\n\n      recognition.onend = () => {\n        setIsListening(false);\n        stopVisualizer();\n      };\n\n      recognition.onresult = (event) => {\n        let interim_transcript = '';\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          const transcript = event.results[i][0].transcript;\n          if (event.results[i].isFinal) {\n            finalTranscriptRef.current += ' ' + transcript;\n          } else {\n            interim_transcript += transcript;\n          }\n        }\n        setInputMessage(finalTranscriptRef.current.trim() + ' ' + interim_transcript);\n      };\n\n      recognition.onerror = (event) => {\n        console.error(\"Speech recognition error\", event.error);\n        setIsListening(false);\n        stopVisualizer();\n      };\n\n      recognitionRef.current = recognition;\n\n      return () => {\n        stopVisualizer();\n        if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\n          audioContextRef.current.close();\n        }\n        if (recognitionRef.current) {\n          recognitionRef.current.abort();\n        }\n      };\n    } else {\n      // Web Speech API not supported\n      console.warn(\"Web Speech API is not supported in this browser.\");\n      setIsSpeechRecognitionSupported(false);\n    }\n  }, []);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!inputMessage.trim() || isLoading) return;\n    onSendMessage(inputMessage);\n    setInputMessage('');\n    finalTranscriptRef.current = '';\n  };\n\n  const handleVoiceClick = () => {\n    if (isListening) {\n      recognitionRef.current.stop();\n    } else {\n      if (recognitionRef.current) {\n        recognitionRef.current.start();\n      } else {\n        alert(\"Voice recognition is not supported in your browser. Please try Chrome or Edge.\");\n      }\n    }\n  };\n\n  // Group messages by sender\n  const groupedMessages = messages.reduce((acc, message, index) => {\n    if (index === 0 || messages[index - 1].type !== message.type) {\n      acc.push([message]);\n    } else {\n      acc[acc.length - 1].push(message);\n    }\n    return acc;\n  }, []);\n\n  return (\n    <div className={`h-full flex flex-col p-4 ${isDarkMode ? 'bg-[#1e1e1e] text-white' : 'bg-white text-black'}`}>\n      <div className=\"flex-1 overflow-y-auto pr-2 custom-scrollbar\">\n        {groupedMessages.map((group, index) => (\n          <div key={index} className={`flex mb-4 ${group[0].type === 'user' ? 'justify-end' : 'justify-start'}`}>\n            <div className={`max-w-xl lg:max-w-2xl`}>\n              {group.map((message, msgIndex) => (\n                <div\n                  key={msgIndex}\n                  className={`px-4 py-3 rounded-lg mb-1 shadow-sm chat-message ${\n                    group[0].type === 'user'\n                      ? 'bg-orange-500 text-white chat-message-user'\n                      : isDarkMode ? 'bg-gray-700 chat-message-assistant' : 'bg-gray-200 chat-message-assistant'\n                  } ${\n                    group.length > 1 ? \n                      (msgIndex === 0 ? 'rounded-b-none' : msgIndex === group.length - 1 ? 'rounded-t-none' : 'rounded-none') \n                      : ''\n                  }`}\n                >\n                  <div className=\"whitespace-pre-wrap\">\n                    {formatMessageContent(message.content, group[0].type)}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n        {isLoading && (\n          <div className=\"flex justify-start mb-4\">\n            <div className={`px-4 py-2 rounded-lg ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'}`}>\n              <div className=\"flex items-center\">\n                <div className=\"dot-pulse\"></div>\n              </div>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"mt-4\">\n        <div \n          className={`flex items-start p-1 rounded-lg border transition-all duration-300 ${isDarkMode ? 'bg-gray-700 border-gray-600' : 'bg-gray-200 border-gray-300'} focus-within:ring-2 focus-within:ring-orange-500 focus-within:border-orange-500`}\n          style={{\n            boxShadow: isListening ? `0 0 0 ${audioLevel * 3}px rgba(249, 115, 22, 0.5)` : 'none'\n          }}\n        >\n          <textarea\n            ref={textareaRef}\n            rows={1}\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            placeholder=\"Type your message...\"\n            className=\"flex-1 px-3 py-2 bg-transparent focus:outline-none resize-none overflow-y-auto max-h-40 custom-scrollbar\"\n            disabled={isLoading}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSubmit(e);\n              }\n            }}\n          />\n          <div className=\"flex items-center self-end space-x-1 p-1\">\n            {isSpeechRecognitionSupported && (\n              <div className=\"relative flex items-center justify-center\">\n                <button\n                  type=\"button\"\n                  onClick={handleVoiceClick}\n                  className={`relative z-10 p-2 rounded-full text-white transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white ${isListening ? 'bg-red-500' : 'bg-blue-500 hover:bg-blue-600'}`}\n                  aria-label={isListening ? 'Stop listening' : 'Start listening'}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n                  </svg>\n                </button>\n              </div>\n            )}\n            <button\n              type=\"submit\"\n              disabled={isLoading || !inputMessage.trim()}\n              className={`p-2 rounded-full text-white transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white ${isLoading || !inputMessage.trim() ? 'bg-gray-400 cursor-not-allowed' : 'bg-orange-500 hover:bg-orange-600'}`}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.428A1 1 0 0010 16.57l5.318-1.518a1 1 0 001.17-1.41L10.894 2.553z\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatBox; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}