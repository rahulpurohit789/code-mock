{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Projects\\\\AI Interviewer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Split from 'react-split';\nimport CodeEditor from './components/CodeEditor';\nimport ProblemPanel from './components/ProblemPanel';\nimport TestCasePanel from './components/TestCasePanel';\nimport TestResultPanel from './components/TestResultPanel';\nimport SubmissionPanel from './components/SubmissionPanel';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ResizeWrapper from './components/ResizeWrapper';\nimport ChatBox from './components/ChatBox';\nimport './styles/split.css';\nimport './styles/scrollbar.css';\nimport axios from 'axios';\nimport MonacoEditor from '@monaco-editor/react';\nimport TabButton from './components/TabButton';\nimport InterviewProgressBar from './components/InterviewProgressBar';\n\n// Debounce helper function with RAF\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rafDebounce = fn => {\n  let frame;\n  return (...args) => {\n    if (frame) {\n      cancelAnimationFrame(frame);\n    }\n    frame = requestAnimationFrame(() => {\n      fn(...args);\n    });\n  };\n};\nfunction App() {\n  _s();\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [output, setOutput] = useState(null);\n  const [submissionResult, setSubmissionResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [testCases, setTestCases] = useState([]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([]);\n  const [problemDescription, setProblemDescription] = useState('');\n  const [activeTestCase, setActiveTestCase] = useState(0);\n  const [activeTab, setActiveTab] = useState('testcase'); // 'testcase' or 'result'\n  const [showSubmission, setShowSubmission] = useState(false);\n  const editorRef = useRef(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const [descriptionHeight, setDescriptionHeight] = useState(50); // percentage\n  const resizeRef = useRef(null);\n  const [interviewPhase, setInterviewPhase] = useState('introduction');\n  const [messages, setMessages] = useState([{\n    type: 'bot',\n    content: \"Hello! I'm Code Mock, your AI interviewer. When you're ready to begin, please introduce yourself.\"\n  }]);\n\n  // Refs for split instances\n  const horizontalSplitRef = useRef(null);\n  const verticalSplitRef = useRef(null);\n\n  // Handle split updates\n  const handleSplitDrag = useCallback(() => {\n    // Trigger a resize event that will be caught by ResizeObserver\n    window.dispatchEvent(new Event('resize'));\n  }, []);\n\n  // Suppress ResizeObserver errors\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = (...args) => {\n      var _args$, _args$$message;\n      if (typeof args[0] === 'string' && args[0].includes('ResizeObserver loop') || (_args$ = args[0]) !== null && _args$ !== void 0 && (_args$$message = _args$.message) !== null && _args$$message !== void 0 && _args$$message.includes('ResizeObserver loop')) {\n        return;\n      }\n      originalError.call(console, ...args);\n    };\n    return () => {\n      console.error = originalError;\n    };\n  }, []);\n  const themeColors = {\n    background: {\n      primary: isDarkMode ? '#121212' : '#ffffff',\n      secondary: isDarkMode ? '#1e1e1e' : '#f5f5f5'\n    },\n    text: {\n      primary: isDarkMode ? '#ffffff' : '#000000',\n      secondary: isDarkMode ? '#a0a0a0' : '#666666',\n      accent: '#ff8c00'\n    },\n    border: {\n      primary: isDarkMode ? '#333333' : '#e0e0e0',\n      secondary: isDarkMode ? '#404040' : '#d0d0d0'\n    }\n  };\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n  };\n  const handleLanguageChange = newLanguage => {\n    setLanguage(newLanguage);\n  };\n  const handleSendMessage = async (message, payload = null) => {\n    // Add user message to state\n    if (!payload) {\n      setMessages(prev => [...prev, {\n        type: 'user',\n        content: message\n      }]);\n    }\n    setIsLoading(true);\n    try {\n      const postData = payload ? payload : {\n        message\n      };\n      const response = await axios.post('http://localhost:3001/api/chat', postData, {\n        withCredentials: true\n      });\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: response.data.response\n      }]);\n      if (response.data.dsaProblem) {\n        handleDSAProblemReceived(response.data.dsaProblem);\n      }\n      if (response.data.phase) {\n        setInterviewPhase(response.data.phase);\n      }\n    } catch (error) {\n      console.error('Error during chat:', error);\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: 'Sorry, I encountered an error. Please check the console or try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const executeCode = async (isSubmission = false) => {\n    try {\n      setIsLoading(true);\n      setOutput(null);\n\n      // Validate code\n      if (!code || !code.trim()) {\n        const errorOutput = {\n          error: 'Please enter some code to execute'\n        };\n        if (isSubmission) {\n          setSubmissionResult({\n            success: false,\n            error: errorOutput.error\n          });\n          setShowSubmission(true);\n        } else {\n          setOutput(errorOutput);\n        }\n        return;\n      }\n\n      // Determine which test cases to use\n      const testCasesToUse = isSubmission ? [...testCases, ...hiddenTestCases] // Include hidden test cases for submission\n      : testCases; // Only visible test cases for regular test runs\n\n      console.log(`🚀 Executing code (${isSubmission ? 'submission' : 'test run'})`);\n      console.log(`📊 Test cases to run: ${testCasesToUse.length} (${testCases.length} visible + ${hiddenTestCases.length} hidden)`);\n      const response = await axios.post('http://localhost:3001/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: testCasesToUse,\n        isSubmission\n      });\n      console.log('✅ Code execution response received:', response.data.success);\n      if (response.data.success) {\n        if (isSubmission) {\n          // Set submission result first\n          setSubmissionResult(response.data);\n          setShowSubmission(true);\n\n          // Then send to AI for analysis\n          console.log(\"🤖 Sending submission to AI for analysis...\");\n          const analysisPayload = {\n            type: 'dsa_solution',\n            language: language,\n            code: code.trim(),\n            results: response.data.data\n          };\n          try {\n            await handleSendMessage(\"Here is my solution.\", analysisPayload);\n            console.log(\"✅ AI analysis request sent successfully\");\n          } catch (aiError) {\n            console.error(\"❌ Error sending to AI for analysis:\", aiError);\n            // Don't fail the submission if AI analysis fails\n          }\n        } else {\n          // For regular test runs, only show results for visible test cases\n          response.data.data.testResults = response.data.data.testResults.slice(0, testCases.length);\n          setOutput(response.data.data);\n          setActiveTab('result');\n        }\n      } else {\n        const errorOutput = {\n          success: false,\n          error: response.data.error,\n          details: response.data.details\n        };\n        console.log(\"❌ Code execution failed:\", errorOutput);\n        if (isSubmission) {\n          setSubmissionResult(errorOutput);\n          setShowSubmission(true);\n        } else {\n          setOutput(errorOutput);\n        }\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('❌ Error executing code:', error);\n      const errorOutput = {\n        success: false,\n        error: 'Failed to execute code',\n        details: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message\n      };\n      if (isSubmission) {\n        setSubmissionResult(errorOutput);\n        setShowSubmission(true);\n      } else {\n        setOutput(errorOutput);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleRunTestCase = async () => {\n    // Run single test case\n    const testCase = testCases[activeTestCase];\n    if (!testCase) return;\n\n    // Format the test case input\n    const formattedTestCase = {\n      input: testCase.input,\n      expectedOutput: testCase.expectedOutput\n    };\n    await executeCode([formattedTestCase]);\n  };\n  const handleRunAllTestCases = async () => {\n    // Run all visible test cases\n    await executeCode(testCases);\n  };\n  const handleSubmit = async () => {\n    // Run all test cases including hidden ones\n    await executeCode([...testCases, ...hiddenTestCases], true);\n  };\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  const handleAddTestCase = testCase => {\n    setTestCases([...testCases, testCase]);\n  };\n  const handleTestInput = async input => {\n    try {\n      var _editorRef$current;\n      // Parse the input string as JSON\n      const parsedInput = JSON.parse(input);\n\n      // Get the current code from the editor\n      const code = ((_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.getValue()) || '';\n\n      // Create a function from the code\n      const fn = new Function('input', `\n        ${code}\n        return solution(input);\n      `);\n\n      // Execute the function with the input\n      const result = fn(parsedInput);\n\n      // Convert the result to a string\n      return JSON.stringify(result);\n    } catch (error) {\n      console.error('Error testing input:', error);\n      throw error;\n    }\n  };\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n  const handleMouseDown = e => {\n    setIsResizing(true);\n    e.preventDefault();\n  };\n  const handleMouseMove = e => {\n    if (!isResizing) return;\n    const container = resizeRef.current.parentElement;\n    const containerHeight = container.clientHeight;\n    const mouseY = e.clientY;\n    const containerTop = container.getBoundingClientRect().top;\n    let newHeight = (mouseY - containerTop) / containerHeight * 100;\n    newHeight = Math.min(Math.max(newHeight, 20), 80); // Limit between 20% and 80%\n\n    setDescriptionHeight(newHeight);\n  };\n  const handleMouseUp = () => {\n    setIsResizing(false);\n  };\n  React.useEffect(() => {\n    if (isResizing) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isResizing]);\n\n  // Fetch interview phase on mount and after reset\n  useEffect(() => {\n    // Auto-reset interview session on page load\n    const resetAndInitialize = async () => {\n      try {\n        await axios.post('http://localhost:3001/api/reset', {}, {\n          withCredentials: true\n        });\n        console.log('🔄 Interview session reset on page load');\n        setInterviewPhase('introduction');\n      } catch (error) {\n        console.error('Error resetting interview session:', error);\n        setInterviewPhase('introduction');\n      }\n    };\n    resetAndInitialize();\n  }, []);\n\n  // Add a reset handler\n  const handleResetInterview = async () => {\n    try {\n      await axios.post('http://localhost:3001/api/reset', {}, {\n        withCredentials: true\n      });\n      // Reset all relevant state\n      setMessages([{\n        type: 'bot',\n        content: 'Interview reset. Hello again! Please introduce yourself to begin.'\n      }]);\n      setProblemDescription('');\n      setTestCases([]);\n      setHiddenTestCases([]);\n      setCode('');\n      setOutput(null);\n      setSubmissionResult(null);\n      setShowSubmission(false);\n      setInterviewPhase('introduction');\n      console.log('Frontend state has been reset.');\n    } catch (error) {\n      console.error('Error resetting interview:', error);\n    }\n  };\n\n  // Add a handler for DSA problem data\n  const handleDSAProblemReceived = dsaProblem => {\n    console.log('📋 Received AI-generated DSA problem:', dsaProblem.title);\n\n    // Combine story, problem, and requirements for the description panel\n    const description = `### ${dsaProblem.title}\\n\\n**Story:**\\n${dsaProblem.story}\\n\\n**Problem Statement:**\\n${dsaProblem.problem}\\n\\n**Requirements:**\\n${dsaProblem.requirements.map(req => `- ${req}`).join('\\n')}`;\n    setProblemDescription(description);\n\n    // Format and set visible test cases\n    const formattedVisibleTestCases = dsaProblem.testCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output,\n      explanation: tc.explanation\n    }));\n    setTestCases(formattedVisibleTestCases);\n\n    // Format and set hidden test cases\n    const formattedHiddenTestCases = dsaProblem.hiddenTestCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output\n    }));\n    setHiddenTestCases(formattedHiddenTestCases);\n    console.log('🗃️ Visible Test Cases:', formattedVisibleTestCases);\n    console.log('🤫 Hidden Test Cases:', formattedHiddenTestCases);\n\n    // Set editor content to the skeleton code for the current language\n    if (dsaProblem.skeletonCode && dsaProblem.skeletonCode[language]) {\n      setCode(dsaProblem.skeletonCode[language]);\n      console.log(`✏️ Set skeleton code for ${language}.`);\n    } else {\n      // Fallback if skeleton code for the language is missing\n      const fallbackTemplates = {\n        python: `def solution(input_data):\\n    # Your code here\\n    pass`,\n        javascript: `function solution(input_data) {\\n    // Your code here\\n}`,\n        java: `class Solution {\\n    public Object solution(Object input_data) {\\n        // Your code here\\n        return null;\\n    }\\n}`,\n        cpp: `class Solution {\\npublic:\\n    auto solution(auto input_data) {\\n        // Your code here\\n        return {};\\n    }\\n};`\n      };\n      setCode(fallbackTemplates[language]);\n      console.warn(`⚠️ Skeleton code for ${language} not found in AI response. Using fallback.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    style: {\n      backgroundColor: themeColors.background.primary\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isDarkMode: isDarkMode,\n      toggleTheme: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between bg-white dark:bg-[#1e1e1e] border-b px-4 py-2\",\n      style: {\n        borderColor: themeColors.border.primary\n      },\n      children: [/*#__PURE__*/_jsxDEV(InterviewProgressBar, {\n        phase: interviewPhase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetInterview,\n        className: \"px-3 py-1 rounded bg-orange-500 text-white hover:bg-orange-600 text-sm\",\n        children: \"Reset Interview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 px-4 py-2 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(ResizeWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Split, {\n          className: `flex h-full ${isDarkMode ? 'dark' : ''}`,\n          sizes: [40, 60],\n          minSize: [300, 400],\n          expandToMin: false,\n          gutterSize: 8,\n          gutterAlign: \"center\",\n          snapOffset: 30,\n          dragInterval: 1,\n          direction: \"horizontal\",\n          cursor: \"col-resize\",\n          onDrag: handleSplitDrag,\n          ref: horizontalSplitRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full overflow-hidden flex flex-col\",\n            style: {\n              backgroundColor: themeColors.background.secondary\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex border-b\",\n              style: {\n                borderColor: themeColors.border.primary\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSubmission(false),\n                className: \"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\",\n                style: {\n                  color: !showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                  borderColor: !showSubmission ? themeColors.text.accent : 'transparent'\n                },\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this), submissionResult && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSubmission(true),\n                className: \"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\",\n                style: {\n                  color: showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                  borderColor: showSubmission ? themeColors.text.accent : 'transparent'\n                },\n                children: \"Submission\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 overflow-hidden\",\n              children: showSubmission ? /*#__PURE__*/_jsxDEV(SubmissionPanel, {\n                result: submissionResult,\n                isDarkMode: isDarkMode,\n                onClose: () => setShowSubmission(false),\n                themeColors: themeColors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Split, {\n                direction: \"vertical\",\n                sizes: [60, 40],\n                minSize: [200, 150],\n                gutterSize: 8,\n                className: \"split-wrapper h-full\",\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column'\n                },\n                onDrag: handleSplitDrag,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"overflow-hidden\",\n                  children: /*#__PURE__*/_jsxDEV(ProblemPanel, {\n                    isDarkMode: isDarkMode,\n                    problemDescription: problemDescription,\n                    testCases: testCases\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 overflow-auto\",\n                  children: /*#__PURE__*/_jsxDEV(ChatBox, {\n                    isDarkMode: isDarkMode,\n                    messages: messages,\n                    isLoading: isLoading,\n                    onSendMessage: handleSendMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(Split, {\n              className: \"flex flex-col h-full\",\n              sizes: [65, 35],\n              minSize: [200, 100],\n              expandToMin: false,\n              gutterSize: 8,\n              gutterAlign: \"center\",\n              snapOffset: 30,\n              dragInterval: 1,\n              direction: \"vertical\",\n              cursor: \"row-resize\",\n              onDrag: handleSplitDrag,\n              ref: verticalSplitRef,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full overflow-hidden\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mb-2 p-2\",\n                  style: {\n                    backgroundColor: themeColors.background.secondary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: language,\n                      onChange: e => handleLanguageChange(e.target.value),\n                      className: \"px-3 py-1 rounded-md\",\n                      style: {\n                        backgroundColor: themeColors.background.primary,\n                        color: themeColors.text.primary,\n                        borderColor: themeColors.border.secondary\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"python\",\n                        children: \"Python\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 553,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"javascript\",\n                        children: \"JavaScript\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 554,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"java\",\n                        children: \"Java\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 555,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"cpp\",\n                        children: \"C++\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 556,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => executeCode(false),\n                      disabled: isLoading,\n                      className: \"px-4 py-1 rounded-md transition-colors duration-150\",\n                      style: {\n                        backgroundColor: themeColors.border.primary,\n                        color: themeColors.text.primary,\n                        opacity: isLoading ? 0.7 : 1\n                      },\n                      children: \"Run\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 561,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => executeCode(true),\n                      disabled: isLoading,\n                      className: \"px-4 py-1 rounded-md transition-colors duration-150\",\n                      style: {\n                        backgroundColor: themeColors.text.accent,\n                        color: themeColors.text.primary,\n                        opacity: isLoading ? 0.7 : 1\n                      },\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-[calc(100%-48px)] overflow-hidden\",\n                  children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n                    code: code,\n                    language: language,\n                    onCodeChange: handleCodeChange,\n                    onLanguageChange: handleLanguageChange,\n                    isDarkMode: isDarkMode,\n                    themeColors: themeColors\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full overflow-hidden\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex h-full\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-1/2 border-r\",\n                    style: {\n                      borderColor: themeColors.border.primary\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TestCasePanel, {\n                      testCases: testCases,\n                      hiddenTestCases: hiddenTestCases,\n                      activeTestCase: activeTestCase,\n                      onTestCaseChange: setActiveTestCase,\n                      isDarkMode: isDarkMode,\n                      onAddTestCase: handleAddTestCase,\n                      onTestInput: handleTestInput,\n                      themeColors: themeColors\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 605,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-1/2\",\n                    children: /*#__PURE__*/_jsxDEV(TestResultPanel, {\n                      output: output,\n                      isDarkMode: isDarkMode,\n                      themeColors: themeColors\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Mwd6ZQ52GD4CjxbUrUrAacbdFwg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Split","CodeEditor","ProblemPanel","TestCasePanel","TestResultPanel","SubmissionPanel","Header","Footer","ResizeWrapper","ChatBox","axios","MonacoEditor","TabButton","InterviewProgressBar","jsxDEV","_jsxDEV","rafDebounce","fn","frame","args","cancelAnimationFrame","requestAnimationFrame","App","_s","code","setCode","language","setLanguage","output","setOutput","submissionResult","setSubmissionResult","isLoading","setIsLoading","isDarkMode","setIsDarkMode","testCases","setTestCases","hiddenTestCases","setHiddenTestCases","problemDescription","setProblemDescription","activeTestCase","setActiveTestCase","activeTab","setActiveTab","showSubmission","setShowSubmission","editorRef","isResizing","setIsResizing","descriptionHeight","setDescriptionHeight","resizeRef","interviewPhase","setInterviewPhase","messages","setMessages","type","content","horizontalSplitRef","verticalSplitRef","handleSplitDrag","window","dispatchEvent","Event","originalError","console","error","_args$","_args$$message","includes","message","call","themeColors","background","primary","secondary","text","accent","border","handleCodeChange","newCode","handleLanguageChange","newLanguage","handleSendMessage","payload","prev","postData","response","post","withCredentials","data","dsaProblem","handleDSAProblemReceived","phase","executeCode","isSubmission","trim","errorOutput","success","testCasesToUse","log","length","analysisPayload","results","aiError","testResults","slice","details","_error$response","_error$response$data","handleRunTestCase","testCase","formattedTestCase","input","expectedOutput","handleRunAllTestCases","handleSubmit","toggleTheme","handleAddTestCase","handleTestInput","_editorRef$current","parsedInput","JSON","parse","current","getValue","Function","result","stringify","handleEditorDidMount","editor","monaco","handleMouseDown","e","preventDefault","handleMouseMove","container","parentElement","containerHeight","clientHeight","mouseY","clientY","containerTop","getBoundingClientRect","top","newHeight","Math","min","max","handleMouseUp","addEventListener","removeEventListener","resetAndInitialize","handleResetInterview","title","description","story","problem","requirements","map","req","join","formattedVisibleTestCases","tc","explanation","formattedHiddenTestCases","skeletonCode","fallbackTemplates","python","javascript","java","cpp","warn","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","borderColor","onClick","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","direction","cursor","onDrag","ref","color","onClose","display","flexDirection","onSendMessage","value","onChange","target","disabled","opacity","onCodeChange","onLanguageChange","onTestCaseChange","onAddTestCase","onTestInput","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Split from 'react-split';\nimport CodeEditor from './components/CodeEditor';\nimport ProblemPanel from './components/ProblemPanel';\nimport TestCasePanel from './components/TestCasePanel';\nimport TestResultPanel from './components/TestResultPanel';\nimport SubmissionPanel from './components/SubmissionPanel';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ResizeWrapper from './components/ResizeWrapper';\nimport ChatBox from './components/ChatBox';\nimport './styles/split.css';\nimport './styles/scrollbar.css';\nimport axios from 'axios';\nimport MonacoEditor from '@monaco-editor/react';\nimport TabButton from './components/TabButton';\nimport InterviewProgressBar from './components/InterviewProgressBar';\n\n// Debounce helper function with RAF\nconst rafDebounce = (fn) => {\n  let frame;\n  return (...args) => {\n    if (frame) {\n      cancelAnimationFrame(frame);\n    }\n    frame = requestAnimationFrame(() => {\n      fn(...args);\n    });\n  };\n};\n\nfunction App() {\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [output, setOutput] = useState(null);\n  const [submissionResult, setSubmissionResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [testCases, setTestCases] = useState([]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([]);\n  const [problemDescription, setProblemDescription] = useState('');\n  const [activeTestCase, setActiveTestCase] = useState(0);\n  const [activeTab, setActiveTab] = useState('testcase'); // 'testcase' or 'result'\n  const [showSubmission, setShowSubmission] = useState(false);\n  const editorRef = useRef(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const [descriptionHeight, setDescriptionHeight] = useState(50); // percentage\n  const resizeRef = useRef(null);\n  const [interviewPhase, setInterviewPhase] = useState('introduction');\n  const [messages, setMessages] = useState([\n    {\n      type: 'bot',\n      content: \"Hello! I'm Code Mock, your AI interviewer. When you're ready to begin, please introduce yourself.\"\n    }\n  ]);\n\n  // Refs for split instances\n  const horizontalSplitRef = useRef(null);\n  const verticalSplitRef = useRef(null);\n\n  // Handle split updates\n  const handleSplitDrag = useCallback(() => {\n    // Trigger a resize event that will be caught by ResizeObserver\n    window.dispatchEvent(new Event('resize'));\n  }, []);\n\n  // Suppress ResizeObserver errors\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = (...args) => {\n      if (\n        typeof args[0] === 'string' &&\n        args[0].includes('ResizeObserver loop') ||\n        args[0]?.message?.includes('ResizeObserver loop')\n      ) {\n        return;\n      }\n      originalError.call(console, ...args);\n    };\n\n    return () => {\n      console.error = originalError;\n    };\n  }, []);\n\n  const themeColors = {\n    background: {\n      primary: isDarkMode ? '#121212' : '#ffffff',\n      secondary: isDarkMode ? '#1e1e1e' : '#f5f5f5',\n    },\n    text: {\n      primary: isDarkMode ? '#ffffff' : '#000000',\n      secondary: isDarkMode ? '#a0a0a0' : '#666666',\n      accent: '#ff8c00',\n    },\n    border: {\n      primary: isDarkMode ? '#333333' : '#e0e0e0',\n      secondary: isDarkMode ? '#404040' : '#d0d0d0',\n    },\n  };\n\n  const handleCodeChange = (newCode) => {\n    setCode(newCode);\n  };\n\n  const handleLanguageChange = (newLanguage) => {\n    setLanguage(newLanguage);\n  };\n\n  const handleSendMessage = async (message, payload = null) => {\n    // Add user message to state\n    if (!payload) {\n      setMessages(prev => [...prev, { type: 'user', content: message }]);\n    }\n    setIsLoading(true);\n\n    try {\n      const postData = payload ? payload : { message };\n      \n      const response = await axios.post('http://localhost:3001/api/chat', postData, {\n        withCredentials: true\n      });\n\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: response.data.response\n      }]);\n\n      if (response.data.dsaProblem) {\n        handleDSAProblemReceived(response.data.dsaProblem);\n      }\n      \n      if(response.data.phase) {\n        setInterviewPhase(response.data.phase);\n      }\n\n    } catch (error) {\n      console.error('Error during chat:', error);\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: 'Sorry, I encountered an error. Please check the console or try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const executeCode = async (isSubmission = false) => {\n    try {\n      setIsLoading(true);\n      setOutput(null);\n\n      // Validate code\n      if (!code || !code.trim()) {\n        const errorOutput = { error: 'Please enter some code to execute' };\n        if (isSubmission) {\n          setSubmissionResult({ success: false, error: errorOutput.error });\n          setShowSubmission(true);\n        } else {\n          setOutput(errorOutput);\n        }\n        return;\n      }\n\n      // Determine which test cases to use\n      const testCasesToUse = isSubmission \n        ? [...testCases, ...hiddenTestCases]  // Include hidden test cases for submission\n        : testCases;  // Only visible test cases for regular test runs\n\n      console.log(`🚀 Executing code (${isSubmission ? 'submission' : 'test run'})`);\n      console.log(`📊 Test cases to run: ${testCasesToUse.length} (${testCases.length} visible + ${hiddenTestCases.length} hidden)`);\n\n      const response = await axios.post('http://localhost:3001/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: testCasesToUse,\n        isSubmission\n      });\n\n      console.log('✅ Code execution response received:', response.data.success);\n\n      if (response.data.success) {\n        if (isSubmission) {\n          // Set submission result first\n          setSubmissionResult(response.data);\n          setShowSubmission(true);\n          \n          // Then send to AI for analysis\n          console.log(\"🤖 Sending submission to AI for analysis...\");\n          const analysisPayload = {\n            type: 'dsa_solution',\n            language: language,\n            code: code.trim(),\n            results: response.data.data\n          };\n          \n          try {\n            await handleSendMessage(\"Here is my solution.\", analysisPayload);\n            console.log(\"✅ AI analysis request sent successfully\");\n          } catch (aiError) {\n            console.error(\"❌ Error sending to AI for analysis:\", aiError);\n            // Don't fail the submission if AI analysis fails\n          }\n        } else {\n          // For regular test runs, only show results for visible test cases\n          response.data.data.testResults = response.data.data.testResults.slice(0, testCases.length);\n          setOutput(response.data.data);\n          setActiveTab('result');\n        }\n      } else {\n        const errorOutput = {\n          success: false,\n          error: response.data.error,\n          details: response.data.details\n        };\n        console.log(\"❌ Code execution failed:\", errorOutput);\n        \n        if (isSubmission) {\n          setSubmissionResult(errorOutput);\n          setShowSubmission(true);\n        } else {\n          setOutput(errorOutput);\n        }\n      }\n    } catch (error) {\n      console.error('❌ Error executing code:', error);\n      const errorOutput = {\n        success: false,\n        error: 'Failed to execute code',\n        details: error.response?.data?.message || error.message\n      };\n      \n      if (isSubmission) {\n        setSubmissionResult(errorOutput);\n        setShowSubmission(true);\n      } else {\n        setOutput(errorOutput);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRunTestCase = async () => {\n    // Run single test case\n    const testCase = testCases[activeTestCase];\n    if (!testCase) return;\n\n    // Format the test case input\n    const formattedTestCase = {\n      input: testCase.input,\n      expectedOutput: testCase.expectedOutput\n    };\n\n    await executeCode([formattedTestCase]);\n  };\n\n  const handleRunAllTestCases = async () => {\n    // Run all visible test cases\n    await executeCode(testCases);\n  };\n\n  const handleSubmit = async () => {\n    // Run all test cases including hidden ones\n    await executeCode([...testCases, ...hiddenTestCases], true);\n  };\n\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n\n  const handleAddTestCase = (testCase) => {\n    setTestCases([...testCases, testCase]);\n  };\n\n  const handleTestInput = async (input) => {\n    try {\n      // Parse the input string as JSON\n      const parsedInput = JSON.parse(input);\n      \n      // Get the current code from the editor\n      const code = editorRef.current?.getValue() || '';\n      \n      // Create a function from the code\n      const fn = new Function('input', `\n        ${code}\n        return solution(input);\n      `);\n      \n      // Execute the function with the input\n      const result = fn(parsedInput);\n      \n      // Convert the result to a string\n      return JSON.stringify(result);\n    } catch (error) {\n      console.error('Error testing input:', error);\n      throw error;\n    }\n  };\n\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n\n  const handleMouseDown = (e) => {\n    setIsResizing(true);\n    e.preventDefault();\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isResizing) return;\n    \n    const container = resizeRef.current.parentElement;\n    const containerHeight = container.clientHeight;\n    const mouseY = e.clientY;\n    const containerTop = container.getBoundingClientRect().top;\n    \n    let newHeight = ((mouseY - containerTop) / containerHeight) * 100;\n    newHeight = Math.min(Math.max(newHeight, 20), 80); // Limit between 20% and 80%\n    \n    setDescriptionHeight(newHeight);\n  };\n\n  const handleMouseUp = () => {\n    setIsResizing(false);\n  };\n\n  React.useEffect(() => {\n    if (isResizing) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isResizing]);\n\n  // Fetch interview phase on mount and after reset\n  useEffect(() => {\n    // Auto-reset interview session on page load\n    const resetAndInitialize = async () => {\n      try {\n        await axios.post('http://localhost:3001/api/reset', {}, { withCredentials: true });\n        console.log('🔄 Interview session reset on page load');\n        setInterviewPhase('introduction');\n      } catch (error) {\n        console.error('Error resetting interview session:', error);\n        setInterviewPhase('introduction');\n      }\n    };\n    \n    resetAndInitialize();\n  }, []);\n\n  // Add a reset handler\n  const handleResetInterview = async () => {\n    try {\n      await axios.post('http://localhost:3001/api/reset', {}, { withCredentials: true });\n      // Reset all relevant state\n      setMessages([\n        {\n          type: 'bot',\n          content: 'Interview reset. Hello again! Please introduce yourself to begin.'\n        }\n      ]);\n      setProblemDescription('');\n      setTestCases([]);\n      setHiddenTestCases([]);\n      setCode('');\n      setOutput(null);\n      setSubmissionResult(null);\n      setShowSubmission(false);\n      setInterviewPhase('introduction');\n      console.log('Frontend state has been reset.');\n\n    } catch (error) {\n      console.error('Error resetting interview:', error);\n    }\n  };\n\n  // Add a handler for DSA problem data\n  const handleDSAProblemReceived = (dsaProblem) => {\n    console.log('📋 Received AI-generated DSA problem:', dsaProblem.title);\n    \n    // Combine story, problem, and requirements for the description panel\n    const description = `### ${dsaProblem.title}\\n\\n**Story:**\\n${dsaProblem.story}\\n\\n**Problem Statement:**\\n${dsaProblem.problem}\\n\\n**Requirements:**\\n${dsaProblem.requirements.map(req => `- ${req}`).join('\\n')}`;\n    setProblemDescription(description);\n    \n    // Format and set visible test cases\n    const formattedVisibleTestCases = dsaProblem.testCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output,\n      explanation: tc.explanation,\n    }));\n    setTestCases(formattedVisibleTestCases);\n    \n    // Format and set hidden test cases\n    const formattedHiddenTestCases = dsaProblem.hiddenTestCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output,\n    }));\n    setHiddenTestCases(formattedHiddenTestCases);\n    \n    console.log('🗃️ Visible Test Cases:', formattedVisibleTestCases);\n    console.log('🤫 Hidden Test Cases:', formattedHiddenTestCases);\n    \n    // Set editor content to the skeleton code for the current language\n    if (dsaProblem.skeletonCode && dsaProblem.skeletonCode[language]) {\n      setCode(dsaProblem.skeletonCode[language]);\n      console.log(`✏️ Set skeleton code for ${language}.`);\n    } else {\n      // Fallback if skeleton code for the language is missing\n      const fallbackTemplates = {\n          python: `def solution(input_data):\\n    # Your code here\\n    pass`,\n          javascript: `function solution(input_data) {\\n    // Your code here\\n}`,\n          java: `class Solution {\\n    public Object solution(Object input_data) {\\n        // Your code here\\n        return null;\\n    }\\n}`,\n          cpp: `class Solution {\\npublic:\\n    auto solution(auto input_data) {\\n        // Your code here\\n        return {};\\n    }\\n};`\n      };\n      setCode(fallbackTemplates[language]);\n      console.warn(`⚠️ Skeleton code for ${language} not found in AI response. Using fallback.`);\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col\" style={{ backgroundColor: themeColors.background.primary }}>\n      <Header isDarkMode={isDarkMode} toggleTheme={toggleTheme} />\n\n      {/* Progress Bar and Reset Button */}\n      <div className=\"flex items-center justify-between bg-white dark:bg-[#1e1e1e] border-b px-4 py-2\" style={{ borderColor: themeColors.border.primary }}>\n        <InterviewProgressBar phase={interviewPhase} />\n        <button\n          onClick={handleResetInterview}\n          className=\"px-3 py-1 rounded bg-orange-500 text-white hover:bg-orange-600 text-sm\"\n        >\n          Reset Interview\n        </button>\n      </div>\n\n      <main className=\"flex-1 px-4 py-2 sm:px-6 lg:px-8\">\n        <ResizeWrapper>\n          <Split \n            className={`flex h-full ${isDarkMode ? 'dark' : ''}`}\n            sizes={[40, 60]}\n            minSize={[300, 400]}\n            expandToMin={false}\n            gutterSize={8}\n            gutterAlign=\"center\"\n            snapOffset={30}\n            dragInterval={1}\n            direction=\"horizontal\"\n            cursor=\"col-resize\"\n            onDrag={handleSplitDrag}\n            ref={horizontalSplitRef}\n          >\n            {/* Left side */}\n            <div className=\"h-full overflow-hidden flex flex-col\" style={{ backgroundColor: themeColors.background.secondary }}>\n              <div className=\"flex border-b\" style={{ borderColor: themeColors.border.primary }}>\n                <button\n                  onClick={() => setShowSubmission(false)}\n                  className=\"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\"\n                  style={{\n                    color: !showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                    borderColor: !showSubmission ? themeColors.text.accent : 'transparent'\n                  }}\n                >\n                  Description\n                </button>\n                {submissionResult && (\n                  <button\n                    onClick={() => setShowSubmission(true)}\n                    className=\"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\"\n                    style={{\n                      color: showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                      borderColor: showSubmission ? themeColors.text.accent : 'transparent'\n                    }}\n                  >\n                    Submission\n                  </button>\n                )}\n              </div>\n              <div className=\"flex-1 overflow-hidden\">\n                {showSubmission ? (\n                  <SubmissionPanel\n                    result={submissionResult}\n                    isDarkMode={isDarkMode}\n                    onClose={() => setShowSubmission(false)}\n                    themeColors={themeColors}\n                  />\n                ) : (\n                  <Split\n                    direction=\"vertical\"\n                    sizes={[60, 40]}\n                    minSize={[200, 150]}\n                    gutterSize={8}\n                    className=\"split-wrapper h-full\"\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    onDrag={handleSplitDrag}\n                  >\n                    {/* Problem Description */}\n                    <div className=\"overflow-hidden\">\n                      <ProblemPanel\n                        isDarkMode={isDarkMode}\n                        problemDescription={problemDescription}\n                        testCases={testCases}\n                      />\n                    </div>\n\n                    {/* Chat Interface */}\n                    <div className=\"flex-1 overflow-auto\">\n                      <ChatBox\n                        isDarkMode={isDarkMode}\n                        messages={messages}\n                        isLoading={isLoading}\n                        onSendMessage={handleSendMessage}\n                      />\n                    </div>\n                  </Split>\n                )}\n              </div>\n            </div>\n\n            {/* Right side - Code Editor and Test Cases/Results */}\n            <div className=\"h-full overflow-hidden\">\n              <Split\n                className=\"flex flex-col h-full\"\n                sizes={[65, 35]}\n                minSize={[200, 100]}\n                expandToMin={false}\n                gutterSize={8}\n                gutterAlign=\"center\"\n                snapOffset={30}\n                dragInterval={1}\n                direction=\"vertical\"\n                cursor=\"row-resize\"\n                onDrag={handleSplitDrag}\n                ref={verticalSplitRef}\n              >\n                {/* Code Editor Section */}\n                <div className=\"w-full h-full overflow-hidden\">\n                  <div className=\"flex justify-between items-center mb-2 p-2\" style={{ backgroundColor: themeColors.background.secondary }}>\n                    <div className=\"flex items-center space-x-4\">\n                      <select\n                        value={language}\n                        onChange={(e) => handleLanguageChange(e.target.value)}\n                        className=\"px-3 py-1 rounded-md\"\n                        style={{\n                          backgroundColor: themeColors.background.primary,\n                          color: themeColors.text.primary,\n                          borderColor: themeColors.border.secondary,\n                        }}\n                      >\n                        <option value=\"python\">Python</option>\n                        <option value=\"javascript\">JavaScript</option>\n                        <option value=\"java\">Java</option>\n                        <option value=\"cpp\">C++</option>\n                      </select>\n                    </div>\n\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => executeCode(false)}\n                        disabled={isLoading}\n                        className=\"px-4 py-1 rounded-md transition-colors duration-150\"\n                        style={{\n                          backgroundColor: themeColors.border.primary,\n                          color: themeColors.text.primary,\n                          opacity: isLoading ? 0.7 : 1,\n                        }}\n                      >\n                        Run\n                      </button>\n                      <button\n                        onClick={() => executeCode(true)}\n                        disabled={isLoading}\n                        className=\"px-4 py-1 rounded-md transition-colors duration-150\"\n                        style={{\n                          backgroundColor: themeColors.text.accent,\n                          color: themeColors.text.primary,\n                          opacity: isLoading ? 0.7 : 1,\n                        }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"h-[calc(100%-48px)] overflow-hidden\">\n                    <CodeEditor\n                      code={code}\n                      language={language}\n                      onCodeChange={handleCodeChange}\n                      onLanguageChange={handleLanguageChange}\n                      isDarkMode={isDarkMode}\n                      themeColors={themeColors}\n                    />\n                  </div>\n                </div>\n\n                {/* Test Cases and Results Section */}\n                <div className=\"w-full h-full overflow-hidden\">\n                  <div className=\"flex h-full\">\n                    {/* Test Cases Panel */}\n                    <div className=\"w-1/2 border-r\" style={{ borderColor: themeColors.border.primary }}>\n                      <TestCasePanel\n                        testCases={testCases}\n                        hiddenTestCases={hiddenTestCases}\n                        activeTestCase={activeTestCase}\n                        onTestCaseChange={setActiveTestCase}\n                        isDarkMode={isDarkMode}\n                        onAddTestCase={handleAddTestCase}\n                        onTestInput={handleTestInput}\n                        themeColors={themeColors}\n                      />\n                    </div>\n\n                    {/* Test Results Panel */}\n                    <div className=\"w-1/2\">\n                      <TestResultPanel\n                        output={output}\n                        isDarkMode={isDarkMode}\n                        themeColors={themeColors}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </Split>\n            </div>\n          </Split>\n        </ResizeWrapper>\n      </main>\n\n      <Footer isDarkMode={isDarkMode} />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}