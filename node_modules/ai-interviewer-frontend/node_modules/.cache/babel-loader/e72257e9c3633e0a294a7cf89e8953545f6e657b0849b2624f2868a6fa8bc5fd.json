{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Projects\\\\AI Interviewer\\\\frontend\\\\src\\\\components\\\\InterviewProgressBar.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PHASES = [{\n  key: 'introduction',\n  label: 'Introduction'\n}, {\n  key: 'core_topics',\n  label: 'Core Topics'\n}, {\n  key: 'dsa_problem',\n  label: 'DSA Problem'\n}, {\n  key: 'wrap_up',\n  label: 'Wrap-up'\n}];\nexport default function InterviewProgressBar({\n  phase,\n  onPhaseClick\n}) {\n  const currentIdx = PHASES.findIndex(p => p.key === phase);\n  const handlePhaseClick = newPhase => {\n    if (onPhaseClick) {\n      onPhaseClick(newPhase);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center space-x-2 py-2 px-4\",\n    children: PHASES.map((p, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center space-x-1 cursor-pointer transition-colors duration-200 ${idx <= currentIdx ? 'font-bold text-orange-500 hover:text-orange-400' : 'text-gray-400 hover:text-gray-200'}`,\n        onClick: () => handlePhaseClick(p.key),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `w-2 h-2 rounded-full ${idx <= currentIdx ? 'bg-orange-500' : 'bg-gray-300'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: p.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), idx < PHASES.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-300 mx-2\",\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 39\n      }, this)]\n    }, p.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = InterviewProgressBar;\nvar _c;\n$RefreshReg$(_c, \"InterviewProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PHASES","key","label","InterviewProgressBar","phase","onPhaseClick","currentIdx","findIndex","p","handlePhaseClick","newPhase","className","children","map","idx","Fragment","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/components/InterviewProgressBar.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst PHASES = [\r\n  { key: 'introduction', label: 'Introduction' },\r\n  { key: 'core_topics', label: 'Core Topics' },\r\n  { key: 'dsa_problem', label: 'DSA Problem' },\r\n  { key: 'wrap_up', label: 'Wrap-up' }\r\n];\r\n\r\nexport default function InterviewProgressBar({ phase, onPhaseClick }) {\r\n  const currentIdx = PHASES.findIndex(p => p.key === phase);\r\n  \r\n  const handlePhaseClick = (newPhase) => {\r\n    if (onPhaseClick) {\r\n      onPhaseClick(newPhase);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-2 py-2 px-4\">\r\n      {PHASES.map((p, idx) => (\r\n        <React.Fragment key={p.key}>\r\n          <div \r\n            className={`flex items-center space-x-1 cursor-pointer transition-colors duration-200 ${\r\n              idx <= currentIdx \r\n                ? 'font-bold text-orange-500 hover:text-orange-400' \r\n                : 'text-gray-400 hover:text-gray-200'\r\n            }`}\r\n            onClick={() => handlePhaseClick(p.key)}\r\n          >\r\n            <span className={`w-2 h-2 rounded-full ${idx <= currentIdx ? 'bg-orange-500' : 'bg-gray-300'}`}></span>\r\n            <span className=\"text-sm\">{p.label}</span>\r\n          </div>\r\n          {idx < PHASES.length - 1 && <span className=\"text-gray-300 mx-2\">â†’</span>}\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n} "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAG,CACb;EAAEC,GAAG,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAe,CAAC,EAC9C;EAAED,GAAG,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAc,CAAC,EAC5C;EAAED,GAAG,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAc,CAAC,EAC5C;EAAED,GAAG,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,CACrC;AAED,eAAe,SAASC,oBAAoBA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,EAAE;EACpE,MAAMC,UAAU,GAAGN,MAAM,CAACO,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACP,GAAG,KAAKG,KAAK,CAAC;EAEzD,MAAMK,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,IAAIL,YAAY,EAAE;MAChBA,YAAY,CAACK,QAAQ,CAAC;IACxB;EACF,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,uCAAuC;IAAAC,QAAA,EACnDZ,MAAM,CAACa,GAAG,CAAC,CAACL,CAAC,EAAEM,GAAG,kBACjBf,OAAA,CAACF,KAAK,CAACkB,QAAQ;MAAAH,QAAA,gBACbb,OAAA;QACEY,SAAS,EAAE,6EACTG,GAAG,IAAIR,UAAU,GACb,iDAAiD,GACjD,mCAAmC,EACtC;QACHU,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAACD,CAAC,CAACP,GAAG,CAAE;QAAAW,QAAA,gBAEvCb,OAAA;UAAMY,SAAS,EAAE,wBAAwBG,GAAG,IAAIR,UAAU,GAAG,eAAe,GAAG,aAAa;QAAG;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvGrB,OAAA;UAAMY,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAEJ,CAAC,CAACN;QAAK;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,EACLN,GAAG,GAAGd,MAAM,CAACqB,MAAM,GAAG,CAAC,iBAAItB,OAAA;QAAMY,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAZtDZ,CAAC,CAACP,GAAG;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaV,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACE,EAAA,GA7BuBnB,oBAAoB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}