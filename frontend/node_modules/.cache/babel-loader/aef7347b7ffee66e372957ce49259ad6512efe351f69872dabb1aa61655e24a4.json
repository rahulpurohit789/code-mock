{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Projects\\\\AI Interviewer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Split from 'react-split';\nimport CodeEditor from './components/CodeEditor';\nimport ProblemPanel from './components/ProblemPanel';\nimport TestCasePanel from './components/TestCasePanel';\nimport TestResultPanel from './components/TestResultPanel';\nimport SubmissionPanel from './components/SubmissionPanel';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ResizeWrapper from './components/ResizeWrapper';\nimport ChatBox from './components/ChatBox';\nimport './styles/split.css';\nimport './styles/scrollbar.css';\nimport axios from 'axios';\nimport MonacoEditor from '@monaco-editor/react';\nimport TabButton from './components/TabButton';\nimport InterviewProgressBar from './components/InterviewProgressBar';\n\n// Debounce helper function with RAF\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rafDebounce = fn => {\n  let frame;\n  return (...args) => {\n    if (frame) {\n      cancelAnimationFrame(frame);\n    }\n    frame = requestAnimationFrame(() => {\n      fn(...args);\n    });\n  };\n};\nfunction App() {\n  _s();\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [output, setOutput] = useState(null);\n  const [submissionResult, setSubmissionResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [testCases, setTestCases] = useState([]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([]);\n  const [problemDescription, setProblemDescription] = useState('');\n  const [activeTestCase, setActiveTestCase] = useState(0);\n  const [activeTab, setActiveTab] = useState('testcase'); // 'testcase' or 'result'\n  const [showSubmission, setShowSubmission] = useState(false);\n  const editorRef = useRef(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const [descriptionHeight, setDescriptionHeight] = useState(50); // percentage\n  const resizeRef = useRef(null);\n  const [interviewPhase, setInterviewPhase] = useState('introduction');\n\n  // Refs for split instances\n  const horizontalSplitRef = useRef(null);\n  const verticalSplitRef = useRef(null);\n\n  // Handle split updates\n  const handleSplitDrag = useCallback(() => {\n    // Trigger a resize event that will be caught by ResizeObserver\n    window.dispatchEvent(new Event('resize'));\n  }, []);\n\n  // Suppress ResizeObserver errors\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = (...args) => {\n      var _args$, _args$$message;\n      if (typeof args[0] === 'string' && args[0].includes('ResizeObserver loop') || (_args$ = args[0]) !== null && _args$ !== void 0 && (_args$$message = _args$.message) !== null && _args$$message !== void 0 && _args$$message.includes('ResizeObserver loop')) {\n        return;\n      }\n      originalError.call(console, ...args);\n    };\n    return () => {\n      console.error = originalError;\n    };\n  }, []);\n  const themeColors = {\n    background: {\n      primary: isDarkMode ? '#121212' : '#ffffff',\n      secondary: isDarkMode ? '#1e1e1e' : '#f5f5f5'\n    },\n    text: {\n      primary: isDarkMode ? '#ffffff' : '#000000',\n      secondary: isDarkMode ? '#a0a0a0' : '#666666',\n      accent: '#ff8c00'\n    },\n    border: {\n      primary: isDarkMode ? '#333333' : '#e0e0e0',\n      secondary: isDarkMode ? '#404040' : '#d0d0d0'\n    }\n  };\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n  };\n  const handleLanguageChange = newLanguage => {\n    setLanguage(newLanguage);\n  };\n  const executeCode = async (isSubmission = false) => {\n    try {\n      setIsLoading(true);\n      setOutput(null);\n\n      // Validate code\n      if (!code || !code.trim()) {\n        setOutput({\n          error: 'Please enter some code to execute'\n        });\n        return;\n      }\n\n      // Determine which test cases to use\n      const testCasesToUse = isSubmission ? [...testCases, ...hiddenTestCases] // Include hidden test cases for submission\n      : testCases; // Only visible test cases for regular test runs\n\n      const response = await axios.post('http://localhost:3001/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: testCasesToUse,\n        isSubmission\n      });\n      if (response.data.success) {\n        if (isSubmission) {\n          setSubmissionResult(response.data);\n          setShowSubmission(true);\n        } else {\n          // For regular test runs, only show results for visible test cases\n          response.data.data.testResults = response.data.data.testResults.slice(0, testCases.length);\n          setOutput(response.data.data);\n          setActiveTab('result');\n        }\n      } else {\n        const errorOutput = {\n          success: false,\n          error: response.data.error,\n          details: response.data.details\n        };\n        if (isSubmission) {\n          setSubmissionResult(errorOutput);\n          setShowSubmission(true);\n        } else {\n          setOutput(errorOutput);\n        }\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error executing code:', error);\n      const errorOutput = {\n        success: false,\n        error: 'Failed to execute code',\n        details: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message\n      };\n      if (isSubmission) {\n        setSubmissionResult(errorOutput);\n        setShowSubmission(true);\n      } else {\n        setOutput(errorOutput);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleRunTestCase = async () => {\n    // Run single test case\n    const testCase = testCases[activeTestCase];\n    if (!testCase) return;\n\n    // Format the test case input\n    const formattedTestCase = {\n      input: testCase.input,\n      expectedOutput: testCase.expectedOutput\n    };\n    await executeCode([formattedTestCase]);\n  };\n  const handleRunAllTestCases = async () => {\n    // Run all visible test cases\n    await executeCode(testCases);\n  };\n  const handleSubmit = async () => {\n    // Run all test cases including hidden ones\n    await executeCode([...testCases, ...hiddenTestCases], true);\n  };\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  const handleAddTestCase = testCase => {\n    setTestCases([...testCases, testCase]);\n  };\n  const handleTestInput = async input => {\n    try {\n      var _editorRef$current;\n      // Parse the input string as JSON\n      const parsedInput = JSON.parse(input);\n\n      // Get the current code from the editor\n      const code = ((_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.getValue()) || '';\n\n      // Create a function from the code\n      const fn = new Function('input', `\n        ${code}\n        return solution(input);\n      `);\n\n      // Execute the function with the input\n      const result = fn(parsedInput);\n\n      // Convert the result to a string\n      return JSON.stringify(result);\n    } catch (error) {\n      console.error('Error testing input:', error);\n      throw error;\n    }\n  };\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n  const handleMouseDown = e => {\n    setIsResizing(true);\n    e.preventDefault();\n  };\n  const handleMouseMove = e => {\n    if (!isResizing) return;\n    const container = resizeRef.current.parentElement;\n    const containerHeight = container.clientHeight;\n    const mouseY = e.clientY;\n    const containerTop = container.getBoundingClientRect().top;\n    let newHeight = (mouseY - containerTop) / containerHeight * 100;\n    newHeight = Math.min(Math.max(newHeight, 20), 80); // Limit between 20% and 80%\n\n    setDescriptionHeight(newHeight);\n  };\n  const handleMouseUp = () => {\n    setIsResizing(false);\n  };\n  React.useEffect(() => {\n    if (isResizing) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isResizing]);\n\n  // Fetch interview phase on mount and after reset\n  useEffect(() => {\n    // Auto-reset interview session on page load\n    const resetAndInitialize = async () => {\n      try {\n        await axios.post('http://localhost:3001/api/reset', {}, {\n          withCredentials: true\n        });\n        console.log('🔄 Interview session reset on page load');\n        setInterviewPhase('introduction');\n      } catch (error) {\n        console.error('Error resetting interview session:', error);\n        setInterviewPhase('introduction');\n      }\n    };\n    resetAndInitialize();\n  }, []);\n\n  // Add a reset handler\n  const handleResetInterview = async () => {\n    await axios.post('http://localhost:3001/api/reset', {}, {\n      withCredentials: true\n    });\n    window.location.reload();\n  };\n\n  // Add a handler for DSA problem data\n  const handleDSAProblemReceived = dsaProblem => {\n    console.log('📋 Received AI-generated DSA problem:', dsaProblem.title);\n\n    // Combine story, problem, and requirements for the description panel\n    const description = `### ${dsaProblem.title}\\n\\n**Story:**\\n${dsaProblem.story}\\n\\n**Problem Statement:**\\n${dsaProblem.problem}\\n\\n**Requirements:**\\n${dsaProblem.requirements.map(req => `- ${req}`).join('\\n')}`;\n    setProblemDescription(description);\n\n    // Format and set visible test cases\n    const formattedVisibleTestCases = dsaProblem.testCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output,\n      explanation: tc.explanation\n    }));\n    setTestCases(formattedVisibleTestCases);\n\n    // Format and set hidden test cases\n    const formattedHiddenTestCases = dsaProblem.hiddenTestCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output\n    }));\n    setHiddenTestCases(formattedHiddenTestCases);\n    console.log('🗃️ Visible Test Cases:', formattedVisibleTestCases);\n    console.log('🤫 Hidden Test Cases:', formattedHiddenTestCases);\n\n    // Set editor content to the skeleton code for the current language\n    if (dsaProblem.skeletonCode && dsaProblem.skeletonCode[language]) {\n      setCode(dsaProblem.skeletonCode[language]);\n      console.log(`✏️ Set skeleton code for ${language}.`);\n    } else {\n      // Fallback if skeleton code for the language is missing\n      const fallbackTemplates = {\n        python: `def solution(input_data):\\n    # Your code here\\n    pass`,\n        javascript: `function solution(input_data) {\\n    // Your code here\\n}`,\n        java: `class Solution {\\n    public Object solution(Object input_data) {\\n        // Your code here\\n        return null;\\n    }\\n}`,\n        cpp: `class Solution {\\npublic:\\n    auto solution(auto input_data) {\\n        // Your code here\\n        return {};\\n    }\\n};`\n      };\n      setCode(fallbackTemplates[language]);\n      console.warn(`⚠️ Skeleton code for ${language} not found in AI response. Using fallback.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    style: {\n      backgroundColor: themeColors.background.primary\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isDarkMode: isDarkMode,\n      toggleTheme: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between bg-white dark:bg-[#1e1e1e] border-b px-4 py-2\",\n      style: {\n        borderColor: themeColors.border.primary\n      },\n      children: [/*#__PURE__*/_jsxDEV(InterviewProgressBar, {\n        phase: interviewPhase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetInterview,\n        className: \"px-3 py-1 rounded bg-orange-500 text-white hover:bg-orange-600 text-sm\",\n        children: \"Reset Interview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 px-4 py-2 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(ResizeWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Split, {\n          className: `flex h-full ${isDarkMode ? 'dark' : ''}`,\n          sizes: [40, 60],\n          minSize: [300, 400],\n          expandToMin: false,\n          gutterSize: 8,\n          gutterAlign: \"center\",\n          snapOffset: 30,\n          dragInterval: 1,\n          direction: \"horizontal\",\n          cursor: \"col-resize\",\n          onDrag: handleSplitDrag,\n          ref: horizontalSplitRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full overflow-hidden flex flex-col\",\n            style: {\n              backgroundColor: themeColors.background.secondary\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex border-b\",\n              style: {\n                borderColor: themeColors.border.primary\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSubmission(false),\n                className: \"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\",\n                style: {\n                  color: !showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                  borderColor: !showSubmission ? themeColors.text.accent : 'transparent'\n                },\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this), submissionResult && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSubmission(true),\n                className: \"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\",\n                style: {\n                  color: showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                  borderColor: showSubmission ? themeColors.text.accent : 'transparent'\n                },\n                children: \"Submission\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 overflow-hidden\",\n              children: showSubmission ? /*#__PURE__*/_jsxDEV(SubmissionPanel, {\n                result: submissionResult,\n                isDarkMode: isDarkMode,\n                onClose: () => setShowSubmission(false),\n                themeColors: themeColors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Split, {\n                direction: \"vertical\",\n                sizes: [60, 40],\n                minSize: [200, 150],\n                gutterSize: 8,\n                className: \"split-wrapper h-full\",\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column'\n                },\n                onDrag: handleSplitDrag,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"overflow-hidden\",\n                  children: /*#__PURE__*/_jsxDEV(ProblemPanel, {\n                    isDarkMode: isDarkMode,\n                    problemDescription: problemDescription,\n                    testCases: testCases\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"overflow-hidden\",\n                  children: /*#__PURE__*/_jsxDEV(ChatBox, {\n                    isDarkMode: isDarkMode,\n                    onDSAProblemReceived: handleDSAProblemReceived\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(Split, {\n              className: \"flex flex-col h-full\",\n              sizes: [65, 35],\n              minSize: [200, 100],\n              expandToMin: false,\n              gutterSize: 8,\n              gutterAlign: \"center\",\n              snapOffset: 30,\n              dragInterval: 1,\n              direction: \"vertical\",\n              cursor: \"row-resize\",\n              onDrag: handleSplitDrag,\n              ref: verticalSplitRef,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full overflow-hidden\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mb-2 p-2\",\n                  style: {\n                    backgroundColor: themeColors.background.secondary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: language,\n                      onChange: e => handleLanguageChange(e.target.value),\n                      className: \"px-3 py-1 rounded-md\",\n                      style: {\n                        backgroundColor: themeColors.background.primary,\n                        color: themeColors.text.primary,\n                        borderColor: themeColors.border.secondary\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"python\",\n                        children: \"Python\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 455,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"javascript\",\n                        children: \"JavaScript\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"java\",\n                        children: \"Java\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 457,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"cpp\",\n                        children: \"C++\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 458,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => executeCode(false),\n                      disabled: isLoading,\n                      className: \"px-4 py-1 rounded-md transition-colors duration-150\",\n                      style: {\n                        backgroundColor: themeColors.border.primary,\n                        color: themeColors.text.primary,\n                        opacity: isLoading ? 0.7 : 1\n                      },\n                      children: \"Run\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => executeCode(true),\n                      disabled: isLoading,\n                      className: \"px-4 py-1 rounded-md transition-colors duration-150\",\n                      style: {\n                        backgroundColor: themeColors.text.accent,\n                        color: themeColors.text.primary,\n                        opacity: isLoading ? 0.7 : 1\n                      },\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-[calc(100%-48px)] overflow-hidden\",\n                  children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n                    code: code,\n                    language: language,\n                    onCodeChange: handleCodeChange,\n                    isDarkMode: isDarkMode,\n                    themeColors: themeColors\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full overflow-hidden\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex border-b\",\n                  style: {\n                    borderColor: themeColors.border.primary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TabButton, {\n                    isActive: activeTab === 'testcase',\n                    onClick: () => setActiveTab('testcase'),\n                    style: {\n                      color: activeTab === 'testcase' ? themeColors.text.primary : themeColors.text.secondary,\n                      borderColor: activeTab === 'testcase' ? themeColors.text.accent : 'transparent'\n                    },\n                    children: \"Test Cases\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabButton, {\n                    isActive: activeTab === 'result',\n                    onClick: () => setActiveTab('result'),\n                    style: {\n                      color: activeTab === 'result' ? themeColors.text.primary : themeColors.text.secondary,\n                      borderColor: activeTab === 'result' ? themeColors.text.accent : 'transparent'\n                    },\n                    children: \"Results\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-[calc(100%-40px)] overflow-hidden\",\n                  children: activeTab === 'testcase' ? /*#__PURE__*/_jsxDEV(TestCasePanel, {\n                    testCases: testCases,\n                    activeTestCase: activeTestCase,\n                    onTestCaseChange: setActiveTestCase,\n                    isDarkMode: isDarkMode,\n                    onAddTestCase: handleAddTestCase,\n                    onTestInput: handleTestInput,\n                    themeColors: themeColors\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(TestResultPanel, {\n                    output: output,\n                    isDarkMode: isDarkMode,\n                    themeColors: themeColors\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"krpnF2lcZ/l0PZCPIMw4I/TufJg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Split","CodeEditor","ProblemPanel","TestCasePanel","TestResultPanel","SubmissionPanel","Header","Footer","ResizeWrapper","ChatBox","axios","MonacoEditor","TabButton","InterviewProgressBar","jsxDEV","_jsxDEV","rafDebounce","fn","frame","args","cancelAnimationFrame","requestAnimationFrame","App","_s","code","setCode","language","setLanguage","output","setOutput","submissionResult","setSubmissionResult","isLoading","setIsLoading","isDarkMode","setIsDarkMode","testCases","setTestCases","hiddenTestCases","setHiddenTestCases","problemDescription","setProblemDescription","activeTestCase","setActiveTestCase","activeTab","setActiveTab","showSubmission","setShowSubmission","editorRef","isResizing","setIsResizing","descriptionHeight","setDescriptionHeight","resizeRef","interviewPhase","setInterviewPhase","horizontalSplitRef","verticalSplitRef","handleSplitDrag","window","dispatchEvent","Event","originalError","console","error","_args$","_args$$message","includes","message","call","themeColors","background","primary","secondary","text","accent","border","handleCodeChange","newCode","handleLanguageChange","newLanguage","executeCode","isSubmission","trim","testCasesToUse","response","post","data","success","testResults","slice","length","errorOutput","details","_error$response","_error$response$data","handleRunTestCase","testCase","formattedTestCase","input","expectedOutput","handleRunAllTestCases","handleSubmit","toggleTheme","prev","handleAddTestCase","handleTestInput","_editorRef$current","parsedInput","JSON","parse","current","getValue","Function","result","stringify","handleEditorDidMount","editor","monaco","handleMouseDown","e","preventDefault","handleMouseMove","container","parentElement","containerHeight","clientHeight","mouseY","clientY","containerTop","getBoundingClientRect","top","newHeight","Math","min","max","handleMouseUp","addEventListener","removeEventListener","resetAndInitialize","withCredentials","log","handleResetInterview","location","reload","handleDSAProblemReceived","dsaProblem","title","description","story","problem","requirements","map","req","join","formattedVisibleTestCases","tc","explanation","formattedHiddenTestCases","skeletonCode","fallbackTemplates","python","javascript","java","cpp","warn","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","borderColor","phase","onClick","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","direction","cursor","onDrag","ref","color","onClose","display","flexDirection","onDSAProblemReceived","value","onChange","target","disabled","opacity","onCodeChange","isActive","onTestCaseChange","onAddTestCase","onTestInput","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Split from 'react-split';\nimport CodeEditor from './components/CodeEditor';\nimport ProblemPanel from './components/ProblemPanel';\nimport TestCasePanel from './components/TestCasePanel';\nimport TestResultPanel from './components/TestResultPanel';\nimport SubmissionPanel from './components/SubmissionPanel';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ResizeWrapper from './components/ResizeWrapper';\nimport ChatBox from './components/ChatBox';\nimport './styles/split.css';\nimport './styles/scrollbar.css';\nimport axios from 'axios';\nimport MonacoEditor from '@monaco-editor/react';\nimport TabButton from './components/TabButton';\nimport InterviewProgressBar from './components/InterviewProgressBar';\n\n// Debounce helper function with RAF\nconst rafDebounce = (fn) => {\n  let frame;\n  return (...args) => {\n    if (frame) {\n      cancelAnimationFrame(frame);\n    }\n    frame = requestAnimationFrame(() => {\n      fn(...args);\n    });\n  };\n};\n\nfunction App() {\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [output, setOutput] = useState(null);\n  const [submissionResult, setSubmissionResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [testCases, setTestCases] = useState([]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([]);\n  const [problemDescription, setProblemDescription] = useState('');\n  const [activeTestCase, setActiveTestCase] = useState(0);\n  const [activeTab, setActiveTab] = useState('testcase'); // 'testcase' or 'result'\n  const [showSubmission, setShowSubmission] = useState(false);\n  const editorRef = useRef(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const [descriptionHeight, setDescriptionHeight] = useState(50); // percentage\n  const resizeRef = useRef(null);\n  const [interviewPhase, setInterviewPhase] = useState('introduction');\n\n  // Refs for split instances\n  const horizontalSplitRef = useRef(null);\n  const verticalSplitRef = useRef(null);\n\n  // Handle split updates\n  const handleSplitDrag = useCallback(() => {\n    // Trigger a resize event that will be caught by ResizeObserver\n    window.dispatchEvent(new Event('resize'));\n  }, []);\n\n  // Suppress ResizeObserver errors\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = (...args) => {\n      if (\n        typeof args[0] === 'string' &&\n        args[0].includes('ResizeObserver loop') ||\n        args[0]?.message?.includes('ResizeObserver loop')\n      ) {\n        return;\n      }\n      originalError.call(console, ...args);\n    };\n\n    return () => {\n      console.error = originalError;\n    };\n  }, []);\n\n  const themeColors = {\n    background: {\n      primary: isDarkMode ? '#121212' : '#ffffff',\n      secondary: isDarkMode ? '#1e1e1e' : '#f5f5f5',\n    },\n    text: {\n      primary: isDarkMode ? '#ffffff' : '#000000',\n      secondary: isDarkMode ? '#a0a0a0' : '#666666',\n      accent: '#ff8c00',\n    },\n    border: {\n      primary: isDarkMode ? '#333333' : '#e0e0e0',\n      secondary: isDarkMode ? '#404040' : '#d0d0d0',\n    },\n  };\n\n  const handleCodeChange = (newCode) => {\n    setCode(newCode);\n  };\n\n  const handleLanguageChange = (newLanguage) => {\n    setLanguage(newLanguage);\n  };\n\n  const executeCode = async (isSubmission = false) => {\n    try {\n      setIsLoading(true);\n      setOutput(null);\n\n      // Validate code\n      if (!code || !code.trim()) {\n        setOutput({ error: 'Please enter some code to execute' });\n        return;\n      }\n\n      // Determine which test cases to use\n      const testCasesToUse = isSubmission \n        ? [...testCases, ...hiddenTestCases]  // Include hidden test cases for submission\n        : testCases;  // Only visible test cases for regular test runs\n\n      const response = await axios.post('http://localhost:3001/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: testCasesToUse,\n        isSubmission\n      });\n\n      if (response.data.success) {\n        if (isSubmission) {\n          setSubmissionResult(response.data);\n          setShowSubmission(true);\n        } else {\n          // For regular test runs, only show results for visible test cases\n          response.data.data.testResults = response.data.data.testResults.slice(0, testCases.length);\n          setOutput(response.data.data);\n          setActiveTab('result');\n        }\n      } else {\n        const errorOutput = {\n          success: false,\n          error: response.data.error,\n          details: response.data.details\n        };\n        if (isSubmission) {\n          setSubmissionResult(errorOutput);\n          setShowSubmission(true);\n        } else {\n          setOutput(errorOutput);\n        }\n      }\n    } catch (error) {\n      console.error('Error executing code:', error);\n      const errorOutput = {\n        success: false,\n        error: 'Failed to execute code',\n        details: error.response?.data?.message || error.message\n      };\n      if (isSubmission) {\n        setSubmissionResult(errorOutput);\n        setShowSubmission(true);\n      } else {\n        setOutput(errorOutput);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRunTestCase = async () => {\n    // Run single test case\n    const testCase = testCases[activeTestCase];\n    if (!testCase) return;\n\n    // Format the test case input\n    const formattedTestCase = {\n      input: testCase.input,\n      expectedOutput: testCase.expectedOutput\n    };\n\n    await executeCode([formattedTestCase]);\n  };\n\n  const handleRunAllTestCases = async () => {\n    // Run all visible test cases\n    await executeCode(testCases);\n  };\n\n  const handleSubmit = async () => {\n    // Run all test cases including hidden ones\n    await executeCode([...testCases, ...hiddenTestCases], true);\n  };\n\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n\n  const handleAddTestCase = (testCase) => {\n    setTestCases([...testCases, testCase]);\n  };\n\n  const handleTestInput = async (input) => {\n    try {\n      // Parse the input string as JSON\n      const parsedInput = JSON.parse(input);\n      \n      // Get the current code from the editor\n      const code = editorRef.current?.getValue() || '';\n      \n      // Create a function from the code\n      const fn = new Function('input', `\n        ${code}\n        return solution(input);\n      `);\n      \n      // Execute the function with the input\n      const result = fn(parsedInput);\n      \n      // Convert the result to a string\n      return JSON.stringify(result);\n    } catch (error) {\n      console.error('Error testing input:', error);\n      throw error;\n    }\n  };\n\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n\n  const handleMouseDown = (e) => {\n    setIsResizing(true);\n    e.preventDefault();\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isResizing) return;\n    \n    const container = resizeRef.current.parentElement;\n    const containerHeight = container.clientHeight;\n    const mouseY = e.clientY;\n    const containerTop = container.getBoundingClientRect().top;\n    \n    let newHeight = ((mouseY - containerTop) / containerHeight) * 100;\n    newHeight = Math.min(Math.max(newHeight, 20), 80); // Limit between 20% and 80%\n    \n    setDescriptionHeight(newHeight);\n  };\n\n  const handleMouseUp = () => {\n    setIsResizing(false);\n  };\n\n  React.useEffect(() => {\n    if (isResizing) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isResizing]);\n\n  // Fetch interview phase on mount and after reset\n  useEffect(() => {\n    // Auto-reset interview session on page load\n    const resetAndInitialize = async () => {\n      try {\n        await axios.post('http://localhost:3001/api/reset', {}, { withCredentials: true });\n        console.log('🔄 Interview session reset on page load');\n        setInterviewPhase('introduction');\n      } catch (error) {\n        console.error('Error resetting interview session:', error);\n        setInterviewPhase('introduction');\n      }\n    };\n    \n    resetAndInitialize();\n  }, []);\n\n  // Add a reset handler\n  const handleResetInterview = async () => {\n    await axios.post('http://localhost:3001/api/reset', {}, { withCredentials: true });\n    window.location.reload();\n  };\n\n  // Add a handler for DSA problem data\n  const handleDSAProblemReceived = (dsaProblem) => {\n    console.log('📋 Received AI-generated DSA problem:', dsaProblem.title);\n    \n    // Combine story, problem, and requirements for the description panel\n    const description = `### ${dsaProblem.title}\\n\\n**Story:**\\n${dsaProblem.story}\\n\\n**Problem Statement:**\\n${dsaProblem.problem}\\n\\n**Requirements:**\\n${dsaProblem.requirements.map(req => `- ${req}`).join('\\n')}`;\n    setProblemDescription(description);\n    \n    // Format and set visible test cases\n    const formattedVisibleTestCases = dsaProblem.testCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output,\n      explanation: tc.explanation,\n    }));\n    setTestCases(formattedVisibleTestCases);\n    \n    // Format and set hidden test cases\n    const formattedHiddenTestCases = dsaProblem.hiddenTestCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output,\n    }));\n    setHiddenTestCases(formattedHiddenTestCases);\n    \n    console.log('🗃️ Visible Test Cases:', formattedVisibleTestCases);\n    console.log('🤫 Hidden Test Cases:', formattedHiddenTestCases);\n    \n    // Set editor content to the skeleton code for the current language\n    if (dsaProblem.skeletonCode && dsaProblem.skeletonCode[language]) {\n      setCode(dsaProblem.skeletonCode[language]);\n      console.log(`✏️ Set skeleton code for ${language}.`);\n    } else {\n      // Fallback if skeleton code for the language is missing\n      const fallbackTemplates = {\n          python: `def solution(input_data):\\n    # Your code here\\n    pass`,\n          javascript: `function solution(input_data) {\\n    // Your code here\\n}`,\n          java: `class Solution {\\n    public Object solution(Object input_data) {\\n        // Your code here\\n        return null;\\n    }\\n}`,\n          cpp: `class Solution {\\npublic:\\n    auto solution(auto input_data) {\\n        // Your code here\\n        return {};\\n    }\\n};`\n      };\n      setCode(fallbackTemplates[language]);\n      console.warn(`⚠️ Skeleton code for ${language} not found in AI response. Using fallback.`);\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col\" style={{ backgroundColor: themeColors.background.primary }}>\n      <Header isDarkMode={isDarkMode} toggleTheme={toggleTheme} />\n\n      {/* Progress Bar and Reset Button */}\n      <div className=\"flex items-center justify-between bg-white dark:bg-[#1e1e1e] border-b px-4 py-2\" style={{ borderColor: themeColors.border.primary }}>\n        <InterviewProgressBar phase={interviewPhase} />\n        <button\n          onClick={handleResetInterview}\n          className=\"px-3 py-1 rounded bg-orange-500 text-white hover:bg-orange-600 text-sm\"\n        >\n          Reset Interview\n        </button>\n      </div>\n\n      <main className=\"flex-1 px-4 py-2 sm:px-6 lg:px-8\">\n        <ResizeWrapper>\n          <Split \n            className={`flex h-full ${isDarkMode ? 'dark' : ''}`}\n            sizes={[40, 60]}\n            minSize={[300, 400]}\n            expandToMin={false}\n            gutterSize={8}\n            gutterAlign=\"center\"\n            snapOffset={30}\n            dragInterval={1}\n            direction=\"horizontal\"\n            cursor=\"col-resize\"\n            onDrag={handleSplitDrag}\n            ref={horizontalSplitRef}\n          >\n            {/* Left side */}\n            <div className=\"h-full overflow-hidden flex flex-col\" style={{ backgroundColor: themeColors.background.secondary }}>\n              <div className=\"flex border-b\" style={{ borderColor: themeColors.border.primary }}>\n                <button\n                  onClick={() => setShowSubmission(false)}\n                  className=\"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\"\n                  style={{\n                    color: !showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                    borderColor: !showSubmission ? themeColors.text.accent : 'transparent'\n                  }}\n                >\n                  Description\n                </button>\n                {submissionResult && (\n                  <button\n                    onClick={() => setShowSubmission(true)}\n                    className=\"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\"\n                    style={{\n                      color: showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                      borderColor: showSubmission ? themeColors.text.accent : 'transparent'\n                    }}\n                  >\n                    Submission\n                  </button>\n                )}\n              </div>\n              <div className=\"flex-1 overflow-hidden\">\n                {showSubmission ? (\n                  <SubmissionPanel\n                    result={submissionResult}\n                    isDarkMode={isDarkMode}\n                    onClose={() => setShowSubmission(false)}\n                    themeColors={themeColors}\n                  />\n                ) : (\n                  <Split\n                    direction=\"vertical\"\n                    sizes={[60, 40]}\n                    minSize={[200, 150]}\n                    gutterSize={8}\n                    className=\"split-wrapper h-full\"\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    onDrag={handleSplitDrag}\n                  >\n                    {/* Problem Description */}\n                    <div className=\"overflow-hidden\">\n                      <ProblemPanel\n                        isDarkMode={isDarkMode}\n                        problemDescription={problemDescription}\n                        testCases={testCases}\n                      />\n                    </div>\n\n                    {/* Chat Interface */}\n                    <div className=\"overflow-hidden\">\n                      <ChatBox\n                        isDarkMode={isDarkMode}\n                        onDSAProblemReceived={handleDSAProblemReceived}\n                      />\n                    </div>\n                  </Split>\n                )}\n              </div>\n            </div>\n\n            {/* Right side - Code Editor and Test Cases/Results */}\n            <div className=\"h-full overflow-hidden\">\n              <Split\n                className=\"flex flex-col h-full\"\n                sizes={[65, 35]}\n                minSize={[200, 100]}\n                expandToMin={false}\n                gutterSize={8}\n                gutterAlign=\"center\"\n                snapOffset={30}\n                dragInterval={1}\n                direction=\"vertical\"\n                cursor=\"row-resize\"\n                onDrag={handleSplitDrag}\n                ref={verticalSplitRef}\n              >\n                {/* Code Editor Section */}\n                <div className=\"w-full h-full overflow-hidden\">\n                  <div className=\"flex justify-between items-center mb-2 p-2\" style={{ backgroundColor: themeColors.background.secondary }}>\n                    <div className=\"flex items-center space-x-4\">\n                      <select\n                        value={language}\n                        onChange={(e) => handleLanguageChange(e.target.value)}\n                        className=\"px-3 py-1 rounded-md\"\n                        style={{\n                          backgroundColor: themeColors.background.primary,\n                          color: themeColors.text.primary,\n                          borderColor: themeColors.border.secondary,\n                        }}\n                      >\n                        <option value=\"python\">Python</option>\n                        <option value=\"javascript\">JavaScript</option>\n                        <option value=\"java\">Java</option>\n                        <option value=\"cpp\">C++</option>\n                      </select>\n                    </div>\n\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => executeCode(false)}\n                        disabled={isLoading}\n                        className=\"px-4 py-1 rounded-md transition-colors duration-150\"\n                        style={{\n                          backgroundColor: themeColors.border.primary,\n                          color: themeColors.text.primary,\n                          opacity: isLoading ? 0.7 : 1,\n                        }}\n                      >\n                        Run\n                      </button>\n                      <button\n                        onClick={() => executeCode(true)}\n                        disabled={isLoading}\n                        className=\"px-4 py-1 rounded-md transition-colors duration-150\"\n                        style={{\n                          backgroundColor: themeColors.text.accent,\n                          color: themeColors.text.primary,\n                          opacity: isLoading ? 0.7 : 1,\n                        }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"h-[calc(100%-48px)] overflow-hidden\">\n                    <CodeEditor\n                      code={code}\n                      language={language}\n                      onCodeChange={handleCodeChange}\n                      isDarkMode={isDarkMode}\n                      themeColors={themeColors}\n                    />\n                  </div>\n                </div>\n\n                {/* Test Cases and Results Section */}\n                <div className=\"w-full overflow-hidden\">\n                  <div className=\"flex border-b\" style={{ borderColor: themeColors.border.primary }}>\n                    <TabButton\n                      isActive={activeTab === 'testcase'}\n                      onClick={() => setActiveTab('testcase')}\n                      style={{\n                        color: activeTab === 'testcase' ? themeColors.text.primary : themeColors.text.secondary,\n                        borderColor: activeTab === 'testcase' ? themeColors.text.accent : 'transparent'\n                      }}\n                    >\n                      Test Cases\n                    </TabButton>\n                    <TabButton\n                      isActive={activeTab === 'result'}\n                      onClick={() => setActiveTab('result')}\n                      style={{\n                        color: activeTab === 'result' ? themeColors.text.primary : themeColors.text.secondary,\n                        borderColor: activeTab === 'result' ? themeColors.text.accent : 'transparent'\n                      }}\n                    >\n                      Results\n                    </TabButton>\n                  </div>\n\n                  <div className=\"h-[calc(100%-40px)] overflow-hidden\">\n                    {activeTab === 'testcase' ? (\n                      <TestCasePanel\n                        testCases={testCases}\n                        activeTestCase={activeTestCase}\n                        onTestCaseChange={setActiveTestCase}\n                        isDarkMode={isDarkMode}\n                        onAddTestCase={handleAddTestCase}\n                        onTestInput={handleTestInput}\n                        themeColors={themeColors}\n                      />\n                    ) : (\n                      <TestResultPanel\n                        output={output}\n                        isDarkMode={isDarkMode}\n                        themeColors={themeColors}\n                      />\n                    )}\n                  </div>\n                </div>\n              </Split>\n            </div>\n          </Split>\n        </ResizeWrapper>\n      </main>\n\n      <Footer isDarkMode={isDarkMode} />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}