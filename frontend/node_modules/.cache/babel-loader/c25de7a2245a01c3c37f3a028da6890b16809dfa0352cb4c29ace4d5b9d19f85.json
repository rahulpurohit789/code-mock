{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Projects\\\\AI Interviewer\\\\frontend\\\\src\\\\components\\\\InterviewProgressBar.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PHASES = [{\n  key: 'introduction',\n  label: 'Introduction'\n}, {\n  key: 'core_topics',\n  label: 'Core Topics'\n}, {\n  key: 'dsa_progressive',\n  label: 'DSA Progressive',\n  subPhases: [{\n    key: 'easy',\n    label: 'Easy Problem'\n  }, {\n    key: 'complexity',\n    label: 'Complexity Analysis'\n  }, {\n    key: 'optimization',\n    label: 'Optimization'\n  }, {\n    key: 'medium_hard',\n    label: 'Medium-Hard Problem'\n  }, {\n    key: 'feedback',\n    label: 'Feedback'\n  }]\n}, {\n  key: 'wrap_up',\n  label: 'Wrap-up'\n}];\nexport default function InterviewProgressBar({\n  phase,\n  dsaPhase,\n  onPhaseClick\n}) {\n  const currentPhaseIdx = PHASES.findIndex(p => p.key === phase);\n  const handlePhaseClick = newPhase => {\n    if (onPhaseClick) {\n      onPhaseClick(newPhase);\n    }\n  };\n  const getCurrentSubPhaseIdx = () => {\n    if (phase === 'dsa_progressive' && dsaPhase) {\n      const dsaPhaseData = PHASES.find(p => p.key === 'dsa_progressive');\n      return dsaPhaseData.subPhases.findIndex(sp => sp.key === dsaPhase);\n    }\n    return -1;\n  };\n  const currentSubPhaseIdx = getCurrentSubPhaseIdx();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center space-x-2 py-2 px-4\",\n    children: PHASES.map((p, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-center space-x-1 cursor-pointer transition-colors duration-200 ${idx <= currentPhaseIdx ? 'font-bold text-orange-500 hover:text-orange-400' : 'text-gray-400 hover:text-gray-200'}`,\n          onClick: () => handlePhaseClick(p.key),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `w-2 h-2 rounded-full ${idx <= currentPhaseIdx ? 'bg-orange-500' : 'bg-gray-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: p.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), p.key === 'dsa_progressive' && p.subPhases && idx <= currentPhaseIdx && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1 mt-1\",\n          children: p.subPhases.map((subPhase, subIdx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-center space-x-1 cursor-pointer transition-colors duration-200 ${subIdx <= currentSubPhaseIdx ? 'text-orange-400 hover:text-orange-300' : 'text-gray-500 hover:text-gray-300'}`,\n              onClick: () => onPhaseClick && onPhaseClick('dsa_progressive', subPhase.key),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `w-1 h-1 rounded-full ${subIdx <= currentSubPhaseIdx ? 'bg-orange-400' : 'bg-gray-400'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs\",\n                children: subPhase.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), subIdx < p.subPhases.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-400 mx-1 text-xs\",\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 57\n            }, this)]\n          }, subPhase.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), idx < PHASES.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-300 mx-2\",\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 39\n      }, this)]\n    }, p.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = InterviewProgressBar;\nvar _c;\n$RefreshReg$(_c, \"InterviewProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PHASES","key","label","subPhases","InterviewProgressBar","phase","dsaPhase","onPhaseClick","currentPhaseIdx","findIndex","p","handlePhaseClick","newPhase","getCurrentSubPhaseIdx","dsaPhaseData","find","sp","currentSubPhaseIdx","className","children","map","idx","Fragment","onClick","fileName","_jsxFileName","lineNumber","columnNumber","subPhase","subIdx","length","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/components/InterviewProgressBar.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst PHASES = [\r\n  { key: 'introduction', label: 'Introduction' },\r\n  { key: 'core_topics', label: 'Core Topics' },\r\n  { \r\n    key: 'dsa_progressive', \r\n    label: 'DSA Progressive',\r\n    subPhases: [\r\n      { key: 'easy', label: 'Easy Problem' },\r\n      { key: 'complexity', label: 'Complexity Analysis' },\r\n      { key: 'optimization', label: 'Optimization' },\r\n      { key: 'medium_hard', label: 'Medium-Hard Problem' },\r\n      { key: 'feedback', label: 'Feedback' }\r\n    ]\r\n  },\r\n  { key: 'wrap_up', label: 'Wrap-up' }\r\n];\r\n\r\nexport default function InterviewProgressBar({ phase, dsaPhase, onPhaseClick }) {\r\n  const currentPhaseIdx = PHASES.findIndex(p => p.key === phase);\r\n  \r\n  const handlePhaseClick = (newPhase) => {\r\n    if (onPhaseClick) {\r\n      onPhaseClick(newPhase);\r\n    }\r\n  };\r\n\r\n  const getCurrentSubPhaseIdx = () => {\r\n    if (phase === 'dsa_progressive' && dsaPhase) {\r\n      const dsaPhaseData = PHASES.find(p => p.key === 'dsa_progressive');\r\n      return dsaPhaseData.subPhases.findIndex(sp => sp.key === dsaPhase);\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  const currentSubPhaseIdx = getCurrentSubPhaseIdx();\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-2 py-2 px-4\">\r\n      {PHASES.map((p, idx) => (\r\n        <React.Fragment key={p.key}>\r\n          <div className=\"flex flex-col items-center\">\r\n            <div \r\n              className={`flex items-center space-x-1 cursor-pointer transition-colors duration-200 ${\r\n                idx <= currentPhaseIdx \r\n                  ? 'font-bold text-orange-500 hover:text-orange-400' \r\n                  : 'text-gray-400 hover:text-gray-200'\r\n              }`}\r\n              onClick={() => handlePhaseClick(p.key)}\r\n            >\r\n              <span className={`w-2 h-2 rounded-full ${idx <= currentPhaseIdx ? 'bg-orange-500' : 'bg-gray-300'}`}></span>\r\n              <span className=\"text-sm\">{p.label}</span>\r\n            </div>\r\n            \r\n            {/* Show sub-phases for DSA Progressive */}\r\n            {p.key === 'dsa_progressive' && p.subPhases && idx <= currentPhaseIdx && (\r\n              <div className=\"flex items-center space-x-1 mt-1\">\r\n                {p.subPhases.map((subPhase, subIdx) => (\r\n                  <React.Fragment key={subPhase.key}>\r\n                    <div \r\n                      className={`flex items-center space-x-1 cursor-pointer transition-colors duration-200 ${\r\n                        subIdx <= currentSubPhaseIdx \r\n                          ? 'text-orange-400 hover:text-orange-300' \r\n                          : 'text-gray-500 hover:text-gray-300'\r\n                      }`}\r\n                      onClick={() => onPhaseClick && onPhaseClick('dsa_progressive', subPhase.key)}\r\n                    >\r\n                      <span className={`w-1 h-1 rounded-full ${subIdx <= currentSubPhaseIdx ? 'bg-orange-400' : 'bg-gray-400'}`}></span>\r\n                      <span className=\"text-xs\">{subPhase.label}</span>\r\n                    </div>\r\n                    {subIdx < p.subPhases.length - 1 && <span className=\"text-gray-400 mx-1 text-xs\">•</span>}\r\n                  </React.Fragment>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          {idx < PHASES.length - 1 && <span className=\"text-gray-300 mx-2\">→</span>}\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n} "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAG,CACb;EAAEC,GAAG,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAe,CAAC,EAC9C;EAAED,GAAG,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAc,CAAC,EAC5C;EACED,GAAG,EAAE,iBAAiB;EACtBC,KAAK,EAAE,iBAAiB;EACxBC,SAAS,EAAE,CACT;IAAEF,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAe,CAAC,EACtC;IAAED,GAAG,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAsB,CAAC,EACnD;IAAED,GAAG,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAe,CAAC,EAC9C;IAAED,GAAG,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAsB,CAAC,EACpD;IAAED,GAAG,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAW,CAAC;AAE1C,CAAC,EACD;EAAED,GAAG,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,CACrC;AAED,eAAe,SAASE,oBAAoBA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAa,CAAC,EAAE;EAC9E,MAAMC,eAAe,GAAGR,MAAM,CAACS,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACT,GAAG,KAAKI,KAAK,CAAC;EAE9D,MAAMM,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,IAAIL,YAAY,EAAE;MAChBA,YAAY,CAACK,QAAQ,CAAC;IACxB;EACF,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAIR,KAAK,KAAK,iBAAiB,IAAIC,QAAQ,EAAE;MAC3C,MAAMQ,YAAY,GAAGd,MAAM,CAACe,IAAI,CAACL,CAAC,IAAIA,CAAC,CAACT,GAAG,KAAK,iBAAiB,CAAC;MAClE,OAAOa,YAAY,CAACX,SAAS,CAACM,SAAS,CAACO,EAAE,IAAIA,EAAE,CAACf,GAAG,KAAKK,QAAQ,CAAC;IACpE;IACA,OAAO,CAAC,CAAC;EACX,CAAC;EAED,MAAMW,kBAAkB,GAAGJ,qBAAqB,CAAC,CAAC;EAElD,oBACEd,OAAA;IAAKmB,SAAS,EAAC,uCAAuC;IAAAC,QAAA,EACnDnB,MAAM,CAACoB,GAAG,CAAC,CAACV,CAAC,EAAEW,GAAG,kBACjBtB,OAAA,CAACF,KAAK,CAACyB,QAAQ;MAAAH,QAAA,gBACbpB,OAAA;QAAKmB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,gBACzCpB,OAAA;UACEmB,SAAS,EAAE,6EACTG,GAAG,IAAIb,eAAe,GAClB,iDAAiD,GACjD,mCAAmC,EACtC;UACHe,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAACD,CAAC,CAACT,GAAG,CAAE;UAAAkB,QAAA,gBAEvCpB,OAAA;YAAMmB,SAAS,EAAE,wBAAwBG,GAAG,IAAIb,eAAe,GAAG,eAAe,GAAG,aAAa;UAAG;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5G5B,OAAA;YAAMmB,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAET,CAAC,CAACR;UAAK;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,EAGLjB,CAAC,CAACT,GAAG,KAAK,iBAAiB,IAAIS,CAAC,CAACP,SAAS,IAAIkB,GAAG,IAAIb,eAAe,iBACnET,OAAA;UAAKmB,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAC9CT,CAAC,CAACP,SAAS,CAACiB,GAAG,CAAC,CAACQ,QAAQ,EAAEC,MAAM,kBAChC9B,OAAA,CAACF,KAAK,CAACyB,QAAQ;YAAAH,QAAA,gBACbpB,OAAA;cACEmB,SAAS,EAAE,6EACTW,MAAM,IAAIZ,kBAAkB,GACxB,uCAAuC,GACvC,mCAAmC,EACtC;cACHM,OAAO,EAAEA,CAAA,KAAMhB,YAAY,IAAIA,YAAY,CAAC,iBAAiB,EAAEqB,QAAQ,CAAC3B,GAAG,CAAE;cAAAkB,QAAA,gBAE7EpB,OAAA;gBAAMmB,SAAS,EAAE,wBAAwBW,MAAM,IAAIZ,kBAAkB,GAAG,eAAe,GAAG,aAAa;cAAG;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAClH5B,OAAA;gBAAMmB,SAAS,EAAC,SAAS;gBAAAC,QAAA,EAAES,QAAQ,CAAC1B;cAAK;gBAAAsB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC,EACLE,MAAM,GAAGnB,CAAC,CAACP,SAAS,CAAC2B,MAAM,GAAG,CAAC,iBAAI/B,OAAA;cAAMmB,SAAS,EAAC,4BAA4B;cAAAC,QAAA,EAAC;YAAC;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAZtEC,QAAQ,CAAC3B,GAAG;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAajB,CACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EACLN,GAAG,GAAGrB,MAAM,CAAC8B,MAAM,GAAG,CAAC,iBAAI/B,OAAA;QAAMmB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GApCtDjB,CAAC,CAACT,GAAG;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAqCV,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACI,EAAA,GA/DuB3B,oBAAoB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}