{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Projects\\\\AI Interviewer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Split from 'react-split';\nimport CodeEditor from './components/CodeEditor';\nimport ProblemPanel from './components/ProblemPanel';\nimport TestCasePanel from './components/TestCasePanel';\nimport TestResultPanel from './components/TestResultPanel';\nimport SubmissionPanel from './components/SubmissionPanel';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ResizeWrapper from './components/ResizeWrapper';\nimport './styles/split.css';\nimport './styles/scrollbar.css';\nimport useTheme from './hooks/useTheme';\nimport axios from 'axios';\nimport MonacoEditor from '@monaco-editor/react';\nimport TabButton from './components/TabButton';\n\n// Debounce helper function with RAF\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rafDebounce = fn => {\n  let frame;\n  return (...args) => {\n    if (frame) {\n      cancelAnimationFrame(frame);\n    }\n    frame = requestAnimationFrame(() => {\n      fn(...args);\n    });\n  };\n};\nfunction App() {\n  _s();\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [output, setOutput] = useState(null);\n  const [submissionResult, setSubmissionResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [testCases, setTestCases] = useState([]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([]);\n  const [problemDescription, setProblemDescription] = useState('');\n  const [functionTemplate, setFunctionTemplate] = useState('');\n  const [activeTestCase, setActiveTestCase] = useState(0);\n  const [activeTab, setActiveTab] = useState('testcase'); // 'testcase' or 'result'\n  const [showSubmission, setShowSubmission] = useState(false);\n  const editorRef = useRef(null);\n\n  // Refs for split instances\n  const horizontalSplitRef = useRef(null);\n  const verticalSplitRef = useRef(null);\n\n  // Handle split updates\n  const handleSplitDrag = useCallback(() => {\n    // Trigger a resize event that will be caught by ResizeObserver\n    window.dispatchEvent(new Event('resize'));\n  }, []);\n\n  // Suppress ResizeObserver errors\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = (...args) => {\n      var _args$, _args$$message;\n      if (typeof args[0] === 'string' && args[0].includes('ResizeObserver loop') || (_args$ = args[0]) !== null && _args$ !== void 0 && (_args$$message = _args$.message) !== null && _args$$message !== void 0 && _args$$message.includes('ResizeObserver loop')) {\n        return;\n      }\n      originalError.call(console, ...args);\n    };\n    return () => {\n      console.error = originalError;\n    };\n  }, []);\n  const {\n    colors = {\n      background: {\n        primary: '#ffffff',\n        secondary: '#f5f5f5'\n      },\n      text: {\n        primary: '#000000',\n        secondary: '#666666',\n        accent: '#ff8c00'\n      },\n      border: {\n        primary: '#e0e0e0',\n        secondary: '#d0d0d0'\n      },\n      button: {\n        primary: '#ff8c00',\n        primaryHover: '#ff7000'\n      }\n    }\n  } = useTheme(isDarkMode);\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n  };\n  const handleLanguageChange = newLanguage => {\n    setLanguage(newLanguage);\n    // Update function template based on language\n    if (functionTemplate) {\n      // This will be handled by the AI to provide language-specific templates\n      console.log('Language changed, updating template...');\n    }\n  };\n  const handleChatMessage = async message => {\n    // Mock problem setup\n    setProblemDescription(`Given an array of integers nums and an integer target, return indices of the two numbers in nums such that they add up to target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\nYou can return the answer in any order.\n\nExample:\nInput: nums = [2,7,11,15], target = 9\nOutput: [0,1]\nExplanation: Because nums[0] + nums[1] == 9, we return [0, 1].`);\n    setTestCases([{\n      input_params: {\n        n: '3',\n        m: '2',\n        k: '1'\n      },\n      input: '[2,7,11,15], 9',\n      expectedOutput: '[0,1]'\n    }, {\n      input_params: {\n        n: '4',\n        m: '3',\n        k: '2'\n      },\n      input: '[3,2,4], 6',\n      expectedOutput: '[1,2]'\n    }, {\n      input_params: {\n        n: '5',\n        m: '4',\n        k: '3'\n      },\n      input: '[3,3], 6',\n      expectedOutput: '[0,1]'\n    }]);\n\n    // Set language-specific function templates\n    const templates = {\n      python: `def solution(nums, target):\n    # Write your code here\n    pass`,\n      javascript: `function solution(nums, target) {\n    // Write your code here\n}`,\n      java: `class Solution {\n    public int[] solution(int[] nums, int target) {\n        // Write your code here\n        return new int[]{};\n    }\n}`,\n      cpp: `class Solution {\npublic:\n    vector<int> solution(vector<int>& nums, int target) {\n        // Write your code here\n        return {};\n    }\n};`\n    };\n    setFunctionTemplate(templates[language]);\n  };\n  const executeCode = async (isSubmission = false) => {\n    try {\n      setIsLoading(true);\n      setOutput(null);\n\n      // Validate code\n      if (!code || !code.trim()) {\n        setOutput({\n          error: 'Please enter some code to execute'\n        });\n        return;\n      }\n\n      // Determine which test cases to use\n      const testCasesToUse = isSubmission ? [...testCases, ...hiddenTestCases] // Include hidden test cases for submission\n      : testCases; // Only visible test cases for regular test runs\n\n      const response = await axios.post('http://localhost:5000/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: testCasesToUse,\n        isSubmission\n      });\n      if (response.data.success) {\n        if (isSubmission) {\n          setSubmissionResult(response.data.data);\n          setShowSubmission(true);\n        } else {\n          // For regular test runs, only show results for visible test cases\n          response.data.data.testResults = response.data.data.testResults.slice(0, testCases.length);\n          setOutput(response.data.data);\n          setActiveTab('result');\n        }\n      } else {\n        const errorOutput = {\n          error: response.data.error,\n          details: response.data.details\n        };\n        if (isSubmission) {\n          setSubmissionResult(errorOutput);\n          setShowSubmission(true);\n        } else {\n          setOutput(errorOutput);\n        }\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error executing code:', error);\n      const errorOutput = {\n        error: 'Failed to execute code',\n        details: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message\n      };\n      if (isSubmission) {\n        setSubmissionResult(errorOutput);\n        setShowSubmission(true);\n      } else {\n        setOutput(errorOutput);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleRunTestCase = async () => {\n    // Run single test case\n    const testCase = testCases[activeTestCase];\n    if (!testCase) return;\n\n    // Format the test case input\n    const formattedTestCase = {\n      input: testCase.input,\n      expectedOutput: testCase.expectedOutput\n    };\n    await executeCode([formattedTestCase]);\n  };\n  const handleRunAllTestCases = async () => {\n    // Run all visible test cases\n    await executeCode(testCases);\n  };\n  const handleSubmit = async () => {\n    // Run all test cases including hidden ones\n    await executeCode([...testCases, ...hiddenTestCases], true);\n  };\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  const handleAddTestCase = testCase => {\n    setTestCases([...testCases, testCase]);\n  };\n  const handleTestInput = async input => {\n    try {\n      var _editorRef$current;\n      // Parse the input string as JSON\n      const parsedInput = JSON.parse(input);\n\n      // Get the current code from the editor\n      const code = ((_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.getValue()) || '';\n\n      // Create a function from the code\n      const fn = new Function('input', `\n        ${code}\n        return solution(input);\n      `);\n\n      // Execute the function with the input\n      const result = fn(parsedInput);\n\n      // Convert the result to a string\n      return JSON.stringify(result);\n    } catch (error) {\n      console.error('Error testing input:', error);\n      throw error;\n    }\n  };\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `h-screen flex flex-col`,\n    style: {\n      backgroundColor: colors.background.primary\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isDarkMode: isDarkMode,\n      toggleTheme: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 px-4 py-2 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(ResizeWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Split, {\n          className: `flex h-full ${isDarkMode ? 'dark' : ''}`,\n          sizes: [40, 60],\n          minSize: [300, 400],\n          expandToMin: false,\n          gutterSize: 8,\n          gutterAlign: \"center\",\n          snapOffset: 30,\n          dragInterval: 1,\n          direction: \"horizontal\",\n          cursor: \"col-resize\",\n          onDrag: handleSplitDrag,\n          ref: horizontalSplitRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full overflow-hidden flex flex-col\",\n            style: {\n              backgroundColor: colors.background.secondary\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex border-b\",\n              style: {\n                borderColor: colors.border.primary\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSubmission(false),\n                className: `px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2`,\n                style: {\n                  color: !showSubmission ? colors.text.primary : colors.text.secondary,\n                  borderColor: !showSubmission ? colors.text.accent : 'transparent'\n                },\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), submissionResult && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSubmission(true),\n                className: `px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2`,\n                style: {\n                  color: showSubmission ? colors.text.primary : colors.text.secondary,\n                  borderColor: showSubmission ? colors.text.accent : 'transparent'\n                },\n                children: \"Submission\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 overflow-hidden\",\n              children: showSubmission ? /*#__PURE__*/_jsxDEV(SubmissionPanel, {\n                result: submissionResult,\n                isDarkMode: isDarkMode,\n                onClose: () => setShowSubmission(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(ProblemPanel, {\n                onSendMessage: handleChatMessage,\n                isDarkMode: isDarkMode,\n                problemDescription: problemDescription,\n                testCases: testCases\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(Split, {\n              className: \"flex flex-col h-full\",\n              sizes: [65, 35],\n              minSize: [200, 100],\n              expandToMin: false,\n              gutterSize: 8,\n              gutterAlign: \"center\",\n              snapOffset: 30,\n              dragInterval: 1,\n              direction: \"vertical\",\n              cursor: \"row-resize\",\n              onDrag: handleSplitDrag,\n              ref: verticalSplitRef,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full overflow-hidden\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mb-2 p-2\",\n                  style: {\n                    backgroundColor: colors.background.secondary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: language,\n                      onChange: e => handleLanguageChange(e.target.value),\n                      className: \"px-3 py-1 rounded-md\",\n                      style: {\n                        backgroundColor: colors.background.primary,\n                        color: colors.text.primary,\n                        borderColor: colors.border.secondary\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"python\",\n                        children: \"Python\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"javascript\",\n                        children: \"JavaScript\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 384,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"java\",\n                        children: \"Java\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 385,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"cpp\",\n                        children: \"C++\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 386,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => executeCode(false),\n                      disabled: isLoading,\n                      className: \"px-4 py-1 rounded-md transition-colors duration-150\",\n                      style: {\n                        backgroundColor: colors.button.secondary.background,\n                        color: colors.button.secondary.text,\n                        opacity: isLoading ? 0.7 : 1\n                      },\n                      children: \"Run\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => executeCode(true),\n                      disabled: isLoading,\n                      className: \"px-4 py-1 rounded-md transition-colors duration-150\",\n                      style: {\n                        backgroundColor: colors.button.primary.background,\n                        color: colors.button.primary.text,\n                        opacity: isLoading ? 0.7 : 1\n                      },\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-[calc(100%-48px)] overflow-hidden\",\n                  children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n                    code: code,\n                    language: language,\n                    onCodeChange: handleCodeChange,\n                    isDarkMode: isDarkMode,\n                    functionTemplate: functionTemplate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full overflow-hidden\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex px-2\",\n                  style: {\n                    backgroundColor: colors.background.primary,\n                    borderBottom: `1px solid ${colors.border.primary}`\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setActiveTab('testcase'),\n                    className: `px-4 py-2 text-sm font-medium transition-colors duration-150`,\n                    style: {\n                      color: activeTab === 'testcase' ? colors.text.primary : colors.text.secondary,\n                      borderBottom: activeTab === 'testcase' ? `2px solid ${colors.text.accent}` : 'none'\n                    },\n                    children: \"Testcase\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setActiveTab('result'),\n                    className: `px-4 py-2 text-sm font-medium transition-colors duration-150`,\n                    style: {\n                      color: activeTab === 'result' ? colors.text.primary : colors.text.secondary,\n                      borderBottom: activeTab === 'result' ? `2px solid ${colors.text.accent}` : 'none'\n                    },\n                    children: \"Result\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-[calc(100%-40px)] overflow-hidden\",\n                  children: activeTab === 'testcase' ? /*#__PURE__*/_jsxDEV(TestCasePanel, {\n                    testCases: testCases,\n                    activeTestCase: activeTestCase,\n                    onTestCaseChange: setActiveTestCase,\n                    isDarkMode: isDarkMode,\n                    onAddTestCase: handleAddTestCase,\n                    onTestInput: handleTestInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(TestResultPanel, {\n                    output: output,\n                    isDarkMode: isDarkMode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1woY73vAQIL+XOCzA4LfOgmCbvE=\", false, function () {\n  return [useTheme];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Split","CodeEditor","ProblemPanel","TestCasePanel","TestResultPanel","SubmissionPanel","Header","Footer","ResizeWrapper","useTheme","axios","MonacoEditor","TabButton","jsxDEV","_jsxDEV","rafDebounce","fn","frame","args","cancelAnimationFrame","requestAnimationFrame","App","_s","code","setCode","language","setLanguage","output","setOutput","submissionResult","setSubmissionResult","isLoading","setIsLoading","isDarkMode","setIsDarkMode","testCases","setTestCases","hiddenTestCases","setHiddenTestCases","problemDescription","setProblemDescription","functionTemplate","setFunctionTemplate","activeTestCase","setActiveTestCase","activeTab","setActiveTab","showSubmission","setShowSubmission","editorRef","horizontalSplitRef","verticalSplitRef","handleSplitDrag","window","dispatchEvent","Event","originalError","console","error","_args$","_args$$message","includes","message","call","colors","background","primary","secondary","text","accent","border","button","primaryHover","handleCodeChange","newCode","handleLanguageChange","newLanguage","log","handleChatMessage","input_params","n","m","k","input","expectedOutput","templates","python","javascript","java","cpp","executeCode","isSubmission","trim","testCasesToUse","response","post","data","success","testResults","slice","length","errorOutput","details","_error$response","_error$response$data","handleRunTestCase","testCase","formattedTestCase","handleRunAllTestCases","handleSubmit","toggleTheme","prev","handleAddTestCase","handleTestInput","_editorRef$current","parsedInput","JSON","parse","current","getValue","Function","result","stringify","handleEditorDidMount","editor","monaco","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","direction","cursor","onDrag","ref","borderColor","onClick","color","onClose","onSendMessage","value","onChange","e","target","disabled","opacity","onCodeChange","borderBottom","onTestCaseChange","onAddTestCase","onTestInput","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Split from 'react-split';\nimport CodeEditor from './components/CodeEditor';\nimport ProblemPanel from './components/ProblemPanel';\nimport TestCasePanel from './components/TestCasePanel';\nimport TestResultPanel from './components/TestResultPanel';\nimport SubmissionPanel from './components/SubmissionPanel';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ResizeWrapper from './components/ResizeWrapper';\nimport './styles/split.css';\nimport './styles/scrollbar.css';\nimport useTheme from './hooks/useTheme';\nimport axios from 'axios';\nimport MonacoEditor from '@monaco-editor/react';\nimport TabButton from './components/TabButton';\n\n// Debounce helper function with RAF\nconst rafDebounce = (fn) => {\n  let frame;\n  return (...args) => {\n    if (frame) {\n      cancelAnimationFrame(frame);\n    }\n    frame = requestAnimationFrame(() => {\n      fn(...args);\n    });\n  };\n};\n\nfunction App() {\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [output, setOutput] = useState(null);\n  const [submissionResult, setSubmissionResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [testCases, setTestCases] = useState([]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([]);\n  const [problemDescription, setProblemDescription] = useState('');\n  const [functionTemplate, setFunctionTemplate] = useState('');\n  const [activeTestCase, setActiveTestCase] = useState(0);\n  const [activeTab, setActiveTab] = useState('testcase'); // 'testcase' or 'result'\n  const [showSubmission, setShowSubmission] = useState(false);\n  const editorRef = useRef(null);\n\n  // Refs for split instances\n  const horizontalSplitRef = useRef(null);\n  const verticalSplitRef = useRef(null);\n\n  // Handle split updates\n  const handleSplitDrag = useCallback(() => {\n    // Trigger a resize event that will be caught by ResizeObserver\n    window.dispatchEvent(new Event('resize'));\n  }, []);\n\n  // Suppress ResizeObserver errors\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = (...args) => {\n      if (\n        typeof args[0] === 'string' &&\n        args[0].includes('ResizeObserver loop') ||\n        args[0]?.message?.includes('ResizeObserver loop')\n      ) {\n        return;\n      }\n      originalError.call(console, ...args);\n    };\n\n    return () => {\n      console.error = originalError;\n    };\n  }, []);\n\n  const { colors = {\n    background: { primary: '#ffffff', secondary: '#f5f5f5' },\n    text: { primary: '#000000', secondary: '#666666', accent: '#ff8c00' },\n    border: { primary: '#e0e0e0', secondary: '#d0d0d0' },\n    button: { primary: '#ff8c00', primaryHover: '#ff7000' }\n  }} = useTheme(isDarkMode);\n\n  const handleCodeChange = (newCode) => {\n    setCode(newCode);\n  };\n\n  const handleLanguageChange = (newLanguage) => {\n    setLanguage(newLanguage);\n    // Update function template based on language\n    if (functionTemplate) {\n      // This will be handled by the AI to provide language-specific templates\n      console.log('Language changed, updating template...');\n    }\n  };\n\n  const handleChatMessage = async (message) => {\n    // Mock problem setup\n    setProblemDescription(`Given an array of integers nums and an integer target, return indices of the two numbers in nums such that they add up to target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\nYou can return the answer in any order.\n\nExample:\nInput: nums = [2,7,11,15], target = 9\nOutput: [0,1]\nExplanation: Because nums[0] + nums[1] == 9, we return [0, 1].`);\n\n    setTestCases([\n      { \n        input_params: {\n          n: '3',\n          m: '2',\n          k: '1'\n        },\n        input: '[2,7,11,15], 9',\n        expectedOutput: '[0,1]'\n      },\n      {\n        input_params: {\n          n: '4',\n          m: '3',\n          k: '2'\n        },\n        input: '[3,2,4], 6',\n        expectedOutput: '[1,2]'\n      },\n      {\n        input_params: {\n          n: '5',\n          m: '4',\n          k: '3'\n        },\n        input: '[3,3], 6',\n        expectedOutput: '[0,1]'\n      }\n    ]);\n\n    // Set language-specific function templates\n    const templates = {\n      python: `def solution(nums, target):\n    # Write your code here\n    pass`,\n      javascript: `function solution(nums, target) {\n    // Write your code here\n}`,\n      java: `class Solution {\n    public int[] solution(int[] nums, int target) {\n        // Write your code here\n        return new int[]{};\n    }\n}`,\n      cpp: `class Solution {\npublic:\n    vector<int> solution(vector<int>& nums, int target) {\n        // Write your code here\n        return {};\n    }\n};`\n    };\n\n    setFunctionTemplate(templates[language]);\n  };\n\n  const executeCode = async (isSubmission = false) => {\n    try {\n      setIsLoading(true);\n      setOutput(null);\n\n      // Validate code\n      if (!code || !code.trim()) {\n        setOutput({ error: 'Please enter some code to execute' });\n        return;\n      }\n\n      // Determine which test cases to use\n      const testCasesToUse = isSubmission \n        ? [...testCases, ...hiddenTestCases]  // Include hidden test cases for submission\n        : testCases;  // Only visible test cases for regular test runs\n\n      const response = await axios.post('http://localhost:5000/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: testCasesToUse,\n        isSubmission\n      });\n\n      if (response.data.success) {\n        if (isSubmission) {\n          setSubmissionResult(response.data.data);\n          setShowSubmission(true);\n        } else {\n          // For regular test runs, only show results for visible test cases\n          response.data.data.testResults = response.data.data.testResults.slice(0, testCases.length);\n          setOutput(response.data.data);\n          setActiveTab('result');\n        }\n      } else {\n        const errorOutput = {\n          error: response.data.error,\n          details: response.data.details\n        };\n        if (isSubmission) {\n          setSubmissionResult(errorOutput);\n          setShowSubmission(true);\n        } else {\n          setOutput(errorOutput);\n        }\n      }\n    } catch (error) {\n      console.error('Error executing code:', error);\n      const errorOutput = {\n        error: 'Failed to execute code',\n        details: error.response?.data?.message || error.message\n      };\n      if (isSubmission) {\n        setSubmissionResult(errorOutput);\n        setShowSubmission(true);\n      } else {\n        setOutput(errorOutput);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRunTestCase = async () => {\n    // Run single test case\n    const testCase = testCases[activeTestCase];\n    if (!testCase) return;\n\n    // Format the test case input\n    const formattedTestCase = {\n      input: testCase.input,\n      expectedOutput: testCase.expectedOutput\n    };\n\n    await executeCode([formattedTestCase]);\n  };\n\n  const handleRunAllTestCases = async () => {\n    // Run all visible test cases\n    await executeCode(testCases);\n  };\n\n  const handleSubmit = async () => {\n    // Run all test cases including hidden ones\n    await executeCode([...testCases, ...hiddenTestCases], true);\n  };\n\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n\n  const handleAddTestCase = (testCase) => {\n    setTestCases([...testCases, testCase]);\n  };\n\n  const handleTestInput = async (input) => {\n    try {\n      // Parse the input string as JSON\n      const parsedInput = JSON.parse(input);\n      \n      // Get the current code from the editor\n      const code = editorRef.current?.getValue() || '';\n      \n      // Create a function from the code\n      const fn = new Function('input', `\n        ${code}\n        return solution(input);\n      `);\n      \n      // Execute the function with the input\n      const result = fn(parsedInput);\n      \n      // Convert the result to a string\n      return JSON.stringify(result);\n    } catch (error) {\n      console.error('Error testing input:', error);\n      throw error;\n    }\n  };\n\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n\n  return (\n    <div className={`h-screen flex flex-col`} style={{ backgroundColor: colors.background.primary }}>\n      <Header isDarkMode={isDarkMode} toggleTheme={toggleTheme} />\n\n      <main className=\"flex-1 px-4 py-2 sm:px-6 lg:px-8\">\n        <ResizeWrapper>\n          <Split \n            className={`flex h-full ${isDarkMode ? 'dark' : ''}`}\n            sizes={[40, 60]}\n            minSize={[300, 400]}\n            expandToMin={false}\n            gutterSize={8}\n            gutterAlign=\"center\"\n            snapOffset={30}\n            dragInterval={1}\n            direction=\"horizontal\"\n            cursor=\"col-resize\"\n            onDrag={handleSplitDrag}\n            ref={horizontalSplitRef}\n          >\n            {/* Left side - Problem Description & Submission Results */}\n            <div className=\"h-full overflow-hidden flex flex-col\" style={{ backgroundColor: colors.background.secondary }}>\n              {/* Tabs */}\n              <div className=\"flex border-b\" style={{ borderColor: colors.border.primary }}>\n                <button\n                  onClick={() => setShowSubmission(false)}\n                  className={`px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2`}\n                  style={{\n                    color: !showSubmission ? colors.text.primary : colors.text.secondary,\n                    borderColor: !showSubmission ? colors.text.accent : 'transparent'\n                  }}\n                >\n                  Description\n                </button>\n                {submissionResult && (\n                  <button\n                    onClick={() => setShowSubmission(true)}\n                    className={`px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2`}\n                    style={{\n                      color: showSubmission ? colors.text.primary : colors.text.secondary,\n                      borderColor: showSubmission ? colors.text.accent : 'transparent'\n                    }}\n                  >\n                    Submission\n                  </button>\n                )}\n              </div>\n\n              {/* Content */}\n              <div className=\"flex-1 overflow-hidden\">\n                {showSubmission ? (\n                  <SubmissionPanel\n                    result={submissionResult}\n                    isDarkMode={isDarkMode}\n                    onClose={() => setShowSubmission(false)}\n                  />\n                ) : (\n                  <ProblemPanel\n                    onSendMessage={handleChatMessage}\n                    isDarkMode={isDarkMode}\n                    problemDescription={problemDescription}\n                    testCases={testCases}\n                  />\n                )}\n              </div>\n            </div>\n\n            {/* Right side - Code Editor and Test Cases/Results */}\n            <div className=\"h-full overflow-hidden\">\n              <Split\n                className=\"flex flex-col h-full\"\n                sizes={[65, 35]}\n                minSize={[200, 100]}\n                expandToMin={false}\n                gutterSize={8}\n                gutterAlign=\"center\"\n                snapOffset={30}\n                dragInterval={1}\n                direction=\"vertical\"\n                cursor=\"row-resize\"\n                onDrag={handleSplitDrag}\n                ref={verticalSplitRef}\n              >\n                {/* Code Editor Section */}\n                <div className=\"w-full h-full overflow-hidden\">\n                  <div className=\"flex justify-between items-center mb-2 p-2\" style={{ backgroundColor: colors.background.secondary }}>\n                    <div className=\"flex items-center space-x-4\">\n                      <select\n                        value={language}\n                        onChange={(e) => handleLanguageChange(e.target.value)}\n                        className=\"px-3 py-1 rounded-md\"\n                        style={{\n                          backgroundColor: colors.background.primary,\n                          color: colors.text.primary,\n                          borderColor: colors.border.secondary,\n                        }}\n                      >\n                        <option value=\"python\">Python</option>\n                        <option value=\"javascript\">JavaScript</option>\n                        <option value=\"java\">Java</option>\n                        <option value=\"cpp\">C++</option>\n                      </select>\n                    </div>\n\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => executeCode(false)}\n                        disabled={isLoading}\n                        className=\"px-4 py-1 rounded-md transition-colors duration-150\"\n                        style={{\n                          backgroundColor: colors.button.secondary.background,\n                          color: colors.button.secondary.text,\n                          opacity: isLoading ? 0.7 : 1,\n                        }}\n                      >\n                        Run\n                      </button>\n                      <button\n                        onClick={() => executeCode(true)}\n                        disabled={isLoading}\n                        className=\"px-4 py-1 rounded-md transition-colors duration-150\"\n                        style={{\n                          backgroundColor: colors.button.primary.background,\n                          color: colors.button.primary.text,\n                          opacity: isLoading ? 0.7 : 1,\n                        }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"h-[calc(100%-48px)] overflow-hidden\">\n                    <CodeEditor\n                      code={code}\n                      language={language}\n                      onCodeChange={handleCodeChange}\n                      isDarkMode={isDarkMode}\n                      functionTemplate={functionTemplate}\n                    />\n                  </div>\n                </div>\n\n                {/* Test Cases and Results Section */}\n                <div className=\"w-full h-full overflow-hidden\">\n                  {/* Tabs */}\n                  <div className=\"flex px-2\" style={{ backgroundColor: colors.background.primary, borderBottom: `1px solid ${colors.border.primary}` }}>\n                    <button\n                      onClick={() => setActiveTab('testcase')}\n                      className={`px-4 py-2 text-sm font-medium transition-colors duration-150`}\n                      style={{\n                        color: activeTab === 'testcase' ? colors.text.primary : colors.text.secondary,\n                        borderBottom: activeTab === 'testcase' ? `2px solid ${colors.text.accent}` : 'none',\n                      }}\n                    >\n                      Testcase\n                    </button>\n                    <button\n                      onClick={() => setActiveTab('result')}\n                      className={`px-4 py-2 text-sm font-medium transition-colors duration-150`}\n                      style={{\n                        color: activeTab === 'result' ? colors.text.primary : colors.text.secondary,\n                        borderBottom: activeTab === 'result' ? `2px solid ${colors.text.accent}` : 'none',\n                      }}\n                    >\n                      Result\n                    </button>\n                  </div>\n\n                  {/* Panel Content */}\n                  <div className=\"h-[calc(100%-40px)] overflow-hidden\">\n                    {activeTab === 'testcase' ? (\n                      <TestCasePanel\n                        testCases={testCases}\n                        activeTestCase={activeTestCase}\n                        onTestCaseChange={setActiveTestCase}\n                        isDarkMode={isDarkMode}\n                        onAddTestCase={handleAddTestCase}\n                        onTestInput={handleTestInput}\n                      />\n                    ) : (\n                      <TestResultPanel\n                        output={output}\n                        isDarkMode={isDarkMode}\n                      />\n                    )}\n                  </div>\n                </div>\n              </Split>\n            </div>\n          </Split>\n        </ResizeWrapper>\n      </main>\n\n      <Footer isDarkMode={isDarkMode} />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}