{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport { themeColors } from '../theme/colors';\nexport const useTheme = isDarkMode => {\n  _s();\n  const getThemeColor = useCallback(path => {\n    const theme = isDarkMode ? themeColors.dark : themeColors.light;\n    return path.split('.').reduce((obj, key) => obj[key], theme);\n  }, [isDarkMode]);\n  return {\n    colors: themeColors[isDarkMode ? 'dark' : 'light'],\n    getThemeColor\n  };\n};\n_s(useTheme, \"+4svhJCm+LEXWOLXbeMvnTYZFBM=\");","map":{"version":3,"names":["useCallback","themeColors","useTheme","isDarkMode","_s","getThemeColor","path","theme","dark","light","split","reduce","obj","key","colors"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/hooks/useTheme.js"],"sourcesContent":["import { useCallback } from 'react';\r\nimport { themeColors } from '../theme/colors';\r\n\r\nexport const useTheme = (isDarkMode) => {\r\n  const getThemeColor = useCallback((path) => {\r\n    const theme = isDarkMode ? themeColors.dark : themeColors.light;\r\n    return path.split('.').reduce((obj, key) => obj[key], theme);\r\n  }, [isDarkMode]);\r\n\r\n  return {\r\n    colors: themeColors[isDarkMode ? 'dark' : 'light'],\r\n    getThemeColor,\r\n  };\r\n}; "],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,iBAAiB;AAE7C,OAAO,MAAMC,QAAQ,GAAIC,UAAU,IAAK;EAAAC,EAAA;EACtC,MAAMC,aAAa,GAAGL,WAAW,CAAEM,IAAI,IAAK;IAC1C,MAAMC,KAAK,GAAGJ,UAAU,GAAGF,WAAW,CAACO,IAAI,GAAGP,WAAW,CAACQ,KAAK;IAC/D,OAAOH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,CAACC,GAAG,CAAC,EAAEN,KAAK,CAAC;EAC9D,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,OAAO;IACLW,MAAM,EAAEb,WAAW,CAACE,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;IAClDE;EACF,CAAC;AACH,CAAC;AAACD,EAAA,CAVWF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}