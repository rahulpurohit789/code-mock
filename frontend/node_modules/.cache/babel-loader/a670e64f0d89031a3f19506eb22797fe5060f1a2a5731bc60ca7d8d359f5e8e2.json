{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Projects\\\\AI Interviewer\\\\frontend\\\\src\\\\components\\\\TestCasePanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTheme } from '../hooks/useTheme';\nimport AddTestCaseModal from './AddTestCaseModal';\nimport TestResultPanel from './TestResultPanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestCasePanel = ({\n  testCases,\n  results,\n  isDarkMode,\n  onAddTestCase,\n  onTestInput\n}) => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const {\n    colors\n  } = useTheme(isDarkMode);\n  const handleRunCode = async () => {\n    // Run all test cases\n    const newResults = await Promise.all(testCases.map(testCase => onTestInput(testCase.input)));\n    return newResults;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-4 border-b\",\n        style: {\n          borderColor: colors.border.primary\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-medium\",\n          style: {\n            color: colors.text.primary\n          },\n          children: \"Test Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRunCode,\n            className: \"px-4 py-2 rounded-md text-sm font-medium transition-colors duration-150\",\n            style: {\n              backgroundColor: colors.button.primary.background,\n              color: colors.button.primary.text\n            },\n            children: \"Run Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(true),\n            className: \"px-4 py-2 rounded-md text-sm font-medium transition-colors duration-150\",\n            style: {\n              backgroundColor: colors.button.secondary.background,\n              color: colors.button.secondary.text\n            },\n            children: \"Add Test Case\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-auto\",\n        children: /*#__PURE__*/_jsxDEV(TestResultPanel, {\n          testCases: testCases,\n          results: results,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTestCaseModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onAdd: onAddTestCase,\n      isDarkMode: isDarkMode,\n      onTestInput: onTestInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TestCasePanel, \"noGgqJbZm7pQIJD2Wtoa4mpZ5p0=\", false, function () {\n  return [useTheme];\n});\n_c = TestCasePanel;\nexport default TestCasePanel;\nvar _c;\n$RefreshReg$(_c, \"TestCasePanel\");","map":{"version":3,"names":["React","useState","useTheme","AddTestCaseModal","TestResultPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","TestCasePanel","testCases","results","isDarkMode","onAddTestCase","onTestInput","_s","isModalOpen","setIsModalOpen","colors","handleRunCode","newResults","Promise","all","map","testCase","input","children","className","style","borderColor","border","primary","color","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","button","background","secondary","isOpen","onClose","onAdd","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/components/TestCasePanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTheme } from '../hooks/useTheme';\nimport AddTestCaseModal from './AddTestCaseModal';\nimport TestResultPanel from './TestResultPanel';\n\nconst TestCasePanel = ({ testCases, results, isDarkMode, onAddTestCase, onTestInput }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { colors } = useTheme(isDarkMode);\n\n  const handleRunCode = async () => {\n    // Run all test cases\n    const newResults = await Promise.all(\n      testCases.map(testCase => onTestInput(testCase.input))\n    );\n    return newResults;\n  };\n\n  return (\n    <>\n      <div className=\"flex flex-col h-full\">\n        {/* Header */}\n        <div \n          className=\"flex items-center justify-between p-4 border-b\"\n          style={{ borderColor: colors.border.primary }}\n        >\n          <h2 \n            className=\"text-lg font-medium\"\n            style={{ color: colors.text.primary }}\n          >\n            Test Cases\n          </h2>\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={handleRunCode}\n              className=\"px-4 py-2 rounded-md text-sm font-medium transition-colors duration-150\"\n              style={{\n                backgroundColor: colors.button.primary.background,\n                color: colors.button.primary.text,\n              }}\n            >\n              Run Code\n            </button>\n            <button\n              onClick={() => setIsModalOpen(true)}\n              className=\"px-4 py-2 rounded-md text-sm font-medium transition-colors duration-150\"\n              style={{\n                backgroundColor: colors.button.secondary.background,\n                color: colors.button.secondary.text,\n              }}\n            >\n              Add Test Case\n            </button>\n          </div>\n        </div>\n\n        {/* Test Results */}\n        <div className=\"flex-1 overflow-auto\">\n          <TestResultPanel \n            testCases={testCases}\n            results={results}\n            isDarkMode={isDarkMode}\n          />\n        </div>\n      </div>\n\n      <AddTestCaseModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        onAdd={onAddTestCase}\n        isDarkMode={isDarkMode}\n        onTestInput={onTestInput}\n      />\n    </>\n  );\n};\n\nexport default TestCasePanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}