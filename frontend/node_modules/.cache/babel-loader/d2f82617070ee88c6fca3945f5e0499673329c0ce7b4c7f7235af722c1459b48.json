{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Projects\\\\AI Interviewer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Split from 'react-split';\nimport CodeEditor from './components/CodeEditor';\nimport ProblemPanel from './components/ProblemPanel';\nimport TestCasePanel from './components/TestCasePanel';\nimport TestResultPanel from './components/TestResultPanel';\nimport SubmissionPanel from './components/SubmissionPanel';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ResizeWrapper from './components/ResizeWrapper';\nimport ChatBox from './components/ChatBox';\nimport './styles/split.css';\nimport './styles/scrollbar.css';\nimport axios from 'axios';\nimport MonacoEditor from '@monaco-editor/react';\nimport TabButton from './components/TabButton';\nimport InterviewProgressBar from './components/InterviewProgressBar';\n\n// Debounce helper function with RAF\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rafDebounce = fn => {\n  let frame;\n  return (...args) => {\n    if (frame) {\n      cancelAnimationFrame(frame);\n    }\n    frame = requestAnimationFrame(() => {\n      fn(...args);\n    });\n  };\n};\nfunction App() {\n  _s();\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [output, setOutput] = useState(null);\n  const [submissionResult, setSubmissionResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [testCases, setTestCases] = useState([]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([]);\n  const [problemDescription, setProblemDescription] = useState('');\n  const [activeTestCase, setActiveTestCase] = useState(0);\n  const [activeTab, setActiveTab] = useState('testcase'); // 'testcase' or 'result'\n  const [showSubmission, setShowSubmission] = useState(false);\n  const editorRef = useRef(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const [descriptionHeight, setDescriptionHeight] = useState(50); // percentage\n  const resizeRef = useRef(null);\n  const [interviewPhase, setInterviewPhase] = useState('introduction');\n  const [messages, setMessages] = useState([{\n    type: 'bot',\n    content: \"Hello! I'm Code Mock, your AI interviewer. When you're ready to begin, please introduce yourself.\"\n  }]);\n\n  // Refs for split instances\n  const horizontalSplitRef = useRef(null);\n  const verticalSplitRef = useRef(null);\n\n  // Handle split updates\n  const handleSplitDrag = useCallback(() => {\n    // Trigger a resize event that will be caught by ResizeObserver\n    window.dispatchEvent(new Event('resize'));\n  }, []);\n\n  // Suppress ResizeObserver errors\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = (...args) => {\n      var _args$, _args$$message;\n      if (typeof args[0] === 'string' && args[0].includes('ResizeObserver loop') || (_args$ = args[0]) !== null && _args$ !== void 0 && (_args$$message = _args$.message) !== null && _args$$message !== void 0 && _args$$message.includes('ResizeObserver loop')) {\n        return;\n      }\n      originalError.call(console, ...args);\n    };\n    return () => {\n      console.error = originalError;\n    };\n  }, []);\n  const themeColors = {\n    background: {\n      primary: isDarkMode ? '#121212' : '#ffffff',\n      secondary: isDarkMode ? '#1e1e1e' : '#f5f5f5'\n    },\n    text: {\n      primary: isDarkMode ? '#ffffff' : '#000000',\n      secondary: isDarkMode ? '#a0a0a0' : '#666666',\n      accent: '#ff8c00'\n    },\n    border: {\n      primary: isDarkMode ? '#333333' : '#e0e0e0',\n      secondary: isDarkMode ? '#404040' : '#d0d0d0'\n    }\n  };\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n  };\n  const handleLanguageChange = newLanguage => {\n    setLanguage(newLanguage);\n  };\n  const handleSendMessage = async (message, payload = null) => {\n    // Add user message to state\n    if (!payload) {\n      setMessages(prev => [...prev, {\n        type: 'user',\n        content: message\n      }]);\n    }\n    setIsLoading(true);\n    try {\n      const postData = payload ? payload : {\n        message\n      };\n      const response = await axios.post('http://localhost:3001/api/chat', postData, {\n        withCredentials: true\n      });\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: response.data.response\n      }]);\n      if (response.data.dsaProblem) {\n        handleDSAProblemReceived(response.data.dsaProblem);\n      }\n      if (response.data.phase) {\n        setInterviewPhase(response.data.phase);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Error during chat:', error);\n      const backendError = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An unknown error occurred.';\n      const backendDetails = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.details) || 'Please check the backend console for more information.';\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: `Sorry, I encountered an error. \\n\\n**Error:** ${backendError}\\n**Details:** ${backendDetails}`\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const executeCode = async (isSubmission = false) => {\n    setIsLoading(true);\n    setOutput(null);\n    let submissionData = null;\n    try {\n      if (!code || !code.trim()) {\n        throw new Error('Please enter some code to execute');\n      }\n      const testCasesToUse = isSubmission ? [...testCases, ...hiddenTestCases] : testCases;\n      const response = await axios.post('http://localhost:3001/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: testCasesToUse,\n        isSubmission\n      });\n      if (!response.data.success) {\n        throw new Error(response.data.error || 'Code execution failed on the server.');\n      }\n      submissionData = response.data;\n      if (isSubmission) {\n        // Send to AI for analysis\n        const analysisPayload = {\n          type: 'dsa_solution',\n          language: language,\n          code: code.trim(),\n          results: response.data.data\n        };\n        await handleSendMessage(\"Here is my solution.\", analysisPayload);\n      } else {\n        setOutput(response.data.data);\n      }\n    } catch (error) {\n      console.error('❌ Error during code execution:', error);\n      if (isSubmission) {\n        submissionData = {\n          success: false,\n          error: error.message,\n          details: 'An error occurred while running your code. Please check your code or try again.'\n        };\n      } else {\n        setOutput({\n          error: error.message,\n          details: 'Failed to run test cases.'\n        });\n      }\n    } finally {\n      setIsLoading(false);\n      if (isSubmission) {\n        setSubmissionResult(submissionData);\n        setShowSubmission(true);\n      }\n    }\n  };\n  const handleRunTestCase = async () => {\n    // Run single test case\n    const testCase = testCases[activeTestCase];\n    if (!testCase) return;\n\n    // Format the test case input\n    const formattedTestCase = {\n      input: testCase.input,\n      expectedOutput: testCase.expectedOutput\n    };\n    await executeCode([formattedTestCase]);\n  };\n  const handleRunAllTestCases = async () => {\n    // Run all visible test cases\n    await executeCode(testCases);\n  };\n  const handleSubmit = async () => {\n    // Run all test cases including hidden ones\n    await executeCode([...testCases, ...hiddenTestCases], true);\n  };\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  const handleAddTestCase = testCase => {\n    setTestCases([...testCases, testCase]);\n  };\n  const handleTestInput = async input => {\n    try {\n      var _editorRef$current;\n      // Parse the input string as JSON\n      const parsedInput = JSON.parse(input);\n\n      // Get the current code from the editor\n      const code = ((_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.getValue()) || '';\n\n      // Create a function from the code\n      const fn = new Function('input', `\n        ${code}\n        return solution(input);\n      `);\n\n      // Execute the function with the input\n      const result = fn(parsedInput);\n\n      // Convert the result to a string\n      return JSON.stringify(result);\n    } catch (error) {\n      console.error('Error testing input:', error);\n      throw error;\n    }\n  };\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n  const handleMouseDown = e => {\n    setIsResizing(true);\n    e.preventDefault();\n  };\n  const handleMouseMove = e => {\n    if (!isResizing) return;\n    const container = resizeRef.current.parentElement;\n    const containerHeight = container.clientHeight;\n    const mouseY = e.clientY;\n    const containerTop = container.getBoundingClientRect().top;\n    let newHeight = (mouseY - containerTop) / containerHeight * 100;\n    newHeight = Math.min(Math.max(newHeight, 20), 80); // Limit between 20% and 80%\n\n    setDescriptionHeight(newHeight);\n  };\n  const handleMouseUp = () => {\n    setIsResizing(false);\n  };\n  React.useEffect(() => {\n    if (isResizing) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isResizing]);\n\n  // Fetch interview phase on mount and after reset\n  useEffect(() => {\n    // Auto-reset interview session on page load\n    const resetAndInitialize = async () => {\n      try {\n        await axios.post('http://localhost:3001/api/reset', {}, {\n          withCredentials: true\n        });\n        console.log('🔄 Interview session reset on page load');\n        setInterviewPhase('introduction');\n      } catch (error) {\n        console.error('Error resetting interview session:', error);\n        setInterviewPhase('introduction');\n      }\n    };\n    resetAndInitialize();\n  }, []);\n\n  // Add a reset handler\n  const handleResetInterview = async () => {\n    try {\n      await axios.post('http://localhost:3001/api/reset', {}, {\n        withCredentials: true\n      });\n      // Reset all relevant state\n      setMessages([{\n        type: 'bot',\n        content: 'Interview reset. Hello again! Please introduce yourself to begin.'\n      }]);\n      setProblemDescription('');\n      setTestCases([]);\n      setHiddenTestCases([]);\n      setCode('');\n      setOutput(null);\n      setSubmissionResult(null);\n      setShowSubmission(false);\n      setInterviewPhase('introduction');\n      console.log('Frontend state has been reset.');\n    } catch (error) {\n      console.error('Error resetting interview:', error);\n    }\n  };\n\n  // Add a handler for DSA problem data\n  const handleDSAProblemReceived = dsaProblem => {\n    console.log('📋 Received AI-generated DSA problem:', dsaProblem.title);\n\n    // Combine story, problem, and requirements for the description panel\n    const description = `### ${dsaProblem.title}\\n\\n**Story:**\\n${dsaProblem.story}\\n\\n**Problem Statement:**\\n${dsaProblem.problem}\\n\\n**Requirements:**\\n${dsaProblem.requirements.map(req => `- ${req}`).join('\\n')}`;\n    setProblemDescription(description);\n\n    // Format and set visible test cases\n    const formattedVisibleTestCases = dsaProblem.testCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output,\n      explanation: tc.explanation\n    }));\n    setTestCases(formattedVisibleTestCases);\n\n    // Format and set hidden test cases\n    const formattedHiddenTestCases = dsaProblem.hiddenTestCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output\n    }));\n    setHiddenTestCases(formattedHiddenTestCases);\n    console.log('🗃️ Visible Test Cases:', formattedVisibleTestCases);\n    console.log('🤫 Hidden Test Cases:', formattedHiddenTestCases);\n\n    // Set editor content to the skeleton code for the current language\n    if (dsaProblem.skeletonCode && dsaProblem.skeletonCode[language]) {\n      setCode(dsaProblem.skeletonCode[language]);\n      console.log(`✏️ Set skeleton code for ${language}.`);\n    } else {\n      // Fallback if skeleton code for the language is missing\n      const fallbackTemplates = {\n        python: `def solution(input_data):\\n    # Your code here\\n    pass`,\n        javascript: `function solution(input_data) {\\n    // Your code here\\n}`,\n        java: `class Solution {\\n    public Object solution(Object input_data) {\\n        // Your code here\\n        return null;\\n    }\\n}`,\n        cpp: `class Solution {\\npublic:\\n    auto solution(auto input_data) {\\n        // Your code here\\n        return {};\\n    }\\n};`\n      };\n      setCode(fallbackTemplates[language]);\n      console.warn(`⚠️ Skeleton code for ${language} not found in AI response. Using fallback.`);\n    }\n  };\n  const handlePhaseTransition = async newPhase => {\n    console.log(`🚀 Forcing transition to: ${newPhase}`);\n    try {\n      await axios.post('http://localhost:3001/api/force-transition', {\n        phase: newPhase\n      }, {\n        withCredentials: true\n      });\n      setInterviewPhase(newPhase);\n\n      // Add a system message to the chat\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: `Switched to ${newPhase.replace('_', ' ')} phase. Please provide your input to continue.`\n      }]);\n\n      // Optionally reset parts of the state\n      if (newPhase !== 'dsa_problem') {\n        setProblemDescription('');\n        setTestCases([]);\n        setHiddenTestCases([]);\n        setCode('');\n        setOutput(null);\n        setSubmissionResult(null);\n        setShowSubmission(false);\n      }\n    } catch (error) {\n      console.error('Error forcing phase transition:', error);\n    }\n  };\n  console.log('🔄 App re-rendering. State:', {\n    showSubmission,\n    submissionResultIsSet: !!submissionResult\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    style: {\n      backgroundColor: themeColors.background.primary\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isDarkMode: isDarkMode,\n      toggleTheme: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between bg-white dark:bg-[#1e1e1e] border-b px-4 py-2\",\n      style: {\n        borderColor: themeColors.border.primary\n      },\n      children: [/*#__PURE__*/_jsxDEV(InterviewProgressBar, {\n        phase: interviewPhase,\n        onPhaseClick: handlePhaseTransition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetInterview,\n        className: \"px-3 py-1 rounded bg-orange-500 text-white hover:bg-orange-600 text-sm\",\n        children: \"Reset Interview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 px-4 py-2 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(ResizeWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Split, {\n          className: `flex h-full ${isDarkMode ? 'dark' : ''}`,\n          sizes: [40, 60],\n          minSize: [300, 400],\n          expandToMin: false,\n          gutterSize: 8,\n          gutterAlign: \"center\",\n          snapOffset: 30,\n          dragInterval: 1,\n          direction: \"horizontal\",\n          cursor: \"col-resize\",\n          onDrag: handleSplitDrag,\n          ref: horizontalSplitRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full overflow-hidden flex flex-col\",\n            style: {\n              backgroundColor: themeColors.background.secondary\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex border-b\",\n              style: {\n                borderColor: themeColors.border.primary\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSubmission(false),\n                className: \"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\",\n                style: {\n                  color: !showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                  borderColor: !showSubmission ? themeColors.text.accent : 'transparent'\n                },\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this), submissionResult && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSubmission(true),\n                className: \"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\",\n                style: {\n                  color: showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                  borderColor: showSubmission ? themeColors.text.accent : 'transparent'\n                },\n                children: \"Submission\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 overflow-hidden\",\n              children: showSubmission && submissionResult ? /*#__PURE__*/_jsxDEV(SubmissionPanel, {\n                result: submissionResult,\n                isDarkMode: isDarkMode,\n                onClose: () => setShowSubmission(false),\n                themeColors: themeColors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Split, {\n                direction: \"vertical\",\n                sizes: [60, 40],\n                minSize: [200, 150],\n                gutterSize: 8,\n                className: \"split-wrapper h-full\",\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column'\n                },\n                onDrag: handleSplitDrag,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"overflow-hidden\",\n                  children: /*#__PURE__*/_jsxDEV(ProblemPanel, {\n                    isDarkMode: isDarkMode,\n                    problemDescription: problemDescription,\n                    testCases: testCases\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 overflow-auto\",\n                  children: /*#__PURE__*/_jsxDEV(ChatBox, {\n                    isDarkMode: isDarkMode,\n                    messages: messages,\n                    isLoading: isLoading,\n                    onSendMessage: handleSendMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-full overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(Split, {\n              className: \"flex flex-col h-full\",\n              sizes: [65, 35],\n              minSize: [200, 100],\n              expandToMin: false,\n              gutterSize: 8,\n              gutterAlign: \"center\",\n              snapOffset: 30,\n              dragInterval: 1,\n              direction: \"vertical\",\n              cursor: \"row-resize\",\n              onDrag: handleSplitDrag,\n              ref: verticalSplitRef,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full overflow-hidden\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mb-2 p-2\",\n                  style: {\n                    backgroundColor: themeColors.background.secondary\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: language,\n                      onChange: e => handleLanguageChange(e.target.value),\n                      className: \"px-3 py-1 rounded-md\",\n                      style: {\n                        backgroundColor: themeColors.background.primary,\n                        color: themeColors.text.primary,\n                        borderColor: themeColors.border.secondary\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"python\",\n                        children: \"Python\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 563,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"javascript\",\n                        children: \"JavaScript\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 564,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"java\",\n                        children: \"Java\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 565,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"cpp\",\n                        children: \"C++\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 566,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 553,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => executeCode(false),\n                      disabled: isLoading,\n                      className: \"px-4 py-1 rounded-md transition-colors duration-150\",\n                      style: {\n                        backgroundColor: themeColors.border.primary,\n                        color: themeColors.text.primary,\n                        opacity: isLoading ? 0.7 : 1\n                      },\n                      children: \"Run\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => executeCode(true),\n                      disabled: isLoading,\n                      className: \"px-4 py-1 rounded-md transition-colors duration-150\",\n                      style: {\n                        backgroundColor: themeColors.text.accent,\n                        color: themeColors.text.primary,\n                        opacity: isLoading ? 0.7 : 1\n                      },\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 583,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-[calc(100%-48px)] overflow-hidden\",\n                  children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n                    code: code,\n                    language: language,\n                    onCodeChange: handleCodeChange,\n                    onLanguageChange: handleLanguageChange,\n                    isDarkMode: isDarkMode,\n                    themeColors: themeColors\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full overflow-hidden\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex h-full\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-1/2 border-r\",\n                    style: {\n                      borderColor: themeColors.border.primary\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TestCasePanel, {\n                      testCases: testCases,\n                      hiddenTestCases: hiddenTestCases,\n                      activeTestCase: activeTestCase,\n                      onTestCaseChange: setActiveTestCase,\n                      isDarkMode: isDarkMode,\n                      onAddTestCase: handleAddTestCase,\n                      onTestInput: handleTestInput,\n                      themeColors: themeColors\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-1/2\",\n                    children: /*#__PURE__*/_jsxDEV(TestResultPanel, {\n                      output: output,\n                      isDarkMode: isDarkMode,\n                      themeColors: themeColors\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Mwd6ZQ52GD4CjxbUrUrAacbdFwg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Split","CodeEditor","ProblemPanel","TestCasePanel","TestResultPanel","SubmissionPanel","Header","Footer","ResizeWrapper","ChatBox","axios","MonacoEditor","TabButton","InterviewProgressBar","jsxDEV","_jsxDEV","rafDebounce","fn","frame","args","cancelAnimationFrame","requestAnimationFrame","App","_s","code","setCode","language","setLanguage","output","setOutput","submissionResult","setSubmissionResult","isLoading","setIsLoading","isDarkMode","setIsDarkMode","testCases","setTestCases","hiddenTestCases","setHiddenTestCases","problemDescription","setProblemDescription","activeTestCase","setActiveTestCase","activeTab","setActiveTab","showSubmission","setShowSubmission","editorRef","isResizing","setIsResizing","descriptionHeight","setDescriptionHeight","resizeRef","interviewPhase","setInterviewPhase","messages","setMessages","type","content","horizontalSplitRef","verticalSplitRef","handleSplitDrag","window","dispatchEvent","Event","originalError","console","error","_args$","_args$$message","includes","message","call","themeColors","background","primary","secondary","text","accent","border","handleCodeChange","newCode","handleLanguageChange","newLanguage","handleSendMessage","payload","prev","postData","response","post","withCredentials","data","dsaProblem","handleDSAProblemReceived","phase","_error$response","_error$response$data","_error$response2","_error$response2$data","backendError","backendDetails","details","executeCode","isSubmission","submissionData","trim","Error","testCasesToUse","success","analysisPayload","results","handleRunTestCase","testCase","formattedTestCase","input","expectedOutput","handleRunAllTestCases","handleSubmit","toggleTheme","handleAddTestCase","handleTestInput","_editorRef$current","parsedInput","JSON","parse","current","getValue","Function","result","stringify","handleEditorDidMount","editor","monaco","handleMouseDown","e","preventDefault","handleMouseMove","container","parentElement","containerHeight","clientHeight","mouseY","clientY","containerTop","getBoundingClientRect","top","newHeight","Math","min","max","handleMouseUp","addEventListener","removeEventListener","resetAndInitialize","log","handleResetInterview","title","description","story","problem","requirements","map","req","join","formattedVisibleTestCases","tc","explanation","formattedHiddenTestCases","skeletonCode","fallbackTemplates","python","javascript","java","cpp","warn","handlePhaseTransition","newPhase","replace","submissionResultIsSet","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","borderColor","onPhaseClick","onClick","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","direction","cursor","onDrag","ref","color","onClose","display","flexDirection","onSendMessage","value","onChange","target","disabled","opacity","onCodeChange","onLanguageChange","onTestCaseChange","onAddTestCase","onTestInput","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Projects/AI Interviewer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Split from 'react-split';\nimport CodeEditor from './components/CodeEditor';\nimport ProblemPanel from './components/ProblemPanel';\nimport TestCasePanel from './components/TestCasePanel';\nimport TestResultPanel from './components/TestResultPanel';\nimport SubmissionPanel from './components/SubmissionPanel';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ResizeWrapper from './components/ResizeWrapper';\nimport ChatBox from './components/ChatBox';\nimport './styles/split.css';\nimport './styles/scrollbar.css';\nimport axios from 'axios';\nimport MonacoEditor from '@monaco-editor/react';\nimport TabButton from './components/TabButton';\nimport InterviewProgressBar from './components/InterviewProgressBar';\n\n// Debounce helper function with RAF\nconst rafDebounce = (fn) => {\n  let frame;\n  return (...args) => {\n    if (frame) {\n      cancelAnimationFrame(frame);\n    }\n    frame = requestAnimationFrame(() => {\n      fn(...args);\n    });\n  };\n};\n\nfunction App() {\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [output, setOutput] = useState(null);\n  const [submissionResult, setSubmissionResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [testCases, setTestCases] = useState([]);\n  const [hiddenTestCases, setHiddenTestCases] = useState([]);\n  const [problemDescription, setProblemDescription] = useState('');\n  const [activeTestCase, setActiveTestCase] = useState(0);\n  const [activeTab, setActiveTab] = useState('testcase'); // 'testcase' or 'result'\n  const [showSubmission, setShowSubmission] = useState(false);\n  const editorRef = useRef(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const [descriptionHeight, setDescriptionHeight] = useState(50); // percentage\n  const resizeRef = useRef(null);\n  const [interviewPhase, setInterviewPhase] = useState('introduction');\n  const [messages, setMessages] = useState([\n    {\n      type: 'bot',\n      content: \"Hello! I'm Code Mock, your AI interviewer. When you're ready to begin, please introduce yourself.\"\n    }\n  ]);\n\n  // Refs for split instances\n  const horizontalSplitRef = useRef(null);\n  const verticalSplitRef = useRef(null);\n\n  // Handle split updates\n  const handleSplitDrag = useCallback(() => {\n    // Trigger a resize event that will be caught by ResizeObserver\n    window.dispatchEvent(new Event('resize'));\n  }, []);\n\n  // Suppress ResizeObserver errors\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = (...args) => {\n      if (\n        typeof args[0] === 'string' &&\n        args[0].includes('ResizeObserver loop') ||\n        args[0]?.message?.includes('ResizeObserver loop')\n      ) {\n        return;\n      }\n      originalError.call(console, ...args);\n    };\n\n    return () => {\n      console.error = originalError;\n    };\n  }, []);\n\n  const themeColors = {\n    background: {\n      primary: isDarkMode ? '#121212' : '#ffffff',\n      secondary: isDarkMode ? '#1e1e1e' : '#f5f5f5',\n    },\n    text: {\n      primary: isDarkMode ? '#ffffff' : '#000000',\n      secondary: isDarkMode ? '#a0a0a0' : '#666666',\n      accent: '#ff8c00',\n    },\n    border: {\n      primary: isDarkMode ? '#333333' : '#e0e0e0',\n      secondary: isDarkMode ? '#404040' : '#d0d0d0',\n    },\n  };\n\n  const handleCodeChange = (newCode) => {\n    setCode(newCode);\n  };\n\n  const handleLanguageChange = (newLanguage) => {\n    setLanguage(newLanguage);\n  };\n\n  const handleSendMessage = async (message, payload = null) => {\n    // Add user message to state\n    if (!payload) {\n      setMessages(prev => [...prev, { type: 'user', content: message }]);\n    }\n    setIsLoading(true);\n\n    try {\n      const postData = payload ? payload : { message };\n      \n      const response = await axios.post('http://localhost:3001/api/chat', postData, {\n        withCredentials: true\n      });\n\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: response.data.response\n      }]);\n\n      if (response.data.dsaProblem) {\n        handleDSAProblemReceived(response.data.dsaProblem);\n      }\n      \n      if(response.data.phase) {\n        setInterviewPhase(response.data.phase);\n      }\n\n    } catch (error) {\n      console.error('Error during chat:', error);\n      const backendError = error.response?.data?.error || 'An unknown error occurred.';\n      const backendDetails = error.response?.data?.details || 'Please check the backend console for more information.';\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: `Sorry, I encountered an error. \\n\\n**Error:** ${backendError}\\n**Details:** ${backendDetails}`\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const executeCode = async (isSubmission = false) => {\n    setIsLoading(true);\n    setOutput(null);\n\n    let submissionData = null;\n\n    try {\n      if (!code || !code.trim()) {\n        throw new Error('Please enter some code to execute');\n      }\n\n      const testCasesToUse = isSubmission \n        ? [...testCases, ...hiddenTestCases]\n        : testCases;\n\n      const response = await axios.post('http://localhost:3001/api/code/execute', {\n        code: code.trim(),\n        language,\n        testCases: testCasesToUse,\n        isSubmission\n      });\n\n      if (!response.data.success) {\n        throw new Error(response.data.error || 'Code execution failed on the server.');\n      }\n      \n      submissionData = response.data;\n\n      if (isSubmission) {\n        // Send to AI for analysis\n        const analysisPayload = {\n          type: 'dsa_solution',\n          language: language,\n          code: code.trim(),\n          results: response.data.data\n        };\n        await handleSendMessage(\"Here is my solution.\", analysisPayload);\n      } else {\n        setOutput(response.data.data);\n      }\n\n    } catch (error) {\n      console.error('❌ Error during code execution:', error);\n      if (isSubmission) {\n        submissionData = {\n          success: false,\n          error: error.message,\n          details: 'An error occurred while running your code. Please check your code or try again.'\n        };\n      } else {\n        setOutput({\n          error: error.message,\n          details: 'Failed to run test cases.'\n        });\n      }\n    } finally {\n      setIsLoading(false);\n      if (isSubmission) {\n        setSubmissionResult(submissionData);\n        setShowSubmission(true);\n      }\n    }\n  };\n\n  const handleRunTestCase = async () => {\n    // Run single test case\n    const testCase = testCases[activeTestCase];\n    if (!testCase) return;\n\n    // Format the test case input\n    const formattedTestCase = {\n      input: testCase.input,\n      expectedOutput: testCase.expectedOutput\n    };\n\n    await executeCode([formattedTestCase]);\n  };\n\n  const handleRunAllTestCases = async () => {\n    // Run all visible test cases\n    await executeCode(testCases);\n  };\n\n  const handleSubmit = async () => {\n    // Run all test cases including hidden ones\n    await executeCode([...testCases, ...hiddenTestCases], true);\n  };\n\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n\n  const handleAddTestCase = (testCase) => {\n    setTestCases([...testCases, testCase]);\n  };\n\n  const handleTestInput = async (input) => {\n    try {\n      // Parse the input string as JSON\n      const parsedInput = JSON.parse(input);\n      \n      // Get the current code from the editor\n      const code = editorRef.current?.getValue() || '';\n      \n      // Create a function from the code\n      const fn = new Function('input', `\n        ${code}\n        return solution(input);\n      `);\n      \n      // Execute the function with the input\n      const result = fn(parsedInput);\n      \n      // Convert the result to a string\n      return JSON.stringify(result);\n    } catch (error) {\n      console.error('Error testing input:', error);\n      throw error;\n    }\n  };\n\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n  };\n\n  const handleMouseDown = (e) => {\n    setIsResizing(true);\n    e.preventDefault();\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isResizing) return;\n    \n    const container = resizeRef.current.parentElement;\n    const containerHeight = container.clientHeight;\n    const mouseY = e.clientY;\n    const containerTop = container.getBoundingClientRect().top;\n    \n    let newHeight = ((mouseY - containerTop) / containerHeight) * 100;\n    newHeight = Math.min(Math.max(newHeight, 20), 80); // Limit between 20% and 80%\n    \n    setDescriptionHeight(newHeight);\n  };\n\n  const handleMouseUp = () => {\n    setIsResizing(false);\n  };\n\n  React.useEffect(() => {\n    if (isResizing) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isResizing]);\n\n  // Fetch interview phase on mount and after reset\n  useEffect(() => {\n    // Auto-reset interview session on page load\n    const resetAndInitialize = async () => {\n      try {\n        await axios.post('http://localhost:3001/api/reset', {}, { withCredentials: true });\n        console.log('🔄 Interview session reset on page load');\n        setInterviewPhase('introduction');\n      } catch (error) {\n        console.error('Error resetting interview session:', error);\n        setInterviewPhase('introduction');\n      }\n    };\n    \n    resetAndInitialize();\n  }, []);\n\n  // Add a reset handler\n  const handleResetInterview = async () => {\n    try {\n      await axios.post('http://localhost:3001/api/reset', {}, { withCredentials: true });\n      // Reset all relevant state\n      setMessages([\n        {\n          type: 'bot',\n          content: 'Interview reset. Hello again! Please introduce yourself to begin.'\n        }\n      ]);\n      setProblemDescription('');\n      setTestCases([]);\n      setHiddenTestCases([]);\n      setCode('');\n      setOutput(null);\n      setSubmissionResult(null);\n      setShowSubmission(false);\n      setInterviewPhase('introduction');\n      console.log('Frontend state has been reset.');\n\n    } catch (error) {\n      console.error('Error resetting interview:', error);\n    }\n  };\n\n  // Add a handler for DSA problem data\n  const handleDSAProblemReceived = (dsaProblem) => {\n    console.log('📋 Received AI-generated DSA problem:', dsaProblem.title);\n    \n    // Combine story, problem, and requirements for the description panel\n    const description = `### ${dsaProblem.title}\\n\\n**Story:**\\n${dsaProblem.story}\\n\\n**Problem Statement:**\\n${dsaProblem.problem}\\n\\n**Requirements:**\\n${dsaProblem.requirements.map(req => `- ${req}`).join('\\n')}`;\n    setProblemDescription(description);\n    \n    // Format and set visible test cases\n    const formattedVisibleTestCases = dsaProblem.testCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output,\n      explanation: tc.explanation,\n    }));\n    setTestCases(formattedVisibleTestCases);\n    \n    // Format and set hidden test cases\n    const formattedHiddenTestCases = dsaProblem.hiddenTestCases.map(tc => ({\n      input: tc.input,\n      expectedOutput: tc.output,\n    }));\n    setHiddenTestCases(formattedHiddenTestCases);\n    \n    console.log('🗃️ Visible Test Cases:', formattedVisibleTestCases);\n    console.log('🤫 Hidden Test Cases:', formattedHiddenTestCases);\n    \n    // Set editor content to the skeleton code for the current language\n    if (dsaProblem.skeletonCode && dsaProblem.skeletonCode[language]) {\n      setCode(dsaProblem.skeletonCode[language]);\n      console.log(`✏️ Set skeleton code for ${language}.`);\n    } else {\n      // Fallback if skeleton code for the language is missing\n      const fallbackTemplates = {\n          python: `def solution(input_data):\\n    # Your code here\\n    pass`,\n          javascript: `function solution(input_data) {\\n    // Your code here\\n}`,\n          java: `class Solution {\\n    public Object solution(Object input_data) {\\n        // Your code here\\n        return null;\\n    }\\n}`,\n          cpp: `class Solution {\\npublic:\\n    auto solution(auto input_data) {\\n        // Your code here\\n        return {};\\n    }\\n};`\n      };\n      setCode(fallbackTemplates[language]);\n      console.warn(`⚠️ Skeleton code for ${language} not found in AI response. Using fallback.`);\n    }\n  };\n\n  const handlePhaseTransition = async (newPhase) => {\n    console.log(`🚀 Forcing transition to: ${newPhase}`);\n    try {\n      await axios.post('http://localhost:3001/api/force-transition', \n        { phase: newPhase },\n        { withCredentials: true }\n      );\n      \n      setInterviewPhase(newPhase);\n\n      // Add a system message to the chat\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: `Switched to ${newPhase.replace('_', ' ')} phase. Please provide your input to continue.`\n      }]);\n      \n      // Optionally reset parts of the state\n      if (newPhase !== 'dsa_problem') {\n        setProblemDescription('');\n        setTestCases([]);\n        setHiddenTestCases([]);\n        setCode('');\n        setOutput(null);\n        setSubmissionResult(null);\n        setShowSubmission(false);\n      }\n      \n    } catch (error) {\n      console.error('Error forcing phase transition:', error);\n    }\n  };\n\n  console.log('🔄 App re-rendering. State:', {\n    showSubmission,\n    submissionResultIsSet: !!submissionResult\n  });\n\n  return (\n    <div className=\"h-screen flex flex-col\" style={{ backgroundColor: themeColors.background.primary }}>\n      <Header isDarkMode={isDarkMode} toggleTheme={toggleTheme} />\n\n      {/* Progress Bar and Reset Button */}\n      <div className=\"flex items-center justify-between bg-white dark:bg-[#1e1e1e] border-b px-4 py-2\" style={{ borderColor: themeColors.border.primary }}>\n        <InterviewProgressBar \n          phase={interviewPhase}\n          onPhaseClick={handlePhaseTransition}\n        />\n        <button\n          onClick={handleResetInterview}\n          className=\"px-3 py-1 rounded bg-orange-500 text-white hover:bg-orange-600 text-sm\"\n        >\n          Reset Interview\n        </button>\n      </div>\n\n      <main className=\"flex-1 px-4 py-2 sm:px-6 lg:px-8\">\n        <ResizeWrapper>\n          <Split \n            className={`flex h-full ${isDarkMode ? 'dark' : ''}`}\n            sizes={[40, 60]}\n            minSize={[300, 400]}\n            expandToMin={false}\n            gutterSize={8}\n            gutterAlign=\"center\"\n            snapOffset={30}\n            dragInterval={1}\n            direction=\"horizontal\"\n            cursor=\"col-resize\"\n            onDrag={handleSplitDrag}\n            ref={horizontalSplitRef}\n          >\n            {/* Left side */}\n            <div className=\"h-full overflow-hidden flex flex-col\" style={{ backgroundColor: themeColors.background.secondary }}>\n              <div className=\"flex border-b\" style={{ borderColor: themeColors.border.primary }}>\n                <button\n                  onClick={() => setShowSubmission(false)}\n                  className=\"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\"\n                  style={{\n                    color: !showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                    borderColor: !showSubmission ? themeColors.text.accent : 'transparent'\n                  }}\n                >\n                  Description\n                </button>\n                {submissionResult && (\n                  <button\n                    onClick={() => setShowSubmission(true)}\n                    className=\"px-4 py-2 text-sm font-medium transition-colors duration-150 border-b-2\"\n                    style={{\n                      color: showSubmission ? themeColors.text.primary : themeColors.text.secondary,\n                      borderColor: showSubmission ? themeColors.text.accent : 'transparent'\n                    }}\n                  >\n                    Submission\n                  </button>\n                )}\n              </div>\n              <div className=\"flex-1 overflow-hidden\">\n                {showSubmission && submissionResult ? (\n                  <SubmissionPanel\n                    result={submissionResult}\n                    isDarkMode={isDarkMode}\n                    onClose={() => setShowSubmission(false)}\n                    themeColors={themeColors}\n                  />\n                ) : (\n                  <Split\n                    direction=\"vertical\"\n                    sizes={[60, 40]}\n                    minSize={[200, 150]}\n                    gutterSize={8}\n                    className=\"split-wrapper h-full\"\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    onDrag={handleSplitDrag}\n                  >\n                    {/* Problem Description */}\n                    <div className=\"overflow-hidden\">\n                      <ProblemPanel\n                        isDarkMode={isDarkMode}\n                        problemDescription={problemDescription}\n                        testCases={testCases}\n                      />\n                    </div>\n\n                    {/* Chat Interface */}\n                    <div className=\"flex-1 overflow-auto\">\n                      <ChatBox\n                        isDarkMode={isDarkMode}\n                        messages={messages}\n                        isLoading={isLoading}\n                        onSendMessage={handleSendMessage}\n                      />\n                    </div>\n                  </Split>\n                )}\n              </div>\n            </div>\n\n            {/* Right side - Code Editor and Test Cases/Results */}\n            <div className=\"h-full overflow-hidden\">\n              <Split\n                className=\"flex flex-col h-full\"\n                sizes={[65, 35]}\n                minSize={[200, 100]}\n                expandToMin={false}\n                gutterSize={8}\n                gutterAlign=\"center\"\n                snapOffset={30}\n                dragInterval={1}\n                direction=\"vertical\"\n                cursor=\"row-resize\"\n                onDrag={handleSplitDrag}\n                ref={verticalSplitRef}\n              >\n                {/* Code Editor Section */}\n                <div className=\"w-full h-full overflow-hidden\">\n                  <div className=\"flex justify-between items-center mb-2 p-2\" style={{ backgroundColor: themeColors.background.secondary }}>\n                    <div className=\"flex items-center space-x-4\">\n                      <select\n                        value={language}\n                        onChange={(e) => handleLanguageChange(e.target.value)}\n                        className=\"px-3 py-1 rounded-md\"\n                        style={{\n                          backgroundColor: themeColors.background.primary,\n                          color: themeColors.text.primary,\n                          borderColor: themeColors.border.secondary,\n                        }}\n                      >\n                        <option value=\"python\">Python</option>\n                        <option value=\"javascript\">JavaScript</option>\n                        <option value=\"java\">Java</option>\n                        <option value=\"cpp\">C++</option>\n                      </select>\n                    </div>\n\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => executeCode(false)}\n                        disabled={isLoading}\n                        className=\"px-4 py-1 rounded-md transition-colors duration-150\"\n                        style={{\n                          backgroundColor: themeColors.border.primary,\n                          color: themeColors.text.primary,\n                          opacity: isLoading ? 0.7 : 1,\n                        }}\n                      >\n                        Run\n                      </button>\n                      <button\n                        onClick={() => executeCode(true)}\n                        disabled={isLoading}\n                        className=\"px-4 py-1 rounded-md transition-colors duration-150\"\n                        style={{\n                          backgroundColor: themeColors.text.accent,\n                          color: themeColors.text.primary,\n                          opacity: isLoading ? 0.7 : 1,\n                        }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"h-[calc(100%-48px)] overflow-hidden\">\n                    <CodeEditor\n                      code={code}\n                      language={language}\n                      onCodeChange={handleCodeChange}\n                      onLanguageChange={handleLanguageChange}\n                      isDarkMode={isDarkMode}\n                      themeColors={themeColors}\n                    />\n                  </div>\n                </div>\n\n                {/* Test Cases and Results Section */}\n                <div className=\"w-full h-full overflow-hidden\">\n                  <div className=\"flex h-full\">\n                    {/* Test Cases Panel */}\n                    <div className=\"w-1/2 border-r\" style={{ borderColor: themeColors.border.primary }}>\n                      <TestCasePanel\n                        testCases={testCases}\n                        hiddenTestCases={hiddenTestCases}\n                        activeTestCase={activeTestCase}\n                        onTestCaseChange={setActiveTestCase}\n                        isDarkMode={isDarkMode}\n                        onAddTestCase={handleAddTestCase}\n                        onTestInput={handleTestInput}\n                        themeColors={themeColors}\n                      />\n                    </div>\n\n                    {/* Test Results Panel */}\n                    <div className=\"w-1/2\">\n                      <TestResultPanel\n                        output={output}\n                        isDarkMode={isDarkMode}\n                        themeColors={themeColors}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </Split>\n            </div>\n          </Split>\n        </ResizeWrapper>\n      </main>\n\n      <Footer isDarkMode={isDarkMode} />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}